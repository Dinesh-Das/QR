{"version":3,"file":"static/js/658.0c8b648a.chunk.js","mappings":"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","sources":["constants/roles.js","constants/index.js","../node_modules/antd/es/statistic/Number.js","../node_modules/antd/es/statistic/style/index.js","../node_modules/antd/es/statistic/Statistic.js","../node_modules/antd/es/statistic/utils.js","../node_modules/antd/es/statistic/Timer.js","../node_modules/antd/es/statistic/Countdown.js","../node_modules/antd/es/statistic/index.js","screens/Dashboard.js"],"sourcesContent":["/**\n * Role constants that match the backend RoleConstants.java\n */\nexport const ROLES = {\n  ADMIN: 'ADMIN',\n  JVC_USER: 'JVC_USER',\n  PLANT_USER: 'PLANT_USER',\n  CQS_USER: 'CQS_USER',\n  TECH_USER: 'TECH_USER',\n  VIEWER: 'VIEWER'\n};\n\n/**\n * Role types for backend compatibility\n */\nexport const ROLE_TYPES = {\n  ADMIN: 'ADMIN',\n  JVC_ROLE: 'JVC_ROLE',\n  PLANT_ROLE: 'PLANT_ROLE',\n  CQS_ROLE: 'CQS_ROLE',\n  TECH_ROLE: 'TECH_ROLE',\n  VIEWER_ROLE: 'VIEWER_ROLE'\n};\n\n/**\n * Role display names\n */\nexport const ROLE_DISPLAY_NAMES = {\n  [ROLES.ADMIN]: 'Administrator',\n  [ROLES.JVC_USER]: 'JVC User',\n  [ROLES.PLANT_USER]: 'Plant User',\n  [ROLES.CQS_USER]: 'CQS User',\n  [ROLES.TECH_USER]: 'Technical User',\n  [ROLES.VIEWER]: 'Viewer'\n};\n\n/**\n * Role descriptions\n */\nexport const ROLE_DESCRIPTIONS = {\n  [ROLES.ADMIN]: 'Full system access with administrative privileges',\n  [ROLES.JVC_USER]: 'Joint Venture Company user with workflow initiation rights',\n  [ROLES.PLANT_USER]: 'Plant-specific user with questionnaire completion rights',\n  [ROLES.CQS_USER]: 'Corporate Quality Services user with query management rights',\n  [ROLES.TECH_USER]: 'Technical user with system monitoring and audit access',\n  [ROLES.VIEWER]: 'Read-only access to assigned content'\n};\n\n/**\n * Role hierarchy (higher number = more privileges)\n */\nexport const ROLE_HIERARCHY = {\n  [ROLES.VIEWER]: 1,\n  [ROLES.PLANT_USER]: 2,\n  [ROLES.CQS_USER]: 3,\n  [ROLES.JVC_USER]: 3,\n  [ROLES.TECH_USER]: 4,\n  [ROLES.ADMIN]: 5\n};\n\n/**\n * Screen access mapping by role\n */\nexport const SCREEN_ACCESS = {\n  [ROLES.ADMIN]: [\n    '/qrmfg',\n    '/qrmfg/dashboard',\n    '/qrmfg/admin',\n    '/qrmfg/jvc',\n    '/qrmfg/cqs',\n    '/qrmfg/tech',\n    '/qrmfg/plant',\n    '/qrmfg/workflows',\n    '/qrmfg/workflow-monitoring',\n    '/qrmfg/reports',\n    '/qrmfg/users',\n    '/qrmfg/roles',\n    '/qrmfg/sessions',\n    '/qrmfg/user-role-management',\n    '/qrmfg/auditlogs',\n    '/qrmfg/settings'\n  ],\n  [ROLES.JVC_USER]: [\n    '/qrmfg',\n    '/qrmfg/dashboard',\n    '/qrmfg/jvc',\n    '/qrmfg/workflows',\n    '/qrmfg/reports',\n    '/qrmfg/settings'\n  ],\n  [ROLES.CQS_USER]: [\n    '/qrmfg',\n    '/qrmfg/dashboard',\n    '/qrmfg/cqs',\n    '/qrmfg/workflows',\n    '/qrmfg/reports',\n    '/qrmfg/settings'\n  ],\n  [ROLES.TECH_USER]: [\n    '/qrmfg',\n    '/qrmfg/dashboard',\n    '/qrmfg/tech',\n    '/qrmfg/workflows',\n    '/qrmfg/workflow-monitoring',\n    '/qrmfg/reports',\n    '/qrmfg/auditlogs',\n    '/qrmfg/settings'\n  ],\n  [ROLES.PLANT_USER]: [\n    '/qrmfg',\n    '/qrmfg/dashboard',\n    '/qrmfg/plant',\n    '/qrmfg/workflows',\n    '/qrmfg/reports',\n    '/qrmfg/settings'\n  ],\n  [ROLES.VIEWER]: [\n    '/qrmfg',\n    '/qrmfg/dashboard',\n    '/qrmfg/settings'\n  ]\n};\n\n/**\n * Data access permissions by role\n */\nexport const DATA_ACCESS = {\n  [ROLES.ADMIN]: ['*'], // All data\n  [ROLES.JVC_USER]: ['workflow', 'document', 'query', 'jvc'],\n  [ROLES.CQS_USER]: ['workflow', 'document', 'query', 'cqs'],\n  [ROLES.TECH_USER]: ['workflow', 'document', 'query', 'audit', 'system', 'tech'],\n  [ROLES.PLANT_USER]: ['workflow', 'document', 'query', 'plant'],\n  [ROLES.VIEWER]: ['workflow:read', 'document:read']\n};\n\n/**\n * Action permissions by role\n */\nexport const ACTION_PERMISSIONS = {\n  [ROLES.ADMIN]: ['*'], // All actions\n  [ROLES.JVC_USER]: ['create', 'read', 'update', 'initiate'],\n  [ROLES.CQS_USER]: ['create', 'read', 'update', 'respond'],\n  [ROLES.TECH_USER]: ['create', 'read', 'update', 'monitor', 'audit'],\n  [ROLES.PLANT_USER]: ['read', 'update', 'complete'],\n  [ROLES.VIEWER]: ['read']\n};\n\n/**\n * Helper functions\n */\nexport const getRoleDisplayName = (role) => {\n  return ROLE_DISPLAY_NAMES[role] || role;\n};\n\nexport const getRoleDescription = (role) => {\n  return ROLE_DESCRIPTIONS[role] || 'No description available';\n};\n\nexport const getRoleHierarchy = (role) => {\n  return ROLE_HIERARCHY[role] || 0;\n};\n\nexport const hasHigherPrivilege = (role1, role2) => {\n  return getRoleHierarchy(role1) > getRoleHierarchy(role2);\n};\n\nexport const getScreensForRole = (role) => {\n  return SCREEN_ACCESS[role] || [];\n};\n\nexport const getDataAccessForRole = (role) => {\n  return DATA_ACCESS[role] || [];\n};\n\nexport const getActionPermissionsForRole = (role) => {\n  return ACTION_PERMISSIONS[role] || [];\n};\n\nexport const canAccessScreen = (role, screen) => {\n  const screens = getScreensForRole(role);\n  return screens.includes('*') || screens.includes(screen);\n};\n\nexport const canAccessData = (role, dataType) => {\n  const dataAccess = getDataAccessForRole(role);\n  return dataAccess.includes('*') || \n         dataAccess.includes(dataType) || \n         dataAccess.some(access => access.startsWith(`${dataType}:`));\n};\n\nexport const canPerformAction = (role, action) => {\n  const actions = getActionPermissionsForRole(role);\n  return actions.includes('*') || actions.includes(action);\n};","// Application Constants\n\n// API Configuration\nexport const API_CONFIG = {\n  TIMEOUT: 30000, // 30 seconds\n  BASE_URL: process.env.REACT_APP_API_BASE_URL || '/qrmfg/api/v1',\n  RETRY_ATTEMPTS: 3\n};\n\n// Authentication\nexport const AUTH_CONFIG = {\n  TOKEN_KEY: 'qrmfg_secure_token',\n  LOGIN_PATH: '/qrmfg/login',\n  DEFAULT_REDIRECT: '/qrmfg'\n};\n\n// UI Constants\nexport const UI_CONFIG = {\n  MOBILE_BREAKPOINT: 768,\n  TABLET_BREAKPOINT: 1024,\n  PAGE_SIZE: 10,\n  DEBOUNCE_DELAY: 300\n};\n\n// Workflow States\nexport const WORKFLOW_STATES = {\n  INITIATED: 'INITIATED',\n  IN_PROGRESS: 'IN_PROGRESS',\n  PENDING_REVIEW: 'PENDING_REVIEW',\n  APPROVED: 'APPROVED',\n  REJECTED: 'REJECTED',\n  COMPLETED: 'COMPLETED'\n};\n\n// Query States\nexport const QUERY_STATES = {\n  OPEN: 'OPEN',\n  IN_PROGRESS: 'IN_PROGRESS',\n  RESOLVED: 'RESOLVED',\n  CLOSED: 'CLOSED'\n};\n\n// Priority Levels\nexport const PRIORITY_LEVELS = {\n  LOW: 'LOW',\n  MEDIUM: 'MEDIUM',\n  HIGH: 'HIGH',\n  URGENT: 'URGENT',\n  CRITICAL: 'CRITICAL'\n};\n\n// Teams\nexport const TEAMS = {\n  CQS: 'CQS',\n  TECH: 'TECH',\n  JVC: 'JVC'\n};\n\n// Error Severity\nexport const ERROR_SEVERITY = {\n  LOW: 'LOW',\n  MEDIUM: 'MEDIUM',\n  HIGH: 'HIGH',\n  CRITICAL: 'CRITICAL'\n};\n\n// Error Categories\nexport const ERROR_CATEGORY = {\n  APPLICATION: 'APPLICATION',\n  COMPONENT: 'COMPONENT',\n  API: 'API',\n  ROUTE: 'ROUTE',\n  ASYNC: 'ASYNC',\n  AUTHENTICATION: 'AUTHENTICATION'\n};\n\n// Status Colors\nexport const STATUS_COLORS = {\n  [WORKFLOW_STATES.INITIATED]: 'blue',\n  [WORKFLOW_STATES.IN_PROGRESS]: 'orange',\n  [WORKFLOW_STATES.PENDING_REVIEW]: 'purple',\n  [WORKFLOW_STATES.APPROVED]: 'green',\n  [WORKFLOW_STATES.REJECTED]: 'red',\n  [WORKFLOW_STATES.COMPLETED]: 'green'\n};\n\n// Priority Colors\nexport const PRIORITY_COLORS = {\n  [PRIORITY_LEVELS.LOW]: 'green',\n  [PRIORITY_LEVELS.MEDIUM]: 'blue',\n  [PRIORITY_LEVELS.HIGH]: 'orange',\n  [PRIORITY_LEVELS.URGENT]: 'red',\n  [PRIORITY_LEVELS.CRITICAL]: 'red'\n};\n\n// Form Validation\nexport const VALIDATION = {\n  MIN_PASSWORD_LENGTH: 8,\n  MAX_FILE_SIZE: 10 * 1024 * 1024, // 10MB\n  ALLOWED_FILE_TYPES: ['.pdf', '.doc', '.docx', '.xls', '.xlsx', '.jpg', '.jpeg', '.png'],\n  MAX_COMMENT_LENGTH: 1000,\n  MAX_DESCRIPTION_LENGTH: 500\n};\n\n// Date Formats\nexport const DATE_FORMATS = {\n  DISPLAY: 'DD/MM/YYYY',\n  DISPLAY_WITH_TIME: 'DD/MM/YYYY HH:mm',\n  API: 'YYYY-MM-DD',\n  ISO: 'YYYY-MM-DDTHH:mm:ss.SSSZ'\n};\n\n// Local Storage Keys\nexport const STORAGE_KEYS = {\n  USER_PREFERENCES: 'qrmfg_user_preferences',\n  THEME: 'qrmfg_theme',\n  LANGUAGE: 'qrmfg_language'\n};\n\n// Animation Delays\nexport const ANIMATION = {\n  FADE_IN_DELAY: 0.1, // seconds\n  STAGGER_DELAY: 0.05, // seconds\n  TRANSITION_DURATION: 0.3 // seconds\n};\n\n// Notification Types\nexport const NOTIFICATION_TYPES = {\n  SUCCESS: 'success',\n  ERROR: 'error',\n  WARNING: 'warning',\n  INFO: 'info'\n};\n\n// Component Names (for error boundaries)\nexport const COMPONENT_NAMES = {\n  USER_TABLE: 'UserTable',\n  USER_MODAL: 'UserModal',\n  PLANT_ASSIGNMENT_FORM: 'PlantAssignmentForm',\n  PLANT_DASHBOARD: 'PlantDashboard',\n  WORKFLOW_TABLE: 'WorkflowTable',\n  FILTER_PANEL: 'FilterPanel'\n};\n\n// File size constants\nexport const FILE_SIZE = {\n  MAX_UPLOAD_SIZE: 25 * 1024 * 1024, // 25MB\n  BYTES_PER_KB: 1024,\n  BYTES_PER_MB: 1024 * 1024,\n  BYTES_PER_GB: 1024 * 1024 * 1024\n};\n\n// Workflow specific states\nexport const WORKFLOW_SPECIFIC_STATES = {\n  JVC_PENDING: 'JVC_PENDING',\n  PLANT_PENDING: 'PLANT_PENDING',\n  CQS_PENDING: 'CQS_PENDING',\n  TECH_PENDING: 'TECH_PENDING',\n  DRAFT: 'DRAFT',\n  IN_PROGRESS: 'IN_PROGRESS',\n  COMPLETED: 'COMPLETED'\n};\n\n// Query status\nexport const QUERY_STATUS = {\n  OPEN: 'OPEN',\n  RESOLVED: 'RESOLVED',\n  CLOSED: 'CLOSED'\n};\n\n// Query status groups for filtering\nexport const QUERY_STATUS_GROUPS = {\n  ACTIVE: ['OPEN'],\n  INACTIVE: ['RESOLVED', 'CLOSED']\n};\n\n// Team names\nexport const TEAM_NAMES = {\n  CQS: 'CQS',\n  TECH: 'TECH',\n  JVC: 'JVC',\n  PLANT: 'PLANT'\n};\n\n// Auto-save intervals\nexport const AUTO_SAVE = {\n  INTERVAL: 40000, // 40 seconds\n  DEBOUNCE_DELAY: 15000 // 15 seconds\n};\n\n// Pagination defaults\nexport const PAGINATION = {\n  DEFAULT_PAGE_SIZE: 10,\n  SMALL_PAGE_SIZE: 5,\n  LARGE_PAGE_SIZE: 15,\n  SHOW_SIZE_CHANGER: true,\n  SHOW_QUICK_JUMPER: true\n};\n\n// Completion filter options\nexport const COMPLETION_FILTERS = {\n  ALL: 'all',\n  COMPLETED: 'completed',\n  IN_PROGRESS: 'in-progress',\n  NOT_STARTED: 'not-started'\n};\n\n// Tab keys\nexport const TAB_KEYS = {\n  INITIATE: 'initiate',\n  PENDING: 'pending',\n  COMPLETED: 'completed',\n  QUERIES: 'queries',\n  HISTORY: 'history'\n};\n\n// Re-export role constants\nexport * from './roles';\n","\"use client\";\n\nimport * as React from 'react';\nconst StatisticNumber = props => {\n  const {\n    value,\n    formatter,\n    precision,\n    decimalSeparator,\n    groupSeparator = '',\n    prefixCls\n  } = props;\n  let valueNode;\n  if (typeof formatter === 'function') {\n    // Customize formatter\n    valueNode = formatter(value);\n  } else {\n    // Internal formatter\n    const val = String(value);\n    const cells = val.match(/^(-?)(\\d*)(\\.(\\d+))?$/);\n    // Process if illegal number\n    if (!cells || val === '-') {\n      valueNode = val;\n    } else {\n      const negative = cells[1];\n      let int = cells[2] || '0';\n      let decimal = cells[4] || '';\n      int = int.replace(/\\B(?=(\\d{3})+(?!\\d))/g, groupSeparator);\n      if (typeof precision === 'number') {\n        decimal = decimal.padEnd(precision, '0').slice(0, precision > 0 ? precision : 0);\n      }\n      if (decimal) {\n        decimal = `${decimalSeparator}${decimal}`;\n      }\n      valueNode = [/*#__PURE__*/React.createElement(\"span\", {\n        key: \"int\",\n        className: `${prefixCls}-content-value-int`\n      }, negative, int), decimal && (/*#__PURE__*/React.createElement(\"span\", {\n        key: \"decimal\",\n        className: `${prefixCls}-content-value-decimal`\n      }, decimal))];\n    }\n  }\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: `${prefixCls}-content-value`\n  }, valueNode);\n};\nexport default StatisticNumber;","import { resetComponent } from '../../style';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nconst genStatisticStyle = token => {\n  const {\n    componentCls,\n    marginXXS,\n    padding,\n    colorTextDescription,\n    titleFontSize,\n    colorTextHeading,\n    contentFontSize,\n    fontFamily\n  } = token;\n  return {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      [`${componentCls}-title`]: {\n        marginBottom: marginXXS,\n        color: colorTextDescription,\n        fontSize: titleFontSize\n      },\n      [`${componentCls}-skeleton`]: {\n        paddingTop: padding\n      },\n      [`${componentCls}-content`]: {\n        color: colorTextHeading,\n        fontSize: contentFontSize,\n        fontFamily,\n        [`${componentCls}-content-value`]: {\n          display: 'inline-block',\n          direction: 'ltr'\n        },\n        [`${componentCls}-content-prefix, ${componentCls}-content-suffix`]: {\n          display: 'inline-block'\n        },\n        [`${componentCls}-content-prefix`]: {\n          marginInlineEnd: marginXXS\n        },\n        [`${componentCls}-content-suffix`]: {\n          marginInlineStart: marginXXS\n        }\n      }\n    })\n  };\n};\n// ============================== Export ==============================\nexport const prepareComponentToken = token => {\n  const {\n    fontSizeHeading3,\n    fontSize\n  } = token;\n  return {\n    titleFontSize: fontSize,\n    contentFontSize: fontSizeHeading3\n  };\n};\nexport default genStyleHooks('Statistic', token => {\n  const statisticToken = mergeToken(token, {});\n  return [genStatisticStyle(statisticToken)];\n}, prepareComponentToken);","\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport pickAttrs from \"rc-util/es/pickAttrs\";\nimport { useComponentConfig } from '../config-provider/context';\nimport Skeleton from '../skeleton';\nimport StatisticNumber from './Number';\nimport useStyle from './style';\nconst Statistic = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n      prefixCls: customizePrefixCls,\n      className,\n      rootClassName,\n      style,\n      valueStyle,\n      value = 0,\n      title,\n      valueRender,\n      prefix,\n      suffix,\n      loading = false,\n      /* --- FormatConfig starts --- */\n      formatter,\n      precision,\n      decimalSeparator = '.',\n      groupSeparator = ',',\n      /* --- FormatConfig starts --- */\n      onMouseEnter,\n      onMouseLeave\n    } = props,\n    rest = __rest(props, [\"prefixCls\", \"className\", \"rootClassName\", \"style\", \"valueStyle\", \"value\", \"title\", \"valueRender\", \"prefix\", \"suffix\", \"loading\", \"formatter\", \"precision\", \"decimalSeparator\", \"groupSeparator\", \"onMouseEnter\", \"onMouseLeave\"]);\n  const {\n    getPrefixCls,\n    direction,\n    className: contextClassName,\n    style: contextStyle\n  } = useComponentConfig('statistic');\n  const prefixCls = getPrefixCls('statistic', customizePrefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n  const valueNode = /*#__PURE__*/React.createElement(StatisticNumber, {\n    decimalSeparator: decimalSeparator,\n    groupSeparator: groupSeparator,\n    prefixCls: prefixCls,\n    formatter: formatter,\n    precision: precision,\n    value: value\n  });\n  const cls = classNames(prefixCls, {\n    [`${prefixCls}-rtl`]: direction === 'rtl'\n  }, contextClassName, className, rootClassName, hashId, cssVarCls);\n  const internalRef = React.useRef(null);\n  React.useImperativeHandle(ref, () => ({\n    nativeElement: internalRef.current\n  }));\n  const restProps = pickAttrs(rest, {\n    aria: true,\n    data: true\n  });\n  return wrapCSSVar(/*#__PURE__*/React.createElement(\"div\", Object.assign({}, restProps, {\n    ref: internalRef,\n    className: cls,\n    style: Object.assign(Object.assign({}, contextStyle), style),\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave\n  }), title && /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-title`\n  }, title), /*#__PURE__*/React.createElement(Skeleton, {\n    paragraph: false,\n    loading: loading,\n    className: `${prefixCls}-skeleton`\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: valueStyle,\n    className: `${prefixCls}-content`\n  }, prefix && /*#__PURE__*/React.createElement(\"span\", {\n    className: `${prefixCls}-content-prefix`\n  }, prefix), valueRender ? valueRender(valueNode) : valueNode, suffix && /*#__PURE__*/React.createElement(\"span\", {\n    className: `${prefixCls}-content-suffix`\n  }, suffix)))));\n});\nif (process.env.NODE_ENV !== 'production') {\n  Statistic.displayName = 'Statistic';\n}\nexport default Statistic;","// Countdown\nconst timeUnits = [['Y', 1000 * 60 * 60 * 24 * 365],\n// years\n['M', 1000 * 60 * 60 * 24 * 30],\n// months\n['D', 1000 * 60 * 60 * 24],\n// days\n['H', 1000 * 60 * 60],\n// hours\n['m', 1000 * 60],\n// minutes\n['s', 1000],\n// seconds\n['S', 1] // million seconds\n];\nexport function formatTimeStr(duration, format) {\n  let leftDuration = duration;\n  const escapeRegex = /\\[[^\\]]*]/g;\n  const keepList = (format.match(escapeRegex) || []).map(str => str.slice(1, -1));\n  const templateText = format.replace(escapeRegex, '[]');\n  const replacedText = timeUnits.reduce((current, [name, unit]) => {\n    if (current.includes(name)) {\n      const value = Math.floor(leftDuration / unit);\n      leftDuration -= value * unit;\n      return current.replace(new RegExp(`${name}+`, 'g'), match => {\n        const len = match.length;\n        return value.toString().padStart(len, '0');\n      });\n    }\n    return current;\n  }, templateText);\n  let index = 0;\n  return replacedText.replace(escapeRegex, () => {\n    const match = keepList[index];\n    index += 1;\n    return match;\n  });\n}\nexport function formatCounter(value, config, down) {\n  const {\n    format = ''\n  } = config;\n  const target = new Date(value).getTime();\n  const current = Date.now();\n  const diff = down ? Math.max(target - current, 0) : Math.max(current - target, 0);\n  return formatTimeStr(diff, format);\n}","\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { useEvent } from 'rc-util';\nimport raf from \"rc-util/es/raf\";\nimport { cloneElement } from '../_util/reactNode';\nimport Statistic from './Statistic';\nimport { formatCounter } from './utils';\nfunction getTime(value) {\n  return new Date(value).getTime();\n}\nconst StatisticTimer = props => {\n  const {\n      value,\n      format = 'HH:mm:ss',\n      onChange,\n      onFinish,\n      type\n    } = props,\n    rest = __rest(props, [\"value\", \"format\", \"onChange\", \"onFinish\", \"type\"]);\n  const down = type === 'countdown';\n  // We reuse state here to do same as `forceUpdate`\n  const [showTime, setShowTime] = React.useState(null);\n  // ======================== Update ========================\n  const update = useEvent(() => {\n    const now = Date.now();\n    const timestamp = getTime(value);\n    setShowTime({});\n    const timeDiff = !down ? now - timestamp : timestamp - now;\n    onChange === null || onChange === void 0 ? void 0 : onChange(timeDiff);\n    // Only countdown will trigger `onFinish`\n    if (down && timestamp < now) {\n      onFinish === null || onFinish === void 0 ? void 0 : onFinish();\n      return false;\n    }\n    return true;\n  });\n  // Effect trigger\n  React.useEffect(() => {\n    let rafId;\n    const clear = () => raf.cancel(rafId);\n    const rafUpdate = () => {\n      rafId = raf(() => {\n        if (update()) {\n          rafUpdate();\n        }\n      });\n    };\n    rafUpdate();\n    return clear;\n  }, [value, down]);\n  React.useEffect(() => {\n    setShowTime({});\n  }, []);\n  // ======================== Format ========================\n  const formatter = (formatValue, config) => showTime ? formatCounter(formatValue, Object.assign(Object.assign({}, config), {\n    format\n  }), down) : '-';\n  const valueRender = node => cloneElement(node, {\n    title: undefined\n  });\n  // ======================== Render ========================\n  return /*#__PURE__*/React.createElement(Statistic, Object.assign({}, rest, {\n    value: value,\n    valueRender: valueRender,\n    formatter: formatter\n  }));\n};\nexport default StatisticTimer;","\"use client\";\n\nimport * as React from 'react';\nimport { devUseWarning } from '../_util/warning';\nimport StatisticTimer from './Timer';\nconst Countdown = props => {\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('Countdown');\n    warning.deprecated(false, '<Statistic.Countdown />', '<Statistic.Timer type=\"countdown\" />');\n  }\n  return /*#__PURE__*/React.createElement(StatisticTimer, Object.assign({}, props, {\n    type: \"countdown\"\n  }));\n};\nexport default /*#__PURE__*/React.memo(Countdown);","\"use client\";\n\nimport Countdown from './Countdown';\nimport Statistic from './Statistic';\nimport Timer from './Timer';\nStatistic.Timer = Timer;\nStatistic.Countdown = Countdown;\nexport default Statistic;","import { Card, Row, Col, Statistic, Typography, Table, Divider, Tabs } from 'antd';\nimport React, { useEffect, useState } from 'react';\n\nimport apiClient from '../api/client';\nimport { FILE_SIZE } from '../constants';\n\nconst { Title } = Typography;\nconst { TabPane } = Tabs;\n\nconst Dashboard = () => {\n  // User Analytics State\n  const [userStats, setUserStats] = useState({ total: 0, active: 0 });\n  const [roleDist, setRoleDist] = useState([]);\n  const [activityTimeline, setActivityTimeline] = useState([]);\n  \n  // System Health State\n  const [health, setHealth] = useState({});\n  const [systemStats, setSystemStats] = useState({});\n  \n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    const fetchDashboardData = async () => {\n      setLoading(true);\n      try {\n        const [userStats, roleDistribution, activityTimeline, health, systemStats] = await Promise.all([\n          apiClient.get('/reports/analytics/user-stats', { signal: controller.signal }).catch(() => ({ total: 0, active: 0 })),\n          apiClient.get('/reports/analytics/role-distribution', { signal: controller.signal }).catch(() => ({})),\n          apiClient.get('/reports/analytics/activity-timeline', { signal: controller.signal }).catch(() => ({})),\n          apiClient.get('/system/health', { signal: controller.signal }).catch(() => ({})),\n          apiClient.get('/system/stats', { signal: controller.signal }).catch(() => ({}))\n        ]);\n\n        if (!controller.signal.aborted) {\n          setUserStats(userStats);\n          setRoleDist(Object.entries(roleDistribution).map(([role, count]) => ({ role, count })));\n          setActivityTimeline(\n            Object.entries(activityTimeline).map(([date, count]) => ({ date, count }))\n          );\n          setHealth(health);\n          setSystemStats(systemStats);\n        }\n      } catch (error) {\n        if (!controller.signal.aborted) {\n          console.error('Failed to fetch dashboard data:', error);\n        }\n      } finally {\n        if (!controller.signal.aborted) {\n          setLoading(false);\n        }\n      }\n    };\n\n    fetchDashboardData();\n\n    return () => {\n      controller.abort();\n    };\n  }, []);\n\n  const formatBytes = bytes => {\n    if (bytes === 0) {\n      return '0 Bytes';\n    }\n    const k = FILE_SIZE.BYTES_PER_KB || 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return `${parseFloat((bytes / Math.pow(k, i)).toFixed(2))} ${sizes[i]}`;\n  };\n\n  const formatUptime = ms => {\n    const seconds = Math.floor(ms / 1000);\n    const days = Math.floor(seconds / 86400);\n    const hours = Math.floor((seconds % 86400) / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    return `${days}d ${hours}h ${minutes}m`;\n  };\n\n  const renderOverviewTab = () => (\n    <>\n      <Row gutter={16} style={{ marginBottom: 24 }}>\n        <Col span={6}>\n          <Card>\n            <Statistic\n              title=\"System Status\"\n              value={health.status || 'Unknown'}\n              valueStyle={{ color: health.status === 'UP' ? '#3f8600' : '#cf1322' }}\n              loading={loading}\n            />\n          </Card>\n        </Col>\n        <Col span={6}>\n          <Card>\n            <Statistic title=\"Total Users\" value={userStats.total} loading={loading} />\n          </Card>\n        </Col>\n        <Col span={6}>\n          <Card>\n            <Statistic title=\"Active Users\" value={userStats.active || systemStats.activeUsers || 0} loading={loading} />\n          </Card>\n        </Col>\n        <Col span={6}>\n          <Card>\n            <Statistic\n              title=\"Uptime\"\n              value={health.uptime ? formatUptime(health.uptime) : 'N/A'}\n              loading={loading}\n            />\n          </Card>\n        </Col>\n      </Row>\n\n      <Row gutter={16} style={{ marginBottom: 24 }}>\n        <Col span={12}>\n          <Card title=\"Role Distribution\">\n            <Table\n              dataSource={roleDist}\n              columns={[\n                { \n                  title: 'Role', \n                  dataIndex: 'role',\n                  render: text => text.replace(/_/g, ' ').toLowerCase().replace(/\\b\\w/g, l => l.toUpperCase())\n                },\n                { title: 'Count', dataIndex: 'count' }\n              ]}\n              rowKey=\"role\"\n              pagination={false}\n              loading={loading}\n              size=\"small\"\n            />\n          </Card>\n        </Col>\n        <Col span={12}>\n          <Card title=\"Recent Activity\">\n            <Table\n              dataSource={activityTimeline.slice(0, 10)}\n              columns={[\n                { title: 'Date', dataIndex: 'date' },\n                { title: 'Activities', dataIndex: 'count' }\n              ]}\n              rowKey=\"date\"\n              pagination={false}\n              loading={loading}\n              size=\"small\"\n            />\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n\n  const renderSystemTab = () => (\n    <>\n      <Row gutter={16} style={{ marginBottom: 24 }}>\n        <Col span={6}>\n          <Card>\n            <Statistic\n              title=\"System Status\"\n              value={health.status || 'Unknown'}\n              valueStyle={{ color: health.status === 'UP' ? '#3f8600' : '#cf1322' }}\n              loading={loading}\n            />\n          </Card>\n        </Col>\n        <Col span={6}>\n          <Card>\n            <Statistic\n              title=\"Memory Used\"\n              value={health.memory ? formatBytes(health.memory) : 'N/A'}\n              loading={loading}\n            />\n          </Card>\n        </Col>\n        <Col span={6}>\n          <Card>\n            <Statistic\n              title=\"Uptime\"\n              value={health.uptime ? formatUptime(health.uptime) : 'N/A'}\n              loading={loading}\n            />\n          </Card>\n        </Col>\n        <Col span={6}>\n          <Card>\n            <Statistic title=\"Active Sessions\" value={systemStats.activeSessions || 0} loading={loading} />\n          </Card>\n        </Col>\n      </Row>\n\n      <Row gutter={16}>\n        <Col span={24}>\n          <Card title=\"System Metrics\">\n            <Table\n              dataSource={Object.entries(systemStats).map(([key, value]) => ({\n                key,\n                metric: key.replace(/([A-Z])/g, ' $1').toLowerCase(),\n                value: typeof value === 'number' ? value.toLocaleString() : value\n              }))}\n              columns={[\n                {\n                  title: 'Metric',\n                  dataIndex: 'metric',\n                  key: 'metric',\n                  render: text => text.charAt(0).toUpperCase() + text.slice(1)\n                },\n                {\n                  title: 'Value',\n                  dataIndex: 'value',\n                  key: 'value'\n                }\n              ]}\n              pagination={false}\n              loading={loading}\n              size=\"small\"\n            />\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n\n  const renderAnalyticsTab = () => (\n    <>\n      <Row gutter={16} style={{ marginBottom: 24 }}>\n        <Col span={8}>\n          <Card>\n            <Statistic title=\"Total Users\" value={userStats.total} loading={loading} />\n          </Card>\n        </Col>\n        <Col span={8}>\n          <Card>\n            <Statistic title=\"Active Users\" value={userStats.active} loading={loading} />\n          </Card>\n        </Col>\n        <Col span={8}>\n          <Card>\n            <Statistic \n              title=\"User Activity Rate\" \n              value={userStats.total > 0 ? Math.round((userStats.active / userStats.total) * 100) : 0}\n              suffix=\"%\" \n              loading={loading} \n            />\n          </Card>\n        </Col>\n      </Row>\n\n      <Row gutter={16}>\n        <Col span={12}>\n          <Card title=\"User Role Distribution\">\n            <Table\n              dataSource={roleDist}\n              columns={[\n                { \n                  title: 'Role', \n                  dataIndex: 'role',\n                  render: text => text.replace(/_/g, ' ').toLowerCase().replace(/\\b\\w/g, l => l.toUpperCase())\n                },\n                { title: 'Count', dataIndex: 'count' },\n                { \n                  title: 'Percentage', \n                  dataIndex: 'count',\n                  render: (count) => {\n                    const total = roleDist.reduce((sum, item) => sum + item.count, 0);\n                    return total > 0 ? `${Math.round((count / total) * 100)}%` : '0%';\n                  }\n                }\n              ]}\n              rowKey=\"role\"\n              pagination={false}\n              loading={loading}\n              size=\"small\"\n            />\n          </Card>\n        </Col>\n        <Col span={12}>\n          <Card title=\"Activity Timeline\">\n            <Table\n              dataSource={activityTimeline}\n              columns={[\n                { title: 'Date', dataIndex: 'date' },\n                { title: 'Activities', dataIndex: 'count' }\n              ]}\n              rowKey=\"date\"\n              pagination={{ pageSize: 10 }}\n              loading={loading}\n              size=\"small\"\n            />\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n\n  return (\n    <div style={{ padding: 24 }}>\n      <Title level={2}>System Dashboard</Title>\n      \n      <Tabs defaultActiveKey=\"overview\" size=\"large\">\n        <TabPane tab=\"Overview\" key=\"overview\">\n          {renderOverviewTab()}\n        </TabPane>\n        \n        <TabPane tab=\"System Health\" key=\"system\">\n          {renderSystemTab()}\n        </TabPane>\n        \n        <TabPane tab=\"User Analytics\" key=\"analytics\">\n          {renderAnalyticsTab()}\n        </TabPane>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"names":["UI_CONFIG","MOBILE_BREAKPOINT","TABLET_BREAKPOINT","PAGE_SIZE","DEBOUNCE_DELAY","WORKFLOW_STATES","INITIATED","IN_PROGRESS","PENDING_REVIEW","APPROVED","REJECTED","COMPLETED","PRIORITY_LEVELS","LOW","MEDIUM","HIGH","URGENT","CRITICAL","FILE_SIZE","MAX_UPLOAD_SIZE","BYTES_PER_KB","BYTES_PER_MB","BYTES_PER_GB","WORKFLOW_SPECIFIC_STATES","JVC_PENDING","PLANT_PENDING","CQS_PENDING","TECH_PENDING","DRAFT","QUERY_STATUS","OPEN","RESOLVED","CLOSED","QUERY_STATUS_GROUPS","ACTIVE","INACTIVE","TEAM_NAMES","CQS","TECH","JVC","PLANT","AUTO_SAVE","INTERVAL","PAGINATION","DEFAULT_PAGE_SIZE","SMALL_PAGE_SIZE","LARGE_PAGE_SIZE","SHOW_SIZE_CHANGER","SHOW_QUICK_JUMPER","COMPLETION_FILTERS","ALL","NOT_STARTED","TAB_KEYS","INITIATE","PENDING","QUERIES","HISTORY","props","value","formatter","precision","decimalSeparator","groupSeparator","prefixCls","valueNode","val","String","cells","match","negative","int","decimal","replace","padEnd","slice","React","key","className","genStatisticStyle","token","componentCls","marginXXS","padding","colorTextDescription","titleFontSize","colorTextHeading","contentFontSize","fontFamily","Object","assign","resetComponent","marginBottom","color","fontSize","paddingTop","display","direction","marginInlineEnd","marginInlineStart","genStyleHooks","statisticToken","mergeToken","fontSizeHeading3","__rest","s","e","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","Statistic","ref","customizePrefixCls","rootClassName","style","valueStyle","title","valueRender","prefix","suffix","loading","onMouseEnter","onMouseLeave","rest","getPrefixCls","contextClassName","contextStyle","useComponentConfig","wrapCSSVar","hashId","cssVarCls","useStyle","StatisticNumber","cls","classNames","internalRef","nativeElement","current","restProps","pickAttrs","aria","data","Skeleton","paragraph","timeUnits","formatCounter","config","down","format","target","Date","getTime","now","duration","leftDuration","escapeRegex","keepList","map","str","templateText","replacedText","reduce","_ref","name","unit","includes","Math","floor","RegExp","len","toString","padStart","index","formatTimeStr","max","onChange","onFinish","type","showTime","setShowTime","update","useEvent","timestamp","rafId","rafUpdate","raf","clear","cancel","node","cloneElement","undefined","formatValue","Countdown","StatisticTimer","Timer","Title","Typography","TabPane","Tabs","Dashboard","userStats","setUserStats","useState","total","active","roleDist","setRoleDist","activityTimeline","setActivityTimeline","health","setHealth","systemStats","setSystemStats","setLoading","useEffect","controller","AbortController","async","roleDistribution","Promise","all","apiClient","get","signal","catch","aborted","entries","role","count","_ref2","date","error","console","fetchDashboardData","abort","formatBytes","bytes","k","log","parseFloat","pow","toFixed","formatUptime","ms","seconds","_jsxs","children","_jsx","level","defaultActiveKey","size","tab","_Fragment","Row","gutter","Col","span","Card","status","activeUsers","uptime","Table","dataSource","columns","dataIndex","render","text","toLowerCase","l","toUpperCase","rowKey","pagination","memory","activeSessions","_ref3","metric","toLocaleString","charAt","round","sum","item","pageSize"],"sourceRoot":""}