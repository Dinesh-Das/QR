{"version":3,"file":"static/js/184.4d444d9a.chunk.js","mappings":"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","sources":["screens/Sessions.js","components/NotificationDefaults.js","screens/admin.js","constants/roles.js","constants/index.js","hooks/useRoleBasedAccess.js","components/RoleBasedComponent.js","screens/Auditlogs.js","screens/Roles.js","screens/UserRoleManagement.js"],"sourcesContent":["import { Table, Button, Typography } from 'antd';\nimport React, { useState, useEffect } from 'react';\n\nimport apiClient from '../api/client';\n\nconst { Title } = Typography;\n\nconst Sessions = () => {\n  const [sessions, setSessions] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const fetchSessions = async signal => {\n    setLoading(true);\n    try {\n      const response = await apiClient.get('/admin/sessions', { signal });\n      if (!signal?.aborted) {\n        // Ensure response is always an array\n        const safeSessions = Array.isArray(response) ? response : [];\n        setSessions(safeSessions);\n      }\n    } catch (error) {\n      if (!signal?.aborted) {\n        console.error('Failed to fetch sessions:', error);\n        // Set empty array on error\n        setSessions([]);\n      }\n    } finally {\n      if (!signal?.aborted) {\n        setLoading(false);\n      }\n    }\n  };\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    fetchSessions(controller.signal);\n\n    return () => {\n      controller.abort();\n    };\n  }, []);\n\n  const handleTerminate = async sessionId => {\n    try {\n      await apiClient.delete(`/admin/sessions/${sessionId}`);\n      fetchSessions();\n    } catch (error) {\n      console.error('Failed to terminate session:', error);\n    }\n  };\n\n  const columns = [\n    {\n      title: 'Session ID',\n      dataIndex: 'id',\n      key: 'id'\n    },\n    {\n      title: 'User',\n      dataIndex: 'user',\n      key: 'user'\n    },\n    {\n      title: 'Start Time',\n      dataIndex: 'startTime',\n      key: 'startTime'\n    },\n    {\n      title: 'Last Activity',\n      dataIndex: 'lastActivity',\n      key: 'lastActivity'\n    },\n    {\n      title: 'Actions',\n      key: 'actions',\n      render: (_, record) => (\n        <Button type=\"primary\" danger onClick={() => handleTerminate(record.id)}>\n          Terminate\n        </Button>\n      )\n    }\n  ];\n\n  return (\n    <div>\n      <Title level={2}>Active Sessions</Title>\n      <Table columns={columns} dataSource={sessions} rowKey=\"id\" loading={loading} />\n    </div>\n  );\n};\n\nexport default Sessions;\n","import { SettingOutlined, UserOutlined, TeamOutlined, SaveOutlined, EyeOutlined } from '@ant-design/icons';\r\nimport {\r\n  Card,\r\n  Form,\r\n  Switch,\r\n  Button,\r\n  message,\r\n  Divider,\r\n  Typography,\r\n  Space,\r\n  Tabs,\r\n  Row,\r\n  Col,\r\n  Alert,\r\n  Modal,\r\n  Input\r\n} from 'antd';\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\n\r\nimport apiClient from '../api/client';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst NotificationDefaults = () => {\r\n  const [generalForm] = Form.useForm();\r\n  const [cqsForm] = Form.useForm();\r\n  const [jvcForm] = Form.useForm();\r\n  const [plantForm] = Form.useForm();\r\n  const [techForm] = Form.useForm();\r\n  \r\n  const [loading, setLoading] = useState(false);\r\n  const [config, setConfig] = useState({\r\n    generalDefaults: {},\r\n    roleBasedDefaults: {}\r\n  });\r\n  const [previewModalVisible, setPreviewModalVisible] = useState(false);\r\n  const [previewData, setPreviewData] = useState(null);\r\n\r\n  const loadConfiguration = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const data = await apiClient.get('/admin/notification-defaults/config');\r\n      if (data.success) {\r\n        setConfig(data);\r\n        \r\n        // Set form values\r\n        generalForm.setFieldsValue(data.generalDefaults || {});\r\n        cqsForm.setFieldsValue(data.roleBasedDefaults?.CQS || {});\r\n        jvcForm.setFieldsValue(data.roleBasedDefaults?.JVC || {});\r\n        plantForm.setFieldsValue(data.roleBasedDefaults?.PLANT || {});\r\n        techForm.setFieldsValue(data.roleBasedDefaults?.TECH || {});\r\n        \r\n        message.success('Configuration loaded successfully');\r\n      } else {\r\n        message.error(`Failed to load configuration: ${data.message}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to load notification defaults configuration:', error);\r\n      message.error('Failed to load configuration');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [generalForm, cqsForm, jvcForm, plantForm, techForm]);\r\n\r\n  useEffect(() => {\r\n    loadConfiguration();\r\n  }, [loadConfiguration]);\r\n\r\n  const saveGeneralDefaults = async (values) => {\r\n    setLoading(true);\r\n    try {\r\n      const data = await apiClient.post('/admin/notification-defaults/update-general-defaults', values);\r\n      if (data.success) {\r\n        message.success('General defaults saved successfully');\r\n        loadConfiguration(); // Reload to get updated config\r\n      } else {\r\n        message.error(`Failed to save general defaults: ${data.message}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to save general defaults:', error);\r\n      message.error('Failed to save general defaults');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const saveRoleDefaults = async (role, values) => {\r\n    setLoading(true);\r\n    try {\r\n      const data = await apiClient.post(`/admin/notification-defaults/update-role-defaults?role=${role}`, values);\r\n      if (data.success) {\r\n        message.success(`${role} role defaults saved successfully`);\r\n        loadConfiguration(); // Reload to get updated config\r\n      } else {\r\n        message.error(`Failed to save ${role} defaults: ${data.message}`);\r\n      }\r\n    } catch (error) {\r\n      console.error(`Failed to save ${role} defaults:`, error);\r\n      message.error(`Failed to save ${role} defaults`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const previewDefaults = async (role) => {\r\n    try {\r\n      const data = await apiClient.get(`/admin/notification-defaults/preview?role=${role}`);\r\n      if (data.success) {\r\n        setPreviewData({ role, preferences: data.defaultPreferences });\r\n        setPreviewModalVisible(true);\r\n      } else {\r\n        message.error(`Failed to preview defaults: ${data.message}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to preview defaults:', error);\r\n      message.error('Failed to preview defaults');\r\n    }\r\n  };\r\n\r\n  const notificationTypes = [\r\n    {\r\n      key: 'WORKFLOW_CREATED',\r\n      label: 'Workflow Created',\r\n      description: 'When a new MSDS workflow is created'\r\n    },\r\n    {\r\n      key: 'WORKFLOW_COMPLETED',\r\n      label: 'Workflow Completed',\r\n      description: 'When a workflow is completed'\r\n    },\r\n    {\r\n      key: 'WORKFLOW_STATE_CHANGED',\r\n      label: 'Workflow State Changed',\r\n      description: 'When workflow state transitions occur'\r\n    },\r\n    {\r\n      key: 'WORKFLOW_OVERDUE',\r\n      label: 'Workflow Overdue',\r\n      description: 'When workflows become overdue'\r\n    },\r\n    {\r\n      key: 'QUERY_RAISED',\r\n      label: 'Query Raised',\r\n      description: 'When new queries are raised'\r\n    },\r\n    {\r\n      key: 'QUERY_RESOLVED',\r\n      label: 'Query Resolved',\r\n      description: 'When queries are resolved'\r\n    },\r\n    {\r\n      key: 'QUERY_ASSIGNED',\r\n      label: 'Query Assigned',\r\n      description: 'When queries are assigned to teams'\r\n    },\r\n    {\r\n      key: 'QUERY_OVERDUE',\r\n      label: 'Query Overdue',\r\n      description: 'When queries become overdue'\r\n    }\r\n  ];\r\n\r\n  const renderNotificationForm = (form, onFinish, title, description) => (\r\n    <Form form={form} layout=\"vertical\" onFinish={onFinish}>\r\n      <Alert\r\n        message={title}\r\n        description={description}\r\n        type=\"info\"\r\n        showIcon\r\n        style={{ marginBottom: 16 }}\r\n      />\r\n      \r\n      <Row gutter={[16, 16]}>\r\n        {notificationTypes.map(type => (\r\n          <Col xs={24} sm={12} md={8} key={type.key}>\r\n            <Card size=\"small\" style={{ height: '100%' }}>\r\n              <div style={{ display: 'flex', flexDirection: 'column', height: '100%' }}>\r\n                <div style={{ flex: 1 }}>\r\n                  <Text strong style={{ fontSize: '14px' }}>{type.label}</Text>\r\n                  <br />\r\n                  <Text type=\"secondary\" style={{ fontSize: '12px' }}>\r\n                    {type.description}\r\n                  </Text>\r\n                </div>\r\n                <div style={{ marginTop: 12, textAlign: 'center' }}>\r\n                  <Form.Item\r\n                    name={type.key}\r\n                    valuePropName=\"checked\"\r\n                    style={{ margin: 0 }}\r\n                  >\r\n                    <Switch \r\n                      checkedChildren=\"ON\" \r\n                      unCheckedChildren=\"OFF\"\r\n                      size=\"small\"\r\n                    />\r\n                  </Form.Item>\r\n                </div>\r\n              </div>\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n      \r\n      <div style={{ marginTop: 24, textAlign: 'center' }}>\r\n        <Button \r\n          type=\"primary\" \r\n          htmlType=\"submit\" \r\n          loading={loading}\r\n          icon={<SaveOutlined />}\r\n          size=\"large\"\r\n        >\r\n          Save Defaults\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n\r\n  return (\r\n    <div style={{ padding: '24px' }}>\r\n      <div style={{ marginBottom: '24px' }}>\r\n        <Title level={2}>\r\n          <SettingOutlined style={{ marginRight: '8px' }} />\r\n          Default Notification Preferences\r\n        </Title>\r\n        <Text type=\"secondary\">\r\n          Configure which notification types are enabled by default when new users are created.\r\n          Users can later modify their individual preferences.\r\n        </Text>\r\n      </div>\r\n\r\n      <div style={{ marginBottom: 16 }}>\r\n        <Space>\r\n          <Button \r\n            onClick={loadConfiguration}\r\n            loading={loading}\r\n            icon={<SettingOutlined />}\r\n          >\r\n            Reload Configuration\r\n          </Button>\r\n          <Button \r\n            onClick={() => previewDefaults('CQS')}\r\n            icon={<EyeOutlined />}\r\n          >\r\n            Preview CQS Defaults\r\n          </Button>\r\n          <Button \r\n            onClick={() => previewDefaults('JVC')}\r\n            icon={<EyeOutlined />}\r\n          >\r\n            Preview JVC Defaults\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n\r\n      <Tabs \r\n        defaultActiveKey=\"general\" \r\n        type=\"card\"\r\n        items={[\r\n          {\r\n            key: 'general',\r\n            label: (\r\n              <span>\r\n                <UserOutlined />\r\n                General Defaults\r\n              </span>\r\n            ),\r\n            children: renderNotificationForm(\r\n              generalForm,\r\n              saveGeneralDefaults,\r\n              \"General Default Preferences\",\r\n              \"These preferences apply to all new users unless overridden by role-specific settings.\"\r\n            )\r\n          },\r\n          {\r\n            key: 'cqs',\r\n            label: (\r\n              <span>\r\n                <TeamOutlined />\r\n                CQS Role\r\n              </span>\r\n            ),\r\n            children: renderNotificationForm(\r\n              cqsForm,\r\n              (values) => saveRoleDefaults('CQS', values),\r\n              \"CQS Role Default Preferences\",\r\n              \"Default preferences for users with CQS role. These override general defaults.\"\r\n            )\r\n          },\r\n          {\r\n            key: 'jvc',\r\n            label: (\r\n              <span>\r\n                <TeamOutlined />\r\n                JVC Role\r\n              </span>\r\n            ),\r\n            children: renderNotificationForm(\r\n              jvcForm,\r\n              (values) => saveRoleDefaults('JVC', values),\r\n              \"JVC Role Default Preferences\",\r\n              \"Default preferences for users with JVC role. These override general defaults.\"\r\n            )\r\n          },\r\n          {\r\n            key: 'plant',\r\n            label: (\r\n              <span>\r\n                <TeamOutlined />\r\n                Plant Role\r\n              </span>\r\n            ),\r\n            children: renderNotificationForm(\r\n              plantForm,\r\n              (values) => saveRoleDefaults('PLANT', values),\r\n              \"Plant Role Default Preferences\",\r\n              \"Default preferences for users with Plant role. These override general defaults.\"\r\n            )\r\n          },\r\n          {\r\n            key: 'tech',\r\n            label: (\r\n              <span>\r\n                <TeamOutlined />\r\n                Tech Role\r\n              </span>\r\n            ),\r\n            children: renderNotificationForm(\r\n              techForm,\r\n              (values) => saveRoleDefaults('TECH', values),\r\n              \"Tech Role Default Preferences\",\r\n              \"Default preferences for users with Tech role. These override general defaults.\"\r\n            )\r\n          }\r\n        ]}\r\n      />\r\n\r\n      {/* Preview Modal */}\r\n      <Modal\r\n        title={`Preview Default Preferences - ${previewData?.role} Role`}\r\n        visible={previewModalVisible}\r\n        onCancel={() => setPreviewModalVisible(false)}\r\n        footer={[\r\n          <Button key=\"close\" onClick={() => setPreviewModalVisible(false)}>\r\n            Close\r\n          </Button>\r\n        ]}\r\n        width={600}\r\n      >\r\n        {previewData && (\r\n          <div>\r\n            <Alert\r\n              message={`Default preferences for ${previewData.role} role users`}\r\n              description=\"These are the notification preferences that will be automatically created for new users with this role.\"\r\n              type=\"info\"\r\n              showIcon\r\n              style={{ marginBottom: 16 }}\r\n            />\r\n            \r\n            <Row gutter={[16, 8]}>\r\n              {Object.entries(previewData.preferences).map(([type, enabled]) => (\r\n                <Col xs={24} sm={12} key={type}>\r\n                  <div style={{ \r\n                    display: 'flex', \r\n                    justifyContent: 'space-between', \r\n                    alignItems: 'center',\r\n                    padding: '8px 12px',\r\n                    backgroundColor: enabled ? '#f6ffed' : '#fff2f0',\r\n                    border: `1px solid ${enabled ? '#b7eb8f' : '#ffccc7'}`,\r\n                    borderRadius: '4px'\r\n                  }}>\r\n                    <Text>{type.replace(/_/g, ' ')}</Text>\r\n                    <Text strong style={{ color: enabled ? '#52c41a' : '#ff4d4f' }}>\r\n                      {enabled ? 'ENABLED' : 'DISABLED'}\r\n                    </Text>\r\n                  </div>\r\n                </Col>\r\n              ))}\r\n            </Row>\r\n          </div>\r\n        )}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotificationDefaults;","import { Menu } from 'antd';\nimport React from 'react';\nimport { Link, Routes, Route, useLocation, useNavigate } from 'react-router-dom';\n\nimport NotificationDefaults from '../components/NotificationDefaults';\nimport { AdminOnly } from '../components/RoleBasedComponent';\nimport { useRoleBasedAccess } from '../hooks/useRoleBasedAccess';\n\nimport AuditLogs from './Auditlogs';\nimport Roles from './Roles';\nimport Sessions from './Sessions';\nimport UserRoleManagement from './UserRoleManagement';\nimport Users from './Users';\nimport WorkflowMonitoring from './WorkflowMonitoring';\n\nconst AdminPanel = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const currentPath = location.pathname;\n\n  // Use role-based access control\n  const { isAdmin } = useRoleBasedAccess();\n\n  const menuItems = [\n    { key: '/qrmfg/admin/users', label: 'Users' },\n    // Hiding Roles from Admin Dashboard as requested\n    // { key: '/qrmfg/admin/roles', label: 'Roles' },\n    { key: '/qrmfg/admin/auditlogs', label: 'Audit Logs' },\n    { key: '/qrmfg/admin/sessions', label: 'Sessions' },\n    // Hiding User Role Management from Admin Dashboard as requested\n    // { key: '/qrmfg/admin/user-role-management', label: 'User Role Management' },\n    { key: '/qrmfg/admin/notification-defaults', label: 'Notification Defaults' }\n    // Hiding Legacy Monitoring from Admin Dashboard as requested\n    // { key: '/qrmfg/admin/workflow-monitoring', label: 'Legacy Monitoring' }\n  ];\n\n  // If we're at /qrmfg/admin, redirect to /qrmfg/admin/users\n  React.useEffect(() => {\n    if (currentPath === '/qrmfg/admin') {\n      navigate('/qrmfg/admin/users');\n    }\n  }, [currentPath, navigate]);\n\n  return (\n    <AdminOnly>\n      <div style={{ padding: 24 }}>\n        <h2>Admin Panel</h2>\n        <Menu\n          mode=\"horizontal\"\n          selectedKeys={[currentPath]}\n          items={menuItems.map(item => ({\n            ...item,\n            label: <Link to={item.key}>{item.label}</Link>\n          }))}\n          style={{ marginBottom: 24 }}\n        />\n        <div style={{ marginTop: 24 }}>\n          <Routes>\n            <Route path=\"users\" element={<Users />} />\n            {/* Hiding Roles route from Admin Dashboard as requested */}\n            {/* <Route path=\"roles\" element={<Roles />} /> */}\n            {/* <Route path=\"auditlogs\" element={<AuditLogs />} /> */}\n            {/* <Route path=\"sessions\" element={<Sessions />} /> */}\n            {/* Hiding User Role Management route from Admin Dashboard as requested */}\n            {/* <Route path=\"user-role-management\" element={<UserRoleManagement />} /> */}\n            <Route path=\"notification-defaults\" element={<NotificationDefaults />} />\n            {/* Hiding Legacy Monitoring route from Admin Dashboard as requested */}\n            {/* <Route path=\"workflow-monitoring\" element={<WorkflowMonitoring />} /> */}\n          </Routes>\n        </div>\n      </div>\n    </AdminOnly>\n  );\n};\n\nexport default AdminPanel;\n","/**\n * Role constants that match the backend RoleConstants.java\n */\nexport const ROLES = {\n  ADMIN: 'ADMIN',\n  JVC_USER: 'JVC_USER',\n  PLANT_USER: 'PLANT_USER',\n  CQS_USER: 'CQS_USER',\n  TECH_USER: 'TECH_USER',\n  VIEWER: 'VIEWER'\n};\n\n/**\n * Role types for backend compatibility\n */\nexport const ROLE_TYPES = {\n  ADMIN: 'ADMIN',\n  JVC_ROLE: 'JVC_ROLE',\n  PLANT_ROLE: 'PLANT_ROLE',\n  CQS_ROLE: 'CQS_ROLE',\n  TECH_ROLE: 'TECH_ROLE',\n  VIEWER_ROLE: 'VIEWER_ROLE'\n};\n\n/**\n * Role display names\n */\nexport const ROLE_DISPLAY_NAMES = {\n  [ROLES.ADMIN]: 'Administrator',\n  [ROLES.JVC_USER]: 'JVC User',\n  [ROLES.PLANT_USER]: 'Plant User',\n  [ROLES.CQS_USER]: 'CQS User',\n  [ROLES.TECH_USER]: 'Technical User',\n  [ROLES.VIEWER]: 'Viewer'\n};\n\n/**\n * Role descriptions\n */\nexport const ROLE_DESCRIPTIONS = {\n  [ROLES.ADMIN]: 'Full system access with administrative privileges',\n  [ROLES.JVC_USER]: 'Joint Venture Company user with workflow initiation rights',\n  [ROLES.PLANT_USER]: 'Plant-specific user with questionnaire completion rights',\n  [ROLES.CQS_USER]: 'Corporate Quality Services user with query management rights',\n  [ROLES.TECH_USER]: 'Technical user with system monitoring and audit access',\n  [ROLES.VIEWER]: 'Read-only access to assigned content'\n};\n\n/**\n * Role hierarchy (higher number = more privileges)\n */\nexport const ROLE_HIERARCHY = {\n  [ROLES.VIEWER]: 1,\n  [ROLES.PLANT_USER]: 2,\n  [ROLES.CQS_USER]: 3,\n  [ROLES.JVC_USER]: 3,\n  [ROLES.TECH_USER]: 4,\n  [ROLES.ADMIN]: 5\n};\n\n/**\n * Screen access mapping by role\n */\nexport const SCREEN_ACCESS = {\n  [ROLES.ADMIN]: [\n    '/qrmfg',\n    '/qrmfg/dashboard',\n    '/qrmfg/admin',\n    '/qrmfg/jvc',\n    '/qrmfg/cqs',\n    '/qrmfg/tech',\n    '/qrmfg/plant',\n    '/qrmfg/workflows',\n    '/qrmfg/workflow-monitoring',\n    '/qrmfg/reports',\n    '/qrmfg/users',\n    '/qrmfg/roles',\n    '/qrmfg/sessions',\n    '/qrmfg/user-role-management',\n    '/qrmfg/auditlogs',\n    '/qrmfg/settings'\n  ],\n  [ROLES.JVC_USER]: [\n    '/qrmfg',\n    '/qrmfg/dashboard',\n    '/qrmfg/jvc',\n    '/qrmfg/workflows',\n    '/qrmfg/reports',\n    '/qrmfg/settings'\n  ],\n  [ROLES.CQS_USER]: [\n    '/qrmfg',\n    '/qrmfg/dashboard',\n    '/qrmfg/cqs',\n    '/qrmfg/workflows',\n    '/qrmfg/reports',\n    '/qrmfg/settings'\n  ],\n  [ROLES.TECH_USER]: [\n    '/qrmfg',\n    '/qrmfg/dashboard',\n    '/qrmfg/tech',\n    '/qrmfg/workflows',\n    '/qrmfg/workflow-monitoring',\n    '/qrmfg/reports',\n    '/qrmfg/auditlogs',\n    '/qrmfg/settings'\n  ],\n  [ROLES.PLANT_USER]: [\n    '/qrmfg',\n    '/qrmfg/dashboard',\n    '/qrmfg/plant',\n    '/qrmfg/workflows',\n    '/qrmfg/reports',\n    '/qrmfg/settings'\n  ],\n  [ROLES.VIEWER]: [\n    '/qrmfg',\n    '/qrmfg/dashboard',\n    '/qrmfg/settings'\n  ]\n};\n\n/**\n * Data access permissions by role\n */\nexport const DATA_ACCESS = {\n  [ROLES.ADMIN]: ['*'], // All data\n  [ROLES.JVC_USER]: ['workflow', 'document', 'query', 'jvc'],\n  [ROLES.CQS_USER]: ['workflow', 'document', 'query', 'cqs'],\n  [ROLES.TECH_USER]: ['workflow', 'document', 'query', 'audit', 'system', 'tech'],\n  [ROLES.PLANT_USER]: ['workflow', 'document', 'query', 'plant'],\n  [ROLES.VIEWER]: ['workflow:read', 'document:read']\n};\n\n/**\n * Action permissions by role\n */\nexport const ACTION_PERMISSIONS = {\n  [ROLES.ADMIN]: ['*'], // All actions\n  [ROLES.JVC_USER]: ['create', 'read', 'update', 'initiate'],\n  [ROLES.CQS_USER]: ['create', 'read', 'update', 'respond'],\n  [ROLES.TECH_USER]: ['create', 'read', 'update', 'monitor', 'audit'],\n  [ROLES.PLANT_USER]: ['read', 'update', 'complete'],\n  [ROLES.VIEWER]: ['read']\n};\n\n/**\n * Helper functions\n */\nexport const getRoleDisplayName = (role) => {\n  return ROLE_DISPLAY_NAMES[role] || role;\n};\n\nexport const getRoleDescription = (role) => {\n  return ROLE_DESCRIPTIONS[role] || 'No description available';\n};\n\nexport const getRoleHierarchy = (role) => {\n  return ROLE_HIERARCHY[role] || 0;\n};\n\nexport const hasHigherPrivilege = (role1, role2) => {\n  return getRoleHierarchy(role1) > getRoleHierarchy(role2);\n};\n\nexport const getScreensForRole = (role) => {\n  return SCREEN_ACCESS[role] || [];\n};\n\nexport const getDataAccessForRole = (role) => {\n  return DATA_ACCESS[role] || [];\n};\n\nexport const getActionPermissionsForRole = (role) => {\n  return ACTION_PERMISSIONS[role] || [];\n};\n\nexport const canAccessScreen = (role, screen) => {\n  const screens = getScreensForRole(role);\n  return screens.includes('*') || screens.includes(screen);\n};\n\nexport const canAccessData = (role, dataType) => {\n  const dataAccess = getDataAccessForRole(role);\n  return dataAccess.includes('*') || \n         dataAccess.includes(dataType) || \n         dataAccess.some(access => access.startsWith(`${dataType}:`));\n};\n\nexport const canPerformAction = (role, action) => {\n  const actions = getActionPermissionsForRole(role);\n  return actions.includes('*') || actions.includes(action);\n};","// Application Constants\n\n// API Configuration\nexport const API_CONFIG = {\n  TIMEOUT: 30000, // 30 seconds\n  BASE_URL: process.env.REACT_APP_API_BASE_URL || '/qrmfg/api/v1',\n  RETRY_ATTEMPTS: 3\n};\n\n// Authentication\nexport const AUTH_CONFIG = {\n  TOKEN_KEY: 'qrmfg_secure_token',\n  LOGIN_PATH: '/qrmfg/login',\n  DEFAULT_REDIRECT: '/qrmfg'\n};\n\n// UI Constants\nexport const UI_CONFIG = {\n  MOBILE_BREAKPOINT: 768,\n  TABLET_BREAKPOINT: 1024,\n  PAGE_SIZE: 10,\n  DEBOUNCE_DELAY: 300\n};\n\n// Workflow States\nexport const WORKFLOW_STATES = {\n  INITIATED: 'INITIATED',\n  IN_PROGRESS: 'IN_PROGRESS',\n  PENDING_REVIEW: 'PENDING_REVIEW',\n  APPROVED: 'APPROVED',\n  REJECTED: 'REJECTED',\n  COMPLETED: 'COMPLETED'\n};\n\n// Query States\nexport const QUERY_STATES = {\n  OPEN: 'OPEN',\n  IN_PROGRESS: 'IN_PROGRESS',\n  RESOLVED: 'RESOLVED',\n  CLOSED: 'CLOSED'\n};\n\n// Priority Levels\nexport const PRIORITY_LEVELS = {\n  LOW: 'LOW',\n  MEDIUM: 'MEDIUM',\n  HIGH: 'HIGH',\n  URGENT: 'URGENT',\n  CRITICAL: 'CRITICAL'\n};\n\n// Teams\nexport const TEAMS = {\n  CQS: 'CQS',\n  TECH: 'TECH',\n  JVC: 'JVC'\n};\n\n// Error Severity\nexport const ERROR_SEVERITY = {\n  LOW: 'LOW',\n  MEDIUM: 'MEDIUM',\n  HIGH: 'HIGH',\n  CRITICAL: 'CRITICAL'\n};\n\n// Error Categories\nexport const ERROR_CATEGORY = {\n  APPLICATION: 'APPLICATION',\n  COMPONENT: 'COMPONENT',\n  API: 'API',\n  ROUTE: 'ROUTE',\n  ASYNC: 'ASYNC',\n  AUTHENTICATION: 'AUTHENTICATION'\n};\n\n// Status Colors\nexport const STATUS_COLORS = {\n  [WORKFLOW_STATES.INITIATED]: 'blue',\n  [WORKFLOW_STATES.IN_PROGRESS]: 'orange',\n  [WORKFLOW_STATES.PENDING_REVIEW]: 'purple',\n  [WORKFLOW_STATES.APPROVED]: 'green',\n  [WORKFLOW_STATES.REJECTED]: 'red',\n  [WORKFLOW_STATES.COMPLETED]: 'green'\n};\n\n// Priority Colors\nexport const PRIORITY_COLORS = {\n  [PRIORITY_LEVELS.LOW]: 'green',\n  [PRIORITY_LEVELS.MEDIUM]: 'blue',\n  [PRIORITY_LEVELS.HIGH]: 'orange',\n  [PRIORITY_LEVELS.URGENT]: 'red',\n  [PRIORITY_LEVELS.CRITICAL]: 'red'\n};\n\n// Form Validation\nexport const VALIDATION = {\n  MIN_PASSWORD_LENGTH: 8,\n  MAX_FILE_SIZE: 10 * 1024 * 1024, // 10MB\n  ALLOWED_FILE_TYPES: ['.pdf', '.doc', '.docx', '.xls', '.xlsx', '.jpg', '.jpeg', '.png'],\n  MAX_COMMENT_LENGTH: 1000,\n  MAX_DESCRIPTION_LENGTH: 500\n};\n\n// Date Formats\nexport const DATE_FORMATS = {\n  DISPLAY: 'DD/MM/YYYY',\n  DISPLAY_WITH_TIME: 'DD/MM/YYYY HH:mm',\n  API: 'YYYY-MM-DD',\n  ISO: 'YYYY-MM-DDTHH:mm:ss.SSSZ'\n};\n\n// Local Storage Keys\nexport const STORAGE_KEYS = {\n  USER_PREFERENCES: 'qrmfg_user_preferences',\n  THEME: 'qrmfg_theme',\n  LANGUAGE: 'qrmfg_language'\n};\n\n// Animation Delays\nexport const ANIMATION = {\n  FADE_IN_DELAY: 0.1, // seconds\n  STAGGER_DELAY: 0.05, // seconds\n  TRANSITION_DURATION: 0.3 // seconds\n};\n\n// Notification Types\nexport const NOTIFICATION_TYPES = {\n  SUCCESS: 'success',\n  ERROR: 'error',\n  WARNING: 'warning',\n  INFO: 'info'\n};\n\n// Component Names (for error boundaries)\nexport const COMPONENT_NAMES = {\n  USER_TABLE: 'UserTable',\n  USER_MODAL: 'UserModal',\n  PLANT_ASSIGNMENT_FORM: 'PlantAssignmentForm',\n  PLANT_DASHBOARD: 'PlantDashboard',\n  WORKFLOW_TABLE: 'WorkflowTable',\n  FILTER_PANEL: 'FilterPanel'\n};\n\n// File size constants\nexport const FILE_SIZE = {\n  MAX_UPLOAD_SIZE: 25 * 1024 * 1024, // 25MB\n  BYTES_PER_KB: 1024,\n  BYTES_PER_MB: 1024 * 1024,\n  BYTES_PER_GB: 1024 * 1024 * 1024\n};\n\n// Workflow specific states\nexport const WORKFLOW_SPECIFIC_STATES = {\n  JVC_PENDING: 'JVC_PENDING',\n  PLANT_PENDING: 'PLANT_PENDING',\n  CQS_PENDING: 'CQS_PENDING',\n  TECH_PENDING: 'TECH_PENDING',\n  DRAFT: 'DRAFT',\n  IN_PROGRESS: 'IN_PROGRESS',\n  COMPLETED: 'COMPLETED'\n};\n\n// Query status\nexport const QUERY_STATUS = {\n  OPEN: 'OPEN',\n  RESOLVED: 'RESOLVED',\n  CLOSED: 'CLOSED'\n};\n\n// Query status groups for filtering\nexport const QUERY_STATUS_GROUPS = {\n  ACTIVE: ['OPEN'],\n  INACTIVE: ['RESOLVED', 'CLOSED']\n};\n\n// Team names\nexport const TEAM_NAMES = {\n  CQS: 'CQS',\n  TECH: 'TECH',\n  JVC: 'JVC',\n  PLANT: 'PLANT'\n};\n\n// Auto-save intervals\nexport const AUTO_SAVE = {\n  INTERVAL: 40000, // 40 seconds\n  DEBOUNCE_DELAY: 15000 // 15 seconds\n};\n\n// Pagination defaults\nexport const PAGINATION = {\n  DEFAULT_PAGE_SIZE: 10,\n  SMALL_PAGE_SIZE: 5,\n  LARGE_PAGE_SIZE: 15,\n  SHOW_SIZE_CHANGER: true,\n  SHOW_QUICK_JUMPER: true\n};\n\n// Completion filter options\nexport const COMPLETION_FILTERS = {\n  ALL: 'all',\n  COMPLETED: 'completed',\n  IN_PROGRESS: 'in-progress',\n  NOT_STARTED: 'not-started'\n};\n\n// Tab keys\nexport const TAB_KEYS = {\n  INITIATE: 'initiate',\n  PENDING: 'pending',\n  COMPLETED: 'completed',\n  QUERIES: 'queries',\n  HISTORY: 'history'\n};\n\n// Re-export role constants\nexport * from './roles';\n","import { useState, useEffect, useCallback } from 'react';\n\nimport { \n  isAuthenticated, \n  isAdmin, \n  isJvcUser, \n  isCqsUser, \n  isTechUser, \n  isPlantUser, \n  isViewer,\n  hasRole,\n  getPrimaryRoleType,\n  getUserPlantCodes,\n  getPrimaryPlantCode,\n  getCurrentUser\n} from '../services/auth';\nimport RBACService from '../services/rbacService';\n\n/**\n * Custom hook for role-based access control\n * Provides reactive access to user roles and permissions\n */\nexport const useRoleBasedAccess = () => {\n  const [accessSummary, setAccessSummary] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Load user access summary\n  const loadAccessSummary = useCallback(async () => {\n    if (!isAuthenticated()) {\n      setAccessSummary(null);\n      setLoading(false);\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const summary = await RBACService.getUserAccessSummary();\n      setAccessSummary(summary);\n    } catch (err) {\n      console.warn('Failed to load access summary, using fallback:', err);\n      setError(err);\n      \n      // Use fallback data\n      const fallbackSummary = RBACService.getFallbackAccessSummary();\n      setAccessSummary(fallbackSummary);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    loadAccessSummary();\n  }, [loadAccessSummary]);\n\n  // Check screen access\n  const checkScreenAccess = useCallback(async (screenRoute) => {\n    try {\n      return await RBACService.hasScreenAccess(screenRoute);\n    } catch (error) {\n      console.warn('Screen access check failed, using fallback:', error);\n      return RBACService.getFallbackScreenAccess(screenRoute);\n    }\n  }, []);\n\n  // Check data access\n  const checkDataAccess = useCallback(async (dataType, context = {}) => {\n    try {\n      return await RBACService.hasDataAccess(dataType, context);\n    } catch (error) {\n      console.warn('Data access check failed, using fallback:', error);\n      return RBACService.getFallbackDataAccess(dataType, context);\n    }\n  }, []);\n\n  // Check plant data access\n  const checkPlantDataAccess = useCallback(async (dataType, plantCode, context = {}) => {\n    try {\n      return await RBACService.hasPlantDataAccess(dataType, plantCode, context);\n    } catch (error) {\n      console.warn('Plant data access check failed, using fallback:', error);\n      return RBACService.getFallbackPlantDataAccess(dataType, plantCode, context);\n    }\n  }, []);\n\n  // Make access decision\n  const makeAccessDecision = useCallback(async (resourceType, resourceId, action, context = {}) => {\n    try {\n      return await RBACService.makeAccessDecision(resourceType, resourceId, action, context);\n    } catch (error) {\n      console.warn('Access decision failed, using fallback:', error);\n      return RBACService.getFallbackAccessDecision(resourceType, resourceId, action, context);\n    }\n  }, []);\n\n  // Filter data by plant access\n  const filterByPlantAccess = useCallback((data, plantExtractor) => {\n    return RBACService.filterDataByPlantAccess(data, plantExtractor);\n  }, []);\n\n  return {\n    // Loading states\n    loading,\n    error,\n    \n    // User info\n    isAuthenticated: isAuthenticated(),\n    currentUser: getCurrentUser(),\n    primaryRole: getPrimaryRoleType(),\n    userPlants: getUserPlantCodes(),\n    primaryPlant: getPrimaryPlantCode(),\n    \n    // Role checks\n    isAdmin: isAdmin(),\n    isJvcUser: isJvcUser(),\n    isCqsUser: isCqsUser(),\n    isTechUser: isTechUser(),\n    isPlantUser: isPlantUser(),\n    isViewer: isViewer(),\n    \n    // Access summary\n    accessSummary,\n    \n    // Helper functions\n    hasRole: (role) => hasRole(role),\n    hasAnyRole: (roles) => roles.some(role => hasRole(role)),\n    hasAllRoles: (roles) => roles.every(role => hasRole(role)),\n    \n    // Async access checks\n    checkScreenAccess,\n    checkDataAccess,\n    checkPlantDataAccess,\n    makeAccessDecision,\n    \n    // Data filtering\n    filterByPlantAccess,\n    \n    // Refresh function\n    refresh: loadAccessSummary\n  };\n};\n\n/**\n * Hook for checking specific screen access\n */\nexport const useScreenAccess = (screenRoute) => {\n  const [hasAccess, setHasAccess] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const checkAccess = async () => {\n      if (!isAuthenticated() || !screenRoute) {\n        setHasAccess(false);\n        setLoading(false);\n        return;\n      }\n\n      try {\n        setLoading(true);\n        setError(null);\n        \n        const access = await RBACService.hasScreenAccess(screenRoute);\n        setHasAccess(access);\n      } catch (err) {\n        console.warn('Screen access check failed:', err);\n        setError(err);\n        \n        // Use fallback\n        const fallbackAccess = RBACService.getFallbackScreenAccess(screenRoute);\n        setHasAccess(fallbackAccess);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    checkAccess();\n  }, [screenRoute]);\n\n  return { hasAccess, loading, error };\n};\n\n/**\n * Hook for checking data access\n */\nexport const useDataAccess = (dataType, context = {}) => {\n  const [hasAccess, setHasAccess] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const checkAccess = async () => {\n      if (!isAuthenticated() || !dataType) {\n        setHasAccess(false);\n        setLoading(false);\n        return;\n      }\n\n      try {\n        setLoading(true);\n        setError(null);\n        \n        const access = await RBACService.hasDataAccess(dataType, context);\n        setHasAccess(access);\n      } catch (err) {\n        console.warn('Data access check failed:', err);\n        setError(err);\n        \n        // Use fallback\n        const fallbackAccess = RBACService.getFallbackDataAccess(dataType, context);\n        setHasAccess(fallbackAccess);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    checkAccess();\n  }, [dataType, context]);\n\n  return { hasAccess, loading, error };\n};\n\n/**\n * Hook for plant-specific data filtering\n */\nexport const usePlantDataFilter = (data, plantExtractor) => {\n  const [filteredData, setFilteredData] = useState([]);\n\n  useEffect(() => {\n    if (!Array.isArray(data)) {\n      setFilteredData([]);\n      return;\n    }\n\n    const filtered = RBACService.filterDataByPlantAccess(data, plantExtractor);\n    setFilteredData(filtered);\n  }, [data, plantExtractor]);\n\n  return filteredData;\n};\n\nexport default useRoleBasedAccess;","import { Result, Spin } from 'antd';\nimport React from 'react';\n\n\nimport { \n  isAuthenticated, \n  isAdmin, \n  isJvcUser, \n  isCqsUser, \n  isTechUser, \n  isPlantUser, \n  isViewer,\n  hasRole,\n  getPrimaryRoleType,\n  getCurrentUser,\n  getToken\n} from '../services/auth';\nimport JWTValidator from '../services/jwtValidator';\n\n/**\n * Role-based component wrapper that conditionally renders content based on user roles\n */\nconst RoleBasedComponent = ({ \n  children, \n  roles = [], \n  requireAll = false, \n  fallback = null, \n  loading = false,\n  showFallback = true \n}) => {\n  \n  if (loading) {\n    return <Spin size=\"large\" />;\n  }\n\n  if (!isAuthenticated()) {\n    return showFallback ? (\n      <Result\n        status=\"warning\"\n        title=\"Authentication Required\"\n        subTitle=\"Please log in to access this content.\"\n      />\n    ) : null;\n  }\n\n  // If no roles specified, show content to all authenticated users\n  if (!roles || roles.length === 0) {\n    return children;\n  }\n\n  // Check role access - admins have access to everything\n  const adminAccess = isAdmin();\n  const roleAccess = requireAll \n    ? roles.every(role => hasRole(role))\n    : roles.some(role => hasRole(role));\n  \n  const hasAccess = adminAccess || roleAccess;\n\n  if (!hasAccess) {\n    if (fallback) {\n      return fallback;\n    }\n    \n    return showFallback ? (\n      <Result\n        status=\"403\"\n        title=\"Access Denied\"\n        subTitle={`This content requires one of the following roles: ${roles.join(', ')} or ADMIN privileges`}\n      />\n    ) : null;\n  }\n\n  return children;\n};\n\n/**\n * Convenience components for specific roles\n */\nexport const AdminOnly = ({ children, fallback = null, showFallback = true }) => {\n  if (!isAuthenticated()) {\n    return showFallback ? (\n      <Result\n        status=\"warning\"\n        title=\"Authentication Required\"\n        subTitle=\"Please log in to access this content.\"\n      />\n    ) : null;\n  }\n\n  // Direct check using multiple methods\n  const currentUser = getCurrentUser();\n  const adminStatus = isAdmin();\n  const hasAdminRole = hasRole('ADMIN');\n  const hasAdminRoleLower = hasRole('admin');\n  const hasRoleAdmin = hasRole('ROLE_ADMIN');\n  \n  // Also check the JWT token directly\n  const token = getToken();\n  let tokenIsAdmin = false;\n  let tokenHasAdminRole = false;\n  \n  if (token) {\n    try {\n      const payload = JWTValidator.getTokenPayload(token);\n      tokenIsAdmin = payload?.isAdmin === true;\n      tokenHasAdminRole = payload?.roles?.includes('ADMIN') || payload?.authorities?.includes('ADMIN');\n    } catch (error) {\n      console.error('Error checking token in AdminOnly:', error);\n    }\n  }\n  \n  const hasAccess = adminStatus || hasAdminRole || hasAdminRoleLower || hasRoleAdmin || tokenIsAdmin || tokenHasAdminRole;\n  \n  // Enhanced debugging\n  console.log('AdminOnly Enhanced Debug:', {\n    currentUser,\n    adminStatus,\n    hasAdminRole,\n    hasAdminRoleLower,\n    hasRoleAdmin,\n    tokenIsAdmin,\n    tokenHasAdminRole,\n    finalHasAccess: hasAccess,\n    token: token ? 'present' : 'missing'\n  });\n\n  if (!hasAccess) {\n    if (fallback) {\n      return fallback;\n    }\n    \n    return showFallback ? (\n      <Result\n        status=\"403\"\n        title=\"Access Denied\"\n        subTitle={`This content requires administrator privileges. Debug: user=${currentUser}, isAdmin=${adminStatus}, hasRole=${hasAdminRole}, tokenAdmin=${tokenIsAdmin}`}\n      />\n    ) : null;\n  }\n\n  return children;\n};\n\nexport const JvcOnly = ({ children, fallback = null, showFallback = true }) => (\n  <RoleBasedComponent \n    roles={['JVC_USER', 'JVC_ROLE', 'ADMIN']} \n    fallback={fallback} \n    showFallback={showFallback}\n  >\n    {children}\n  </RoleBasedComponent>\n);\n\nexport const CqsOnly = ({ children, fallback = null, showFallback = true }) => (\n  <RoleBasedComponent \n    roles={['CQS_USER', 'CQS_ROLE', 'ADMIN']} \n    fallback={fallback} \n    showFallback={showFallback}\n  >\n    {children}\n  </RoleBasedComponent>\n);\n\nexport const TechOnly = ({ children, fallback = null, showFallback = true }) => (\n  <RoleBasedComponent \n    roles={['TECH_USER', 'TECH_ROLE', 'ADMIN']} \n    fallback={fallback} \n    showFallback={showFallback}\n  >\n    {children}\n  </RoleBasedComponent>\n);\n\nexport const PlantOnly = ({ children, fallback = null, showFallback = true }) => (\n  <RoleBasedComponent \n    roles={['PLANT_USER', 'PLANT_ROLE', 'ADMIN']} \n    fallback={fallback} \n    showFallback={showFallback}\n  >\n    {children}\n  </RoleBasedComponent>\n);\n\nexport const NonViewerOnly = ({ children, fallback = null, showFallback = true }) => {\n  if (!isAuthenticated()) {\n    return showFallback ? (\n      <Result\n        status=\"warning\"\n        title=\"Authentication Required\"\n        subTitle=\"Please log in to access this content.\"\n      />\n    ) : null;\n  }\n\n  if (isViewer() && !isAdmin()) {\n    return fallback || (showFallback ? (\n      <Result\n        status=\"403\"\n        title=\"Access Denied\"\n        subTitle=\"Viewers cannot access this content.\"\n      />\n    ) : null);\n  }\n\n  return children;\n};\n\n/**\n * Hook for role-based conditional rendering\n */\nexport const useRoleAccess = () => {\n  return {\n    isAuthenticated: isAuthenticated(),\n    isAdmin: isAdmin(),\n    isJvcUser: isJvcUser(),\n    isCqsUser: isCqsUser(),\n    isTechUser: isTechUser(),\n    isPlantUser: isPlantUser(),\n    isViewer: isViewer(),\n    primaryRole: getPrimaryRoleType(),\n    hasRole: (role) => hasRole(role),\n    hasAnyRole: (roles) => roles.some(role => hasRole(role)),\n    hasAllRoles: (roles) => roles.every(role => hasRole(role))\n  };\n};\n\nexport default RoleBasedComponent;","import {\n  Typography,\n  Table,\n  Form,\n  Input,\n  Select,\n  DatePicker,\n  Button,\n  Row,\n  Col,\n  message\n} from 'antd';\nimport React, { useState, useEffect } from 'react';\n\nimport apiClient from '../api/client';\n\n// eslint-disable-next-line no-undef\nconst { Title } = Typography;\n\nconst Auditlogs = () => {\n  const [logs, setLogs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [form] = Form.useForm();\n  const [filtering, setFiltering] = useState(false);\n\n  const fetchLogs = async signal => {\n    setLoading(true);\n    try {\n      const res = await apiClient.get('/audit/logs', { signal });\n      if (!signal?.aborted) {\n        // Ensure response is always an array\n        const safeLogs = Array.isArray(res) ? res : [];\n        setLogs(safeLogs);\n      }\n    } catch (err) {\n      if (!signal?.aborted) {\n        message.error('Failed to fetch audit logs');\n        console.error('Error fetching audit logs:', err);\n        // Set empty array on error\n        setLogs([]);\n      }\n    } finally {\n      if (!signal?.aborted) {\n        setLoading(false);\n      }\n    }\n  };\n\n  const fetchFilteredLogs = async filters => {\n    setLoading(true);\n    let url = '/audit/logs';\n    if (filters) {\n      if (filters.userId) {\n        url = `/audit/logs/user/${filters.userId}`;\n      } else if (filters.action) {\n        url = `/audit/logs/action/${filters.action}`;\n      } else if (filters.entityType) {\n        url = `/audit/logs/entity/${filters.entityType}`;\n      } else if (filters.severity) {\n        url = `/audit/logs/severity/${filters.severity}`;\n      } else if (filters.dateRange && filters.dateRange.length === 2) {\n        const [start, end] = filters.dateRange;\n        url = `/audit/logs/date?start=${start.toISOString()}&end=${end.toISOString()}`;\n      }\n    }\n    try {\n      const res = await apiClient.get(url);\n      // Ensure response is always an array\n      const safeLogs = Array.isArray(res) ? res : [];\n      setLogs(safeLogs);\n    } catch (err) {\n      message.error('Failed to fetch audit logs');\n      console.error('Error fetching filtered audit logs:', err);\n      // Set empty array on error\n      setLogs([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const onFilter = values => {\n    setFiltering(true);\n    fetchFilteredLogs(values).then(() => setFiltering(false));\n  };\n\n  const onReset = () => {\n    form.resetFields();\n    fetchLogs();\n  };\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    fetchLogs(controller.signal);\n\n    return () => {\n      controller.abort();\n    };\n  }, []);\n\n  const columns = [\n    {\n      title: 'Timestamp',\n      dataIndex: 'timestamp',\n      key: 'timestamp',\n      sorter: (a, b) => new Date(a.timestamp) - new Date(b.timestamp)\n    },\n    {\n      title: 'User',\n      dataIndex: 'user',\n      key: 'user',\n      sorter: (a, b) => a.user.localeCompare(b.user)\n    },\n    {\n      title: 'Action',\n      dataIndex: 'action',\n      key: 'action',\n      sorter: (a, b) => a.action.localeCompare(b.action)\n    },\n    {\n      title: 'Details',\n      dataIndex: 'details',\n      key: 'details',\n      width: '40%'\n    }\n  ];\n\n  return (\n    <div>\n      <Title level={2}>Audit Logs</Title>\n      <Form form={form} layout=\"vertical\" onFinish={onFilter} style={{ marginBottom: 24 }}>\n        <Row gutter={16}>\n          <Col span={4}>\n            <Form.Item name=\"userId\" label=\"User ID\">\n              <Input placeholder=\"User ID\" />\n            </Form.Item>\n          </Col>\n          <Col span={4}>\n            <Form.Item name=\"action\" label=\"Action\">\n              <Input placeholder=\"Action\" />\n            </Form.Item>\n          </Col>\n          <Col span={4}>\n            <Form.Item name=\"entityType\" label=\"Entity\">\n              <Input placeholder=\"Entity Type\" />\n            </Form.Item>\n          </Col>\n          <Col span={4}>\n            <Form.Item name=\"severity\" label=\"Severity\">\n              <Select allowClear placeholder=\"Select severity\">\n                <Select.Option value=\"INFO\">INFO</Select.Option>\n                <Select.Option value=\"WARN\">WARN</Select.Option>\n                <Select.Option value=\"ERROR\">ERROR</Select.Option>\n                <Select.Option value=\"SECURITY\">SECURITY</Select.Option>\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col span={6}>\n            <Form.Item name=\"dateRange\" label=\"Date Range\">\n              <DatePicker.RangePicker showTime style={{ width: '100%' }} />\n            </Form.Item>\n          </Col>\n          <Col span={2} style={{ display: 'flex', alignItems: 'end' }}>\n            <Button type=\"primary\" htmlType=\"submit\" loading={filtering}>\n              Filter\n            </Button>\n          </Col>\n          <Col span={2} style={{ display: 'flex', alignItems: 'end' }}>\n            <Button onClick={onReset}>Reset</Button>\n          </Col>\n        </Row>\n      </Form>\n      <Table columns={columns} dataSource={logs} rowKey=\"id\" loading={loading} bordered />\n    </div>\n  );\n};\n\nexport default Auditlogs;\n","import { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport { Table, Button, Form, Input, Modal, message, Space, Popconfirm, Typography } from 'antd';\nimport React, { useState, useEffect } from 'react';\n\nimport apiClient from '../api/client';\n\nconst { Title } = Typography;\n\nconst Roles = () => {\n  const [roles, setRoles] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [editingRole, setEditingRole] = useState(null);\n  const [form] = Form.useForm();\n\n  const fetchRoles = async signal => {\n    setLoading(true);\n    try {\n      const response = await apiClient.get('/admin/roles', { signal });\n      if (!signal?.aborted) {\n        // Ensure response is always an array\n        const safeRoles = Array.isArray(response) ? response : [];\n        setRoles(safeRoles);\n      }\n    } catch (error) {\n      if (!signal?.aborted) {\n        message.error('Failed to fetch roles');\n        console.error('Error fetching roles:', error);\n        // Set empty array on error\n        setRoles([]);\n      }\n    } finally {\n      if (!signal?.aborted) {\n        setLoading(false);\n      }\n    }\n  };\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    fetchRoles(controller.signal);\n\n    return () => {\n      controller.abort();\n    };\n  }, []);\n\n  const handleAdd = () => {\n    setEditingRole(null);\n    form.resetFields();\n    setModalVisible(true);\n  };\n\n  const handleEdit = role => {\n    setEditingRole(role);\n    form.setFieldsValue(role);\n    setModalVisible(true);\n  };\n\n  const handleDelete = async id => {\n    try {\n      await apiClient.delete(`/admin/roles/${id}`);\n      message.success('Role deleted successfully');\n      fetchRoles();\n    } catch (error) {\n      message.error('Failed to delete role');\n    }\n  };\n\n  const handleModalOk = async () => {\n    try {\n      const values = await form.validateFields();\n      if (editingRole) {\n        await apiClient.put(`/admin/roles/${editingRole.id}`, values);\n        message.success('Role updated successfully');\n      } else {\n        await apiClient.post('/admin/roles', values);\n        message.success('Role created successfully');\n      }\n      setModalVisible(false);\n      form.resetFields();\n      fetchRoles();\n    } catch (error) {\n      if (!error.errorFields) {\n        message.error('Failed to save role');\n      }\n    }\n  };\n\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name'\n    },\n    {\n      title: 'Description',\n      dataIndex: 'description',\n      key: 'description'\n    },\n    {\n      title: 'Actions',\n      key: 'actions',\n      render: (_, record) => (\n        <Space>\n          <Button icon={<EditOutlined />} onClick={() => handleEdit(record)} />\n          <Popconfirm\n            title=\"Are you sure you want to delete this role?\"\n            onConfirm={() => handleDelete(record.id)}\n            okText=\"Yes\"\n            cancelText=\"No\"\n          >\n            <Button icon={<DeleteOutlined />} danger />\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ];\n\n  return (\n    <div>\n      <Title level={2}>Roles</Title>\n      <Button\n        type=\"primary\"\n        icon={<PlusOutlined />}\n        onClick={handleAdd}\n        style={{ marginBottom: 16 }}\n      >\n        Add Role\n      </Button>\n      <Table columns={columns} dataSource={roles} rowKey=\"id\" loading={loading} />\n      <Modal\n        title={editingRole ? 'Edit Role' : 'Add Role'}\n        open={modalVisible}\n        onOk={handleModalOk}\n        onCancel={() => setModalVisible(false)}\n      >\n        <Form form={form} layout=\"vertical\">\n          <Form.Item\n            name=\"name\"\n            label=\"Name\"\n            rules={[{ required: true, message: 'Please input the role name!' }]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            name=\"description\"\n            label=\"Description\"\n            rules={[{ required: true, message: 'Please input the role description!' }]}\n          >\n            <Input.TextArea />\n          </Form.Item>\n        </Form>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Roles;\n","import { UserOutlined, TeamOutlined, EditOutlined } from '@ant-design/icons';\nimport { Table, Card, Button, message, Spin, Typography, Modal, Transfer, Space, Tabs } from 'antd';\nimport React, { useState, useEffect } from 'react';\n\nimport apiClient from '../api/client';\nimport { PAGINATION } from '../constants';\nimport { ensureArray } from '../utils/dataUtils';\n\nconst { Title, Text } = Typography;\nconst { TabPane } = Tabs;\n\nconst UserRoleManagement = () => {\n  const [loading, setLoading] = useState(true);\n  const [userRoles, setUserRoles] = useState([]);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [availableRoles, setAvailableRoles] = useState([]);\n  const [assignedRoleIds, setAssignedRoleIds] = useState([]);\n  const [saveLoading, setSaveLoading] = useState(false);\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    fetchUserRoles(controller.signal);\n\n    return () => {\n      controller.abort();\n    };\n  }, []);\n\n  const fetchUserRoles = async signal => {\n    setLoading(true);\n    try {\n      const response = await apiClient.get('/admin/monitoring/user-roles', { signal });\n      if (!signal?.aborted) {\n        // Ensure response is always an array\n        const safeResponse = ensureArray(response);\n        setUserRoles(safeResponse);\n      }\n    } catch (error) {\n      if (!signal?.aborted) {\n        message.error('Failed to load user role assignments');\n        console.error('Error fetching user roles:', error);\n        // Set empty array on error\n        setUserRoles([]);\n      }\n    } finally {\n      if (!signal?.aborted) {\n        setLoading(false);\n      }\n    }\n  };\n\n  const handleEditRoles = user => {\n    setSelectedUser(user);\n    setAvailableRoles([\n      ...(user.assignedRoles || []).map(role => ({\n        ...role,\n        key: role.id.toString()\n      })),\n      ...(user.availableRoles || []).map(role => ({\n        ...role,\n        key: role.id.toString()\n      }))\n    ]);\n    setAssignedRoleIds((user.assignedRoles || []).map(role => role.id.toString()));\n    setModalVisible(true);\n  };\n\n  const handleTransferChange = nextTargetKeys => {\n    setAssignedRoleIds(nextTargetKeys);\n  };\n\n  const handleSaveRoles = async () => {\n    if (!selectedUser) {\n      return;\n    }\n\n    setSaveLoading(true);\n    try {\n      const roleIds = assignedRoleIds.map(id => parseInt(id, 10));\n      await apiClient.put(`/admin/monitoring/user-roles/${selectedUser.userId}`, roleIds);\n      message.success('User roles updated successfully');\n      setModalVisible(false);\n      fetchUserRoles();\n    } catch (error) {\n      message.error('Failed to update user roles');\n      console.error('Error updating user roles:', error);\n    } finally {\n      setSaveLoading(false);\n    }\n  };\n\n  const columns = [\n    {\n      title: 'Username',\n      dataIndex: 'username',\n      key: 'username',\n      sorter: (a, b) => a.username.localeCompare(b.username)\n    },\n    {\n      title: 'Email',\n      dataIndex: 'email',\n      key: 'email'\n    },\n    {\n      title: 'Assigned Roles',\n      dataIndex: 'assignedRoles',\n      key: 'assignedRoles',\n      render: roles => (roles || []).map(role => role.name).join(', ')\n    },\n    {\n      title: 'Actions',\n      key: 'actions',\n      render: (_, record) => (\n        <Button type=\"primary\" icon={<EditOutlined />} onClick={() => handleEditRoles(record)}>\n          Edit Roles\n        </Button>\n      )\n    }\n  ];\n\n  return (\n    <div>\n      <Title level={2}>User Role Management</Title>\n\n      <Tabs defaultActiveKey=\"1\">\n        <TabPane\n          tab={\n            <span>\n              <UserOutlined />\n              User Roles\n            </span>\n          }\n          key=\"1\"\n        >\n          <Card>\n            <Button type=\"primary\" onClick={fetchUserRoles} style={{ marginBottom: 16 }}>\n              Refresh User Roles\n            </Button>\n\n            {loading ? (\n              <div style={{ textAlign: 'center', padding: '50px' }}>\n                <Spin size=\"large\" />\n                <p>Loading user role assignments...</p>\n              </div>\n            ) : (\n              <Table\n                dataSource={userRoles}\n                columns={columns}\n                rowKey=\"userId\"\n                pagination={{ pageSize: PAGINATION.DEFAULT_PAGE_SIZE }}\n              />\n            )}\n          </Card>\n        </TabPane>\n\n        <TabPane\n          tab={\n            <span>\n              <TeamOutlined />\n              Workflow Permissions\n            </span>\n          }\n          key=\"2\"\n        >\n          <Card>\n            <div style={{ padding: '20px' }}>\n              <Title level={4}>Workflow Role Permissions</Title>\n\n              <Space direction=\"vertical\" style={{ width: '100%' }}>\n                <Card title=\"JVC User Permissions\" size=\"small\">\n                  <ul>\n                    <li>Initiate MSDS workflows for materials</li>\n                    <li>Assign workflows to plant teams</li>\n                    <li>View JVC dashboard with pending extensions</li>\n                    <li>Respond to queries from plant teams</li>\n                  </ul>\n                </Card>\n\n                <Card title=\"Plant User Permissions\" size=\"small\">\n                  <ul>\n                    <li>Complete multi-step questionnaires</li>\n                    <li>Raise queries to CQS/Tech/JVC teams</li>\n                    <li>View plant dashboard with assigned materials</li>\n                    <li>Mark materials as completed</li>\n                  </ul>\n                </Card>\n\n                <Card title=\"CQS User Permissions\" size=\"small\">\n                  <ul>\n                    <li>Receive and resolve queries from plant teams</li>\n                    <li>View CQS dashboard with pending queries</li>\n                    <li>Access material context for queries</li>\n                  </ul>\n                </Card>\n\n                <Card title=\"Tech User Permissions\" size=\"small\">\n                  <ul>\n                    <li>Receive and resolve technical queries from plant teams</li>\n                    <li>View Tech dashboard with pending queries</li>\n                    <li>Access material context for queries</li>\n                  </ul>\n                </Card>\n\n                <Card title=\"Admin Permissions\" size=\"small\">\n                  <ul>\n                    <li>Access workflow monitoring dashboard</li>\n                    <li>Generate query SLA reports</li>\n                    <li>Manage user roles and permissions</li>\n                    <li>Export audit logs and workflow reports</li>\n                    <li>View all workflows regardless of state</li>\n                  </ul>\n                </Card>\n              </Space>\n\n              <Text type=\"secondary\" style={{ marginTop: 16, display: 'block' }}>\n                Note: Users can have multiple roles assigned to them. The permissions are\n                cumulative.\n              </Text>\n            </div>\n          </Card>\n        </TabPane>\n      </Tabs>\n\n      <Modal\n        title=\"Edit User Roles\"\n        open={modalVisible}\n        onOk={handleSaveRoles}\n        onCancel={() => setModalVisible(false)}\n        width={800}\n        confirmLoading={saveLoading}\n      >\n        {selectedUser && (\n          <>\n            <p>\n              <strong>User:</strong> {selectedUser.username} ({selectedUser.email})\n            </p>\n            <p>Assign or remove roles using the transfer control below:</p>\n            <Transfer\n              dataSource={availableRoles}\n              titles={['Available Roles', 'Assigned Roles']}\n              targetKeys={assignedRoleIds}\n              onChange={handleTransferChange}\n              render={item => item.name}\n              listStyle={{\n                width: 350,\n                height: 300\n              }}\n            />\n          </>\n        )}\n      </Modal>\n    </div>\n  );\n};\n\nexport default UserRoleManagement;\n"],"names":["Title","Typography","Sessions","sessions","setSessions","useState","loading","setLoading","fetchSessions","async","response","apiClient","get","signal","aborted","safeSessions","Array","isArray","error","console","useEffect","controller","AbortController","abort","columns","title","dataIndex","key","render","_","record","_jsx","Button","type","danger","onClick","delete","sessionId","handleTerminate","id","children","_jsxs","level","Table","dataSource","rowKey","Text","NotificationDefaults","generalForm","Form","useForm","cqsForm","jvcForm","plantForm","techForm","config","setConfig","generalDefaults","roleBasedDefaults","previewModalVisible","setPreviewModalVisible","previewData","setPreviewData","loadConfiguration","useCallback","data","_data$roleBasedDefaul","_data$roleBasedDefaul2","_data$roleBasedDefaul3","_data$roleBasedDefaul4","success","setFieldsValue","CQS","JVC","PLANT","TECH","message","saveRoleDefaults","role","values","post","previewDefaults","preferences","defaultPreferences","notificationTypes","label","description","renderNotificationForm","form","onFinish","layout","Alert","showIcon","style","marginBottom","Row","gutter","map","Col","xs","sm","md","Card","size","height","display","flexDirection","flex","strong","fontSize","marginTop","textAlign","Item","name","valuePropName","margin","Switch","checkedChildren","unCheckedChildren","htmlType","icon","SaveOutlined","padding","SettingOutlined","marginRight","Space","EyeOutlined","Tabs","defaultActiveKey","items","UserOutlined","TeamOutlined","Modal","visible","onCancel","footer","width","Object","entries","_ref","enabled","justifyContent","alignItems","backgroundColor","border","borderRadius","replace","color","AdminPanel","location","useLocation","navigate","useNavigate","currentPath","pathname","isAdmin","useRoleBasedAccess","React","AdminOnly","Menu","mode","selectedKeys","item","Link","to","Routes","Route","path","element","Users","UI_CONFIG","MOBILE_BREAKPOINT","TABLET_BREAKPOINT","PAGE_SIZE","DEBOUNCE_DELAY","WORKFLOW_STATES","INITIATED","IN_PROGRESS","PENDING_REVIEW","APPROVED","REJECTED","COMPLETED","PRIORITY_LEVELS","LOW","MEDIUM","HIGH","URGENT","CRITICAL","FILE_SIZE","MAX_UPLOAD_SIZE","BYTES_PER_KB","BYTES_PER_MB","BYTES_PER_GB","WORKFLOW_SPECIFIC_STATES","JVC_PENDING","PLANT_PENDING","CQS_PENDING","TECH_PENDING","DRAFT","QUERY_STATUS","OPEN","RESOLVED","CLOSED","QUERY_STATUS_GROUPS","ACTIVE","INACTIVE","TEAM_NAMES","AUTO_SAVE","INTERVAL","PAGINATION","DEFAULT_PAGE_SIZE","SMALL_PAGE_SIZE","LARGE_PAGE_SIZE","SHOW_SIZE_CHANGER","SHOW_QUICK_JUMPER","COMPLETION_FILTERS","ALL","NOT_STARTED","TAB_KEYS","INITIATE","PENDING","QUERIES","HISTORY","accessSummary","setAccessSummary","setError","loadAccessSummary","isAuthenticated","summary","RBACService","getUserAccessSummary","err","warn","fallbackSummary","getFallbackAccessSummary","checkScreenAccess","hasScreenAccess","screenRoute","getFallbackScreenAccess","checkDataAccess","dataType","context","arguments","length","undefined","hasDataAccess","getFallbackDataAccess","checkPlantDataAccess","plantCode","hasPlantDataAccess","getFallbackPlantDataAccess","makeAccessDecision","resourceType","resourceId","action","getFallbackAccessDecision","filterByPlantAccess","plantExtractor","filterDataByPlantAccess","currentUser","getCurrentUser","primaryRole","getPrimaryRoleType","userPlants","getUserPlantCodes","primaryPlant","getPrimaryPlantCode","isJvcUser","isCqsUser","isTechUser","isPlantUser","isViewer","hasRole","hasAnyRole","roles","some","hasAllRoles","every","refresh","RoleBasedComponent","requireAll","fallback","showFallback","Spin","Result","status","subTitle","adminAccess","roleAccess","join","_ref2","adminStatus","hasAdminRole","hasAdminRoleLower","hasRoleAdmin","token","getToken","tokenIsAdmin","tokenHasAdminRole","_payload$roles","_payload$authorities","payload","JWTValidator","getTokenPayload","includes","authorities","hasAccess","log","finalHasAccess","JvcOnly","_ref3","CqsOnly","_ref4","TechOnly","_ref5","PlantOnly","_ref6","Auditlogs","logs","setLogs","filtering","setFiltering","fetchLogs","res","safeLogs","sorter","a","b","Date","timestamp","user","localeCompare","url","filters","userId","entityType","severity","dateRange","start","end","toISOString","fetchFilteredLogs","then","span","Input","placeholder","Select","allowClear","Option","value","DatePicker","RangePicker","showTime","onReset","resetFields","bordered","Roles","setRoles","modalVisible","setModalVisible","editingRole","setEditingRole","fetchRoles","safeRoles","EditOutlined","handleEdit","Popconfirm","onConfirm","handleDelete","okText","cancelText","DeleteOutlined","PlusOutlined","handleAdd","open","onOk","validateFields","put","errorFields","rules","required","TextArea","TabPane","UserRoleManagement","userRoles","setUserRoles","selectedUser","setSelectedUser","availableRoles","setAvailableRoles","assignedRoleIds","setAssignedRoleIds","saveLoading","setSaveLoading","fetchUserRoles","safeResponse","ensureArray","username","handleEditRoles","assignedRoles","toString","tab","pagination","pageSize","direction","roleIds","parseInt","confirmLoading","_Fragment","email","Transfer","titles","targetKeys","onChange","nextTargetKeys","listStyle"],"sourceRoot":""}