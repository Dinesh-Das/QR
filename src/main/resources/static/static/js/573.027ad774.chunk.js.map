{"version":3,"file":"static/js/573.027ad774.chunk.js","mappings":"sLAGA,MAAM,MAAEA,GAAUC,EAAAA,EAEZC,EAAY,YAmDlB,EA1CiBC,KACf,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,IACxBC,aAAaC,QAAQN,IAAc,UA2B5C,OAxBAO,EAAAA,EAAAA,WAAU,KACR,IAAIC,EAAQN,EAQZ,GAPa,WAATA,IACFM,EAdAC,OAAOC,YAAcD,OAAOC,WAAW,gCAAgCC,QAClE,OAEF,SAaLC,SAASC,KAAKC,aAAa,aAAcN,GACzCH,aAAaU,QAAQf,EAAWE,GAGnB,WAATA,EAAmB,CACrB,MAAMc,EAAaP,OAAOC,WAAW,gCAC/BO,EAA0BC,IAC9B,MAAMC,EAAWD,EAAEP,QAAU,OAAS,QACtCC,SAASC,KAAKC,aAAa,aAAcK,IAK3C,OAFAH,EAAWI,iBAAiB,SAAUH,GAE/B,KACLD,EAAWK,oBAAoB,SAAUJ,GAE7C,GACC,CAACf,KAGFoB,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACC,MAAO,CAAEC,SAAU,IAAKC,OAAQ,aAAcC,SAAA,EAClDC,EAAAA,EAAAA,KAAC9B,EAAK,CAAC+B,MAAO,EAAEF,SAAC,cACjBC,EAAAA,EAAAA,KAAA,OAAKJ,MAAO,CAAEM,aAAc,IAAKH,SAAC,iBAClCL,EAAAA,EAAAA,MAACS,EAAAA,GAAAA,MAAW,CAACC,MAAO9B,EAAM+B,SAAUf,GAAKf,EAAQe,EAAEgB,OAAOF,OAAQG,YAAY,QAAOR,SAAA,EACnFC,EAAAA,EAAAA,KAACG,EAAAA,GAAAA,OAAY,CAACC,MAAM,SAAQL,SAAC,YAC7BC,EAAAA,EAAAA,KAACG,EAAAA,GAAAA,OAAY,CAACC,MAAM,QAAOL,SAAC,WAC5BC,EAAAA,EAAAA,KAACG,EAAAA,GAAAA,OAAY,CAACC,MAAM,OAAML,SAAC,e","sources":["screens/Settings.js"],"sourcesContent":["import { Card, Radio, Typography } from 'antd';\nimport React, { useEffect, useState } from 'react';\n\nconst { Title } = Typography;\n\nconst THEME_KEY = 'themeMode';\n\nconst getSystemTheme = () => {\n  if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n    return 'dark';\n  }\n  return 'light';\n};\n\nconst Settings = () => {\n  const [mode, setMode] = useState(() => {\n    return localStorage.getItem(THEME_KEY) || 'system';\n  });\n\n  useEffect(() => {\n    let theme = mode;\n    if (mode === 'system') {\n      theme = getSystemTheme();\n    }\n    document.body.setAttribute('data-theme', theme);\n    localStorage.setItem(THEME_KEY, mode);\n\n    // Add system theme change listener when in system mode\n    if (mode === 'system') {\n      const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n      const handleSystemThemeChange = e => {\n        const newTheme = e.matches ? 'dark' : 'light';\n        document.body.setAttribute('data-theme', newTheme);\n      };\n\n      mediaQuery.addEventListener('change', handleSystemThemeChange);\n\n      return () => {\n        mediaQuery.removeEventListener('change', handleSystemThemeChange);\n      };\n    }\n  }, [mode]);\n\n  return (\n    <Card style={{ maxWidth: 400, margin: '40px auto' }}>\n      <Title level={4}>Settings</Title>\n      <div style={{ marginBottom: 16 }}>Theme Mode:</div>\n      <Radio.Group value={mode} onChange={e => setMode(e.target.value)} buttonStyle=\"solid\">\n        <Radio.Button value=\"system\">System</Radio.Button>\n        <Radio.Button value=\"light\">Light</Radio.Button>\n        <Radio.Button value=\"dark\">Dark</Radio.Button>\n      </Radio.Group>\n    </Card>\n  );\n};\n\nexport default Settings;\n"],"names":["Title","Typography","THEME_KEY","Settings","mode","setMode","useState","localStorage","getItem","useEffect","theme","window","matchMedia","matches","document","body","setAttribute","setItem","mediaQuery","handleSystemThemeChange","e","newTheme","addEventListener","removeEventListener","_jsxs","Card","style","maxWidth","margin","children","_jsx","level","marginBottom","Radio","value","onChange","target","buttonStyle"],"sourceRoot":""}