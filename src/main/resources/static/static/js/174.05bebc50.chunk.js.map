{"version":3,"file":"static/js/174.05bebc50.chunk.js","mappings":"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","sources":["screens/QuestionnaireViewerPage.js","utils/questionnaireUtils.js"],"sourcesContent":["import {\r\n  ArrowLeftOutlined,\r\n  CheckCircleOutlined,\r\n  ClockCircleOutlined,\r\n  FileTextOutlined,\r\n  EyeOutlined,\r\n  InfoCircleOutlined,\r\n  UserOutlined,\r\n  CalendarOutlined,\r\n  CheckOutlined,\r\n  ExclamationCircleOutlined,\r\n  DashboardOutlined,\r\n  BarChartOutlined,\r\n  TeamOutlined,\r\n  SettingOutlined,\r\n  BulbOutlined,\r\n  StarOutlined,\r\n  ThunderboltOutlined,\r\n  SafetyOutlined,\r\n  RocketOutlined,\r\n  CrownOutlined\r\n} from '@ant-design/icons';\r\nimport {\r\n  Card,\r\n  Spin,\r\n  Alert,\r\n  Typography,\r\n  Row,\r\n  Col,\r\n  Tag,\r\n  Divider,\r\n  Steps,\r\n  Collapse,\r\n  Form,\r\n  Input,\r\n  Radio,\r\n  Select,\r\n  Button,\r\n  Space,\r\n  Progress,\r\n  Badge,\r\n  Statistic,\r\n  Avatar,\r\n  Timeline,\r\n  Tabs,\r\n  Empty,\r\n  Tooltip,\r\n  Affix\r\n} from 'antd';\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n\r\n\r\nimport apiClient from '../api/client';\r\nimport { calculateCorrectFieldCounts } from '../utils/questionnaireUtils';\r\n\r\nconst { Title, Text, Paragraph } = Typography;\r\nconst { Panel } = Collapse;\r\nconst { TextArea } = Input;\r\nconst { TabPane } = Tabs;\r\n\r\nconst QuestionnaireViewerPage = ({ workflowId: propWorkflowId, onClose }) => {\r\n  const { workflowId: paramWorkflowId } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  // Use prop workflowId if provided (for modal), otherwise use URL param\r\n  const workflowId = propWorkflowId || paramWorkflowId;\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [questionnaireData, setQuestionnaireData] = useState(null);\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [activeView, setActiveView] = useState('overview');\r\n\r\n  console.log('QuestionnaireViewerPage mounted with workflowId:', workflowId);\r\n\r\n  // Calculate completion metrics at component level for use across tabs\r\n  const plantInputs = questionnaireData?.plantData?.plantInputs || {};\r\n  const { totalFields, completedFields, completionPercentage } =\r\n    questionnaireData ? calculateCorrectFieldCounts(plantInputs, questionnaireData.template?.steps) :\r\n      { totalFields: 0, completedFields: 0, completionPercentage: 0 };\r\n\r\n  // Create overview dashboard\r\n  const renderOverviewDashboard = (questionnaireData) => {\r\n    const { template, plantData, workflow, completionStatus } = questionnaireData;\r\n\r\n    const totalSteps = template?.steps?.length || 0;\r\n    const completedSteps = template?.steps?.filter(step => {\r\n      const stepFields = step.fields || [];\r\n      // Count ALL fields (both CQS and plant fields) for step completion\r\n      const completedFields = stepFields.filter(field => {\r\n        const value = plantData?.plantInputs?.[field.name] || '';\r\n        return value && value.trim() !== '';\r\n      });\r\n      return stepFields.length > 0 && completedFields.length === stepFields.length;\r\n    }).length || 0;\r\n\r\n    const overallProgress = totalSteps > 0 ? Math.round((completedSteps / totalSteps) * 100) : 0;\r\n\r\n    return (\r\n      <div style={{ padding: '0 4px' }}>\r\n        {/* Hero Stats */}\r\n        <Row gutter={[24, 24]} style={{ marginBottom: 32 }}>\r\n          <Col xs={24} sm={12} lg={6}>\r\n            <Card style={{\r\n              background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n              border: 'none',\r\n              borderRadius: 16,\r\n              color: 'white',\r\n              textAlign: 'center'\r\n            }}>\r\n              <Statistic\r\n                title={<span style={{ color: 'rgba(255,255,255,0.8)' }}>Overall Progress</span>}\r\n                value={overallProgress}\r\n                suffix=\"%\"\r\n                valueStyle={{ color: 'white', fontSize: 36, fontWeight: 700 }}\r\n                prefix={<RocketOutlined />}\r\n              />\r\n            </Card>\r\n          </Col>\r\n          <Col xs={24} sm={12} lg={6}>\r\n            <Card style={{\r\n              background: 'linear-gradient(135deg, #f093fb 0%, #f5576c 100%)',\r\n              border: 'none',\r\n              borderRadius: 16,\r\n              color: 'white',\r\n              textAlign: 'center'\r\n            }}>\r\n              <Statistic\r\n                title={<span style={{ color: 'rgba(255,255,255,0.8)' }}>Completed Steps</span>}\r\n                value={completedSteps}\r\n                suffix={`/ ${totalSteps}`}\r\n                valueStyle={{ color: 'white', fontSize: 36, fontWeight: 700 }}\r\n                prefix={<CheckCircleOutlined />}\r\n              />\r\n            </Card>\r\n          </Col>\r\n          <Col xs={24} sm={12} lg={6}>\r\n            <Card style={{\r\n              background: 'linear-gradient(135deg, #4facfe 0%, #00f2fe 100%)',\r\n              border: 'none',\r\n              borderRadius: 16,\r\n              color: 'white',\r\n              textAlign: 'center'\r\n            }}>\r\n              <Statistic\r\n                title={<span style={{ color: 'rgba(255,255,255,0.8)' }}>Total Fields</span>}\r\n                value={totalFields}\r\n                valueStyle={{ color: 'white', fontSize: 36, fontWeight: 700 }}\r\n                prefix={<FileTextOutlined />}\r\n              />\r\n            </Card>\r\n          </Col>\r\n          <Col xs={24} sm={12} lg={6}>\r\n            <Card style={{\r\n              background: 'linear-gradient(135deg, #43e97b 0%, #38f9d7 100%)',\r\n              border: 'none',\r\n              borderRadius: 16,\r\n              color: 'white',\r\n              textAlign: 'center'\r\n            }}>\r\n              <Statistic\r\n                title={<span style={{ color: 'rgba(255,255,255,0.8)' }}>Completed Fields</span>}\r\n                value={completedFields}\r\n                valueStyle={{ color: 'white', fontSize: 36, fontWeight: 700 }}\r\n                prefix={<StarOutlined />}\r\n              />\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* Progress Timeline */}\r\n        <Card\r\n          title={\r\n            <div style={{ display: 'flex', alignItems: 'center', gap: 12 }}>\r\n              <Avatar style={{ backgroundColor: '#1890ff' }} icon={<BarChartOutlined />} />\r\n              <span>Step Progress Timeline</span>\r\n            </div>\r\n          }\r\n          style={{ borderRadius: 16, marginBottom: 24 }}\r\n        >\r\n          <Timeline mode=\"left\">\r\n            {template?.steps?.map((step, index) => {\r\n              const stepFields = step.fields || [];\r\n              // Count ALL fields (both CQS and plant fields) for step progress\r\n              const completedFields = stepFields.filter(field => {\r\n                const value = plantData?.plantInputs?.[field.name] || '';\r\n                return value && value.trim() !== '';\r\n              });\r\n              const stepProgress = stepFields.length > 0 ? Math.round((completedFields.length / stepFields.length) * 100) : 0;\r\n              const isCompleted = stepProgress === 100;\r\n\r\n              return (\r\n                <Timeline.Item\r\n                  key={index}\r\n                  color={isCompleted ? '#52c41a' : stepProgress > 0 ? '#faad14' : '#d9d9d9'}\r\n                  dot={\r\n                    <Avatar\r\n                      size={32}\r\n                      style={{\r\n                        backgroundColor: isCompleted ? '#52c41a' : stepProgress > 0 ? '#faad14' : '#d9d9d9'\r\n                      }}\r\n                    >\r\n                      {isCompleted ? <CheckOutlined /> : step.stepNumber}\r\n                    </Avatar>\r\n                  }\r\n                >\r\n                  <div style={{ paddingBottom: 16 }}>\r\n                    <Title level={5} style={{ margin: 0, marginBottom: 8 }}>\r\n                      {step.title}\r\n                    </Title>\r\n                    <Text type=\"secondary\" style={{ display: 'block', marginBottom: 12 }}>\r\n                      {step.description}\r\n                    </Text>\r\n                    <div style={{ display: 'flex', alignItems: 'center', gap: 16 }}>\r\n                      <Progress\r\n                        percent={stepProgress}\r\n                        size=\"small\"\r\n                        style={{ flex: 1 }}\r\n                        strokeColor={isCompleted ? '#52c41a' : '#1890ff'}\r\n                      />\r\n                      <Text strong style={{ fontSize: 13 }}>\r\n                        {completedFields.length}/{stepFields.length} fields\r\n                      </Text>\r\n                    </div>\r\n                  </div>\r\n                </Timeline.Item>\r\n              );\r\n            })}\r\n          </Timeline>\r\n        </Card>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const loadQuestionnaireData = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      console.log('Loading questionnaire data for workflowId:', workflowId);\r\n      const response = await apiClient.get(`/questionnaire/${workflowId}`);\r\n      console.log('Questionnaire response:', response);\r\n      setQuestionnaireData(response);\r\n      setError(null);\r\n    } catch (err) {\r\n      console.error('Error loading questionnaire:', err);\r\n      console.error('Error details:', err.response?.data || err.message);\r\n      setError('Failed to load questionnaire data. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [workflowId]);\r\n\r\n  useEffect(() => {\r\n    if (workflowId) {\r\n      loadQuestionnaireData();\r\n    } else {\r\n      setError('No workflow ID provided');\r\n      setLoading(false);\r\n    }\r\n  }, [loadQuestionnaireData, workflowId]);\r\n\r\n  const renderFieldValue = (field, plantInputs, cqsData) => {\r\n    const value = plantInputs[field.name] || field.cqsValue || '';\r\n    const isEmpty = !value || value.trim() === '';\r\n    const isCqsField = field.cqsAutoPopulated;\r\n\r\n    // Format value based on field type\r\n    let displayValue = value;\r\n    if (!isEmpty && field.type === 'radio' && field.options) {\r\n      const option = field.options.find(opt => opt.value === value);\r\n      displayValue = option ? option.label : value;\r\n    } else if (!isEmpty && field.type === 'select' && field.options) {\r\n      const option = field.options.find(opt => opt.value === value);\r\n      displayValue = option ? option.label : value;\r\n    }\r\n\r\n    const getFieldIcon = (type) => {\r\n      switch (type) {\r\n        case 'radio': return <CheckCircleOutlined />;\r\n        case 'select': return <SettingOutlined />;\r\n        case 'text': return <FileTextOutlined />;\r\n        case 'textarea': return <FileTextOutlined />;\r\n        default: return <InfoCircleOutlined />;\r\n      }\r\n    };\r\n\r\n    return (\r\n      <Col xs={24} sm={12} lg={8} key={field.name} style={{ marginBottom: 16 }}>\r\n        <Card\r\n          hoverable\r\n          style={{\r\n            height: '100%',\r\n            borderRadius: 16,\r\n            border: isEmpty ? '2px dashed #e8e8e8' : isCqsField ? '2px solid #1890ff' : '2px solid #f0f0f0',\r\n            background: isEmpty ? '#fafafa' : isCqsField ? 'linear-gradient(135deg, #e6f7ff 0%, #f0f9ff 100%)' : '#ffffff',\r\n            transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\r\n            position: 'relative',\r\n            overflow: 'hidden'\r\n          }}\r\n          bodyStyle={{ padding: '20px' }}\r\n        >\r\n          {/* Status indicator */}\r\n          <div style={{\r\n            position: 'absolute',\r\n            top: 0,\r\n            right: 0,\r\n            width: 0,\r\n            height: 0,\r\n            borderLeft: '30px solid transparent',\r\n            borderTop: isEmpty ? '30px solid #faad14' : '30px solid #52c41a'\r\n          }} />\r\n\r\n          {/* Field header */}\r\n          <div style={{ marginBottom: 16, display: 'flex', alignItems: 'flex-start', gap: 12 }}>\r\n            <Avatar\r\n              size={40}\r\n              style={{\r\n                backgroundColor: isEmpty ? '#faad14' : isCqsField ? '#1890ff' : '#52c41a',\r\n                flexShrink: 0\r\n              }}\r\n              icon={getFieldIcon(field.type)}\r\n            />\r\n            <div style={{ flex: 1, minWidth: 0 }}>\r\n              <Text strong style={{\r\n                fontSize: 15,\r\n                color: '#262626',\r\n                display: 'block',\r\n                lineHeight: 1.3,\r\n                marginBottom: 4\r\n              }}>\r\n                {field.label}\r\n                {field.required && <Text type=\"danger\" style={{ marginLeft: 4 }}>*</Text>}\r\n              </Text>\r\n              <div style={{ display: 'flex', gap: 6, flexWrap: 'wrap' }}>\r\n                <Tag\r\n                  color={field.type === 'radio' ? 'blue' : field.type === 'select' ? 'purple' : 'green'}\r\n                  style={{ fontSize: 10, padding: '0 6px', borderRadius: 8 }}\r\n                >\r\n                  {field.type.toUpperCase()}\r\n                </Tag>\r\n                {isCqsField && (\r\n                  <Tag color=\"processing\" style={{ fontSize: 10, padding: '0 6px', borderRadius: 8 }}>\r\n                    AUTO\r\n                  </Tag>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Field value */}\r\n          <div style={{\r\n            padding: '16px',\r\n            backgroundColor: isEmpty ? 'rgba(250, 173, 20, 0.1)' : 'rgba(82, 196, 26, 0.1)',\r\n            borderRadius: 12,\r\n            border: isEmpty ? '1px solid rgba(250, 173, 20, 0.3)' : '1px solid rgba(82, 196, 26, 0.3)',\r\n            minHeight: 60,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            textAlign: 'center'\r\n          }}>\r\n            {isEmpty ? (\r\n              <div>\r\n                <ExclamationCircleOutlined style={{\r\n                  color: '#faad14',\r\n                  fontSize: 20,\r\n                  marginBottom: 8,\r\n                  display: 'block'\r\n                }} />\r\n                <Text type=\"secondary\" style={{ fontSize: 13, fontStyle: 'italic' }}>\r\n                  No data provided\r\n                </Text>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <CheckOutlined style={{\r\n                  color: '#52c41a',\r\n                  fontSize: 16,\r\n                  marginBottom: 8,\r\n                  display: 'block'\r\n                }} />\r\n                <Text strong style={{ fontSize: 14, color: '#262626' }}>\r\n                  {displayValue}\r\n                </Text>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Help text */}\r\n          {field.helpText && (\r\n            <div style={{\r\n              marginTop: 12,\r\n              padding: '8px 12px',\r\n              backgroundColor: 'rgba(24, 144, 255, 0.05)',\r\n              borderRadius: 8,\r\n              borderLeft: '3px solid #1890ff'\r\n            }}>\r\n              <Text type=\"secondary\" style={{ fontSize: 11, lineHeight: 1.4 }}>\r\n                <BulbOutlined style={{ marginRight: 4, color: '#1890ff' }} />\r\n                {field.helpText}\r\n              </Text>\r\n            </div>\r\n          )}\r\n        </Card>\r\n      </Col>\r\n    );\r\n  };\r\n\r\n  const renderStepDetails = (step, plantInputs, cqsData) => {\r\n    // Count ALL fields (both CQS and plant fields) for step details\r\n    const stepFields = step.fields || [];\r\n    const completedFields = stepFields.filter(field => {\r\n      const value = plantInputs[field.name] || '';\r\n      return value && value.trim() !== '';\r\n    }).length;\r\n\r\n    const completionRate = stepFields.length > 0 ? (completedFields / stepFields.length) * 100 : 0;\r\n\r\n    return (\r\n      <div key={step.stepNumber} style={{ marginBottom: 32 }}>\r\n        {/* Step Header */}\r\n        <Card\r\n          style={{\r\n            marginBottom: 24,\r\n            borderRadius: 16,\r\n            background: `linear-gradient(135deg, ${completionRate === 100 ? '#52c41a' : completionRate > 0 ? '#faad14' : '#8c8c8c'\r\n              } 0%, ${completionRate === 100 ? '#73d13d' : completionRate > 0 ? '#ffc53d' : '#bfbfbf'\r\n              } 100%)`,\r\n            border: 'none',\r\n            color: 'white'\r\n          }}\r\n          bodyStyle={{ padding: '24px 32px' }}\r\n        >\r\n          <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n            <div style={{ display: 'flex', alignItems: 'center', gap: 16 }}>\r\n              <Avatar\r\n                size={48}\r\n                style={{\r\n                  backgroundColor: 'rgba(255,255,255,0.2)',\r\n                  color: 'white',\r\n                  fontSize: 20,\r\n                  fontWeight: 700\r\n                }}\r\n              >\r\n                {step.stepNumber}\r\n              </Avatar>\r\n              <div>\r\n                <Title level={3} style={{ margin: 0, color: 'white', fontWeight: 600 }}>\r\n                  {step.title}\r\n                </Title>\r\n                <Text style={{ color: 'rgba(255,255,255,0.8)', fontSize: 14 }}>\r\n                  {completedFields} of {stepFields.length} fields completed • {Math.round(completionRate)}% done\r\n                </Text>\r\n              </div>\r\n            </div>\r\n            <div style={{ textAlign: 'right' }}>\r\n              <div style={{ fontSize: 32, fontWeight: 700, marginBottom: 4 }}>\r\n                {Math.round(completionRate)}%\r\n              </div>\r\n              <Progress\r\n                percent={completionRate}\r\n                showInfo={false}\r\n                strokeColor=\"rgba(255,255,255,0.8)\"\r\n                trailColor=\"rgba(255,255,255,0.2)\"\r\n                style={{ width: 120 }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Card>\r\n\r\n        {/* Step Description */}\r\n        {step.description && (\r\n          <Card\r\n            style={{\r\n              marginBottom: 24,\r\n              borderRadius: 12,\r\n              borderLeft: '4px solid #1890ff',\r\n              backgroundColor: '#f6ffed'\r\n            }}\r\n            bodyStyle={{ padding: '20px 24px' }}\r\n          >\r\n            <div style={{ display: 'flex', alignItems: 'flex-start', gap: 12 }}>\r\n              <InfoCircleOutlined style={{ color: '#1890ff', fontSize: 16, marginTop: 2 }} />\r\n              <Text style={{ fontSize: 14, color: '#595959', lineHeight: 1.6 }}>\r\n                {step.description}\r\n              </Text>\r\n            </div>\r\n          </Card>\r\n        )}\r\n\r\n        {/* Fields Grid */}\r\n        <Card\r\n          title={\r\n            <div style={{ display: 'flex', alignItems: 'center', gap: 12 }}>\r\n              <Avatar style={{ backgroundColor: '#722ed1' }} icon={<SafetyOutlined />} />\r\n              <span>Field Details</span>\r\n              <Badge count={step.fields.length} style={{ backgroundColor: '#1890ff' }} />\r\n            </div>\r\n          }\r\n          style={{ borderRadius: 16 }}\r\n          bodyStyle={{ padding: '24px' }}\r\n        >\r\n          {step.fields.length > 0 ? (\r\n            <Row gutter={[16, 16]}>\r\n              {step.fields.map(field => renderFieldValue(field, plantInputs, cqsData))}\r\n            </Row>\r\n          ) : (\r\n            <Empty\r\n              description=\"No fields available for this step\"\r\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n            />\r\n          )}\r\n        </Card>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div style={{ textAlign: 'center', padding: '60px 20px' }}>\r\n        <Spin size=\"large\" />\r\n        <div style={{ marginTop: 16 }}>Loading questionnaire data...</div>\r\n        <div style={{ marginTop: 8, color: '#666' }}>Workflow ID: {workflowId}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div style={{ padding: 24 }}>\r\n        <Card>\r\n          <Button\r\n            icon={<ArrowLeftOutlined />}\r\n            onClick={() => onClose ? onClose() : navigate(-1)}\r\n            style={{ marginBottom: 16 }}\r\n          >\r\n            Back\r\n          </Button>\r\n          <Alert\r\n            message=\"Error Loading Questionnaire\"\r\n            description={\r\n              <div>\r\n                <div>{error}</div>\r\n                <div style={{ marginTop: 8, fontSize: '12px', color: '#666' }}>\r\n                  Workflow ID: {workflowId}\r\n                </div>\r\n              </div>\r\n            }\r\n            type=\"error\"\r\n            showIcon\r\n            action={\r\n              <Button size=\"small\" onClick={loadQuestionnaireData}>\r\n                Retry\r\n              </Button>\r\n            }\r\n          />\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!questionnaireData) {\r\n    return (\r\n      <div style={{ padding: 24 }}>\r\n        <Alert\r\n          message=\"No Data Found\"\r\n          description=\"Questionnaire data not found.\"\r\n          type=\"warning\"\r\n          showIcon\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const { template, plantData, workflow, completionStatus, cqsData, accessControl } = questionnaireData;\r\n  const cqsDataValues = cqsData?.data || {};\r\n\r\n\r\n\r\n  // Debug logging to see the actual data structure\r\n  console.log('Full questionnaire data:', questionnaireData);\r\n  console.log('Plant data:', plantData);\r\n  console.log('Plant inputs:', plantInputs);\r\n  console.log('Plant inputs keys:', Object.keys(plantInputs));\r\n  console.log('Template steps:', template?.steps);\r\n\r\n  // Log first few fields to see what field names we're looking for\r\n  if (template?.steps?.[0]?.fields) {\r\n    console.log('First step fields:', template.steps[0].fields.map(f => ({ name: f.name, label: f.label })));\r\n  }\r\n\r\n  return (\r\n    <div style={{\r\n      background: 'linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%)',\r\n      minHeight: '100vh',\r\n      padding: '16px'\r\n    }}>\r\n      <div style={{ maxWidth: 1400, margin: '0 auto' }}>\r\n        {/* Floating Header */}\r\n        <Affix offsetTop={16}>\r\n          <Card\r\n            style={{\r\n              marginBottom: 24,\r\n              borderRadius: 20,\r\n              border: 'none',\r\n              boxShadow: '0 12px 40px rgba(0,0,0,0.15)',\r\n              background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n              color: 'white'\r\n            }}\r\n            bodyStyle={{ padding: '20px 32px' }}\r\n          >\r\n            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n              <div style={{ display: 'flex', alignItems: 'center', gap: 20 }}>\r\n                <Button\r\n                  icon={<ArrowLeftOutlined />}\r\n                  onClick={() => onClose ? onClose() : navigate(-1)}\r\n                  style={{\r\n                    backgroundColor: 'rgba(255,255,255,0.15)',\r\n                    border: '2px solid rgba(255,255,255,0.3)',\r\n                    color: 'white',\r\n                    borderRadius: 12,\r\n                    height: 44,\r\n                    fontWeight: 600\r\n                  }}\r\n                  size=\"large\"\r\n                >\r\n                  Back\r\n                </Button>\r\n                <div>\r\n                  <Title level={2} style={{ margin: 0, color: 'white', fontWeight: 700 }}>\r\n                    🚀 QRMFG Questionnaire Dashboard\r\n                  </Title>\r\n                  <Text style={{ color: 'rgba(255,255,255,0.9)', fontSize: 15 }}>\r\n                    {workflow?.materialName} • {workflow?.plantCode} • Workflow #{workflowId}\r\n                  </Text>\r\n                </div>\r\n              </div>\r\n              <div style={{ display: 'flex', alignItems: 'center', gap: 16 }}>\r\n                <Tag\r\n                  style={{\r\n                    backgroundColor: 'rgba(255,255,255,0.15)',\r\n                    border: '2px solid rgba(255,255,255,0.3)',\r\n                    color: 'white',\r\n                    borderRadius: 20,\r\n                    padding: '6px 16px',\r\n                    fontSize: 13,\r\n                    fontWeight: 600\r\n                  }}\r\n                >\r\n                  <EyeOutlined /> READ-ONLY\r\n                </Tag>\r\n                <Avatar.Group>\r\n                  <Tooltip title={accessControl?.currentUser}>\r\n                    <Avatar style={{ backgroundColor: '#f56a00' }} icon={<UserOutlined />} />\r\n                  </Tooltip>\r\n                </Avatar.Group>\r\n              </div>\r\n            </div>\r\n          </Card>\r\n        </Affix>\r\n\r\n        {/* Main Content with Tabs */}\r\n        <Card\r\n          style={{\r\n            borderRadius: 20,\r\n            border: 'none',\r\n            boxShadow: '0 8px 32px rgba(0,0,0,0.1)',\r\n            overflow: 'hidden'\r\n          }}\r\n          bodyStyle={{ padding: 0 }}\r\n        >\r\n          <Tabs\r\n            activeKey={activeView}\r\n            onChange={setActiveView}\r\n            size=\"large\"\r\n            style={{ margin: 0 }}\r\n            tabBarStyle={{\r\n              margin: 0,\r\n              padding: '0 32px',\r\n              backgroundColor: '#fafbfc',\r\n              borderBottom: '2px solid #f0f0f0'\r\n            }}\r\n          >\r\n            <TabPane\r\n              tab={\r\n                <span style={{ display: 'flex', alignItems: 'center', gap: 8, fontSize: 15, fontWeight: 600 }}>\r\n                  <DashboardOutlined />\r\n                  Overview Dashboard\r\n                </span>\r\n              }\r\n              key=\"overview\"\r\n            >\r\n              <div style={{ padding: '32px' }}>\r\n                {renderOverviewDashboard(questionnaireData)}\r\n              </div>\r\n            </TabPane>\r\n\r\n            <TabPane\r\n              tab={\r\n                <span style={{ display: 'flex', alignItems: 'center', gap: 8, fontSize: 15, fontWeight: 600 }}>\r\n                  <FileTextOutlined />\r\n                  Detailed Steps\r\n                  <Badge count={template?.steps?.length || 0} style={{ backgroundColor: '#1890ff' }} />\r\n                </span>\r\n              }\r\n              key=\"details\"\r\n            >\r\n              <div style={{ padding: '32px', backgroundColor: '#fafbfc' }}>\r\n                {template?.steps?.length > 0 ? (\r\n                  template.steps.map(step =>\r\n                    renderStepDetails(step, plantInputs, cqsDataValues)\r\n                  )\r\n                ) : (\r\n                  <Empty\r\n                    description=\"No questionnaire steps available\"\r\n                    image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n                    style={{ padding: '60px 0' }}\r\n                  />\r\n                )}\r\n              </div>\r\n            </TabPane>\r\n\r\n            <TabPane\r\n              tab={\r\n                <span style={{ display: 'flex', alignItems: 'center', gap: 8, fontSize: 15, fontWeight: 600 }}>\r\n                  <BarChartOutlined />\r\n                  Analytics\r\n                </span>\r\n              }\r\n              key=\"analytics\"\r\n            >\r\n              <div style={{ padding: '32px' }}>\r\n                <Row gutter={[24, 24]}>\r\n                  <Col span={24}>\r\n                    <Card\r\n                      title={\r\n                        <div style={{ display: 'flex', alignItems: 'center', gap: 12 }}>\r\n                          <Avatar style={{ backgroundColor: '#722ed1' }} icon={<CrownOutlined />} />\r\n                          <span>Completion Analytics</span>\r\n                        </div>\r\n                      }\r\n                      style={{ borderRadius: 16 }}\r\n                    >\r\n                      <Row gutter={[24, 24]}>\r\n                        <Col span={8}>\r\n                          <Statistic\r\n                            title=\"Completion Rate\"\r\n                            value={completionPercentage}\r\n                            suffix=\"%\"\r\n                            valueStyle={{ color: '#3f8600' }}\r\n                            prefix={<ThunderboltOutlined />}\r\n                          />\r\n                        </Col>\r\n                        <Col span={8}>\r\n                          <Statistic\r\n                            title=\"Fields Remaining\"\r\n                            value={totalFields - completedFields}\r\n                            valueStyle={{ color: '#cf1322' }}\r\n                            prefix={<ClockCircleOutlined />}\r\n                          />\r\n                        </Col>\r\n                        <Col span={8}>\r\n                          <Statistic\r\n                            title=\"Auto-populated Fields\"\r\n                            value={template?.steps?.reduce((acc, step) =>\r\n                              acc + (step.fields?.filter(f => f.cqsAutoPopulated)?.length || 0), 0) || 0}\r\n                            valueStyle={{ color: '#1890ff' }}\r\n                            prefix={<RocketOutlined />}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Card>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </TabPane>\r\n          </Tabs>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionnaireViewerPage;","/**\r\n * Utility functions for questionnaire field calculations\r\n * Handles CQS auto-populated field exclusions and progress calculations\r\n */\r\n\r\n/**\r\n * Get the default questionnaire template with CQS field markings\r\n * This should match the template structure in PlantQuestionnaire.js\r\n */\r\nexport const getDefaultQuestionnaireTemplate = () => [\r\n  {\r\n    title: 'General',\r\n    fields: [\r\n      { name: 'msds_available', isCqsAutoPopulated: false },\r\n      { name: 'missing_info', isCqsAutoPopulated: false },\r\n      { name: 'sourcing_asked', isCqsAutoPopulated: false },\r\n      { name: 'cas_available', isCqsAutoPopulated: false },\r\n      { name: 'mixture_ingredients', isCqsAutoPopulated: false },\r\n      { name: 'composition_percentage', isCqsAutoPopulated: false },\r\n      { name: 'total_percentage_1', isCqsAutoPopulated: false },\r\n      { name: 'total_percentage', isCqsAutoPopulated: false }\r\n    ]\r\n  },\r\n  {\r\n    title: 'Physical',\r\n    fields: [\r\n      { name: 'is_corrosive', isCqsAutoPopulated: true },\r\n      { name: 'corrosive_storage', isCqsAutoPopulated: false },\r\n      { name: 'highly_toxic', isCqsAutoPopulated: true },\r\n      { name: 'toxic_powder_handling', isCqsAutoPopulated: false },\r\n      { name: 'crushing_facilities', isCqsAutoPopulated: false },\r\n      { name: 'heating_facilities', isCqsAutoPopulated: false },\r\n      { name: 'paste_preparation', isCqsAutoPopulated: false }\r\n    ]\r\n  },\r\n  {\r\n    title: 'Flammability and Explosivity',\r\n    fields: [\r\n      { name: 'flash_point_65', isCqsAutoPopulated: true },\r\n      { name: 'petroleum_class', isCqsAutoPopulated: true },\r\n      { name: 'storage_license', isCqsAutoPopulated: false },\r\n      { name: 'ccoe_license', isCqsAutoPopulated: false },\r\n      { name: 'flash_point_21', isCqsAutoPopulated: true },\r\n      { name: 'flammable_infrastructure', isCqsAutoPopulated: false }\r\n    ]\r\n  },\r\n  {\r\n    title: 'Toxicity',\r\n    fields: [\r\n      { name: 'ld50_oral', isCqsAutoPopulated: true },\r\n      { name: 'ld50_dermal', isCqsAutoPopulated: true },\r\n      { name: 'lc50_inhalation', isCqsAutoPopulated: true },\r\n      { name: 'exposure_minimization', isCqsAutoPopulated: false },\r\n      { name: 'carcinogenic', isCqsAutoPopulated: true },\r\n      { name: 'carcinogenic_control', isCqsAutoPopulated: false }\r\n    ]\r\n  },\r\n  {\r\n    title: 'Process Safety Management',\r\n    fields: [\r\n      { name: 'psm_tier1_outdoor', isCqsAutoPopulated: true },\r\n      { name: 'psm_tier1_indoor', isCqsAutoPopulated: true },\r\n      { name: 'psm_tier2_outdoor', isCqsAutoPopulated: true },\r\n      { name: 'psm_tier2_indoor', isCqsAutoPopulated: true }\r\n    ]\r\n  },\r\n  {\r\n    title: 'Storage and Handling',\r\n    fields: [\r\n      { name: 'storage_conditions_stores', isCqsAutoPopulated: false },\r\n      { name: 'storage_conditions_floor', isCqsAutoPopulated: false },\r\n      { name: 'closed_loop_required', isCqsAutoPopulated: false },\r\n      { name: 'work_permit_available', isCqsAutoPopulated: false },\r\n      { name: 'procedures_details', isCqsAutoPopulated: false }\r\n    ]\r\n  },\r\n  {\r\n    title: 'PPE',\r\n    fields: [\r\n      { name: 'recommended_ppe', isCqsAutoPopulated: true },\r\n      { name: 'ppe_in_use', isCqsAutoPopulated: false },\r\n      { name: 'ppe_procurement_date', isCqsAutoPopulated: false }\r\n    ]\r\n  },\r\n  {\r\n    title: 'First Aid',\r\n    fields: [\r\n      { name: 'is_poisonous', isCqsAutoPopulated: true },\r\n      { name: 'antidote_specified', isCqsAutoPopulated: true },\r\n      { name: 'antidote_available', isCqsAutoPopulated: false },\r\n      { name: 'antidote_source', isCqsAutoPopulated: false },\r\n      { name: 'first_aid_capability', isCqsAutoPopulated: false }\r\n    ]\r\n  },\r\n  {\r\n    title: 'Statutory',\r\n    fields: [\r\n      { name: 'cmvr_listed', isCqsAutoPopulated: true },\r\n      { name: 'msihc_listed', isCqsAutoPopulated: true },\r\n      { name: 'factories_act_listed', isCqsAutoPopulated: true },\r\n      { name: 'permissible_concentration', isCqsAutoPopulated: false },\r\n      { name: 'monitoring_details', isCqsAutoPopulated: false }\r\n    ]\r\n  },\r\n  {\r\n    title: 'Others',\r\n    fields: [\r\n      { name: 'plant_inputs_required', isCqsAutoPopulated: false },\r\n      { name: 'gaps_identified', isCqsAutoPopulated: false },\r\n      { name: 'additional_input_1', isCqsAutoPopulated: false },\r\n      { name: 'additional_input_2', isCqsAutoPopulated: false }\r\n    ]\r\n  }\r\n];\r\n\r\n/**\r\n * Calculate correct field counts including ALL fields (both CQS and plant fields)\r\n * @param {Object} plantInputs - The plant input data\r\n * @param {Array} template - Optional template, uses default if not provided\r\n * @returns {Object} - { totalFields, completedFields, completionPercentage }\r\n */\r\nexport const calculateCorrectFieldCounts = (plantInputs = {}, template = null) => {\r\n  const questionnaireTemplate = template || getDefaultQuestionnaireTemplate();\r\n  \r\n  let totalFields = 0;\r\n  let completedFields = 0;\r\n\r\n  questionnaireTemplate.forEach(step => {\r\n    const stepFields = step.fields || [];\r\n    \r\n    // Count ALL fields (both CQS and plant fields)\r\n    totalFields += stepFields.length;\r\n\r\n    // Count completed fields (any field with a value)\r\n    const completedStepFields = stepFields.filter(field => {\r\n      const value = plantInputs[field.name];\r\n      if (Array.isArray(value)) {\r\n        return value.length > 0;\r\n      }\r\n      return value && value !== '' && value !== null && value !== undefined;\r\n    });\r\n\r\n    completedFields += completedStepFields.length;\r\n  });\r\n\r\n  const completionPercentage = totalFields > 0 \r\n    ? Math.round((completedFields / totalFields) * 100) \r\n    : 0;\r\n\r\n  return {\r\n    totalFields,\r\n    completedFields,\r\n    completionPercentage,\r\n    // Keep backward compatibility\r\n    totalUserEditableFields: totalFields,\r\n    completedUserEditableFields: completedFields\r\n  };\r\n};\r\n\r\n/**\r\n * Get total field counts for the questionnaire template\r\n * @param {Array} template - Optional template, uses default if not provided\r\n * @returns {Object} - { totalFields, totalUserEditableFields, totalCqsFields }\r\n */\r\nexport const getTemplateFieldCounts = (template = null) => {\r\n  const questionnaireTemplate = template || getDefaultQuestionnaireTemplate();\r\n  \r\n  let totalFields = 0;\r\n  let totalUserEditableFields = 0;\r\n  let totalCqsFields = 0;\r\n\r\n  questionnaireTemplate.forEach(step => {\r\n    const stepFields = step.fields || [];\r\n    totalFields += stepFields.length;\r\n    \r\n    stepFields.forEach(field => {\r\n      if (field.isCqsAutoPopulated || field.disabled) {\r\n        totalCqsFields++;\r\n      } else {\r\n        totalUserEditableFields++;\r\n      }\r\n    });\r\n  });\r\n\r\n  return {\r\n    totalFields, // 87 total fields\r\n    totalUserEditableFields, // 53 plant fields\r\n    totalCqsFields // 34 CQS fields\r\n  };\r\n};\r\n\r\n/**\r\n * Recalculate workflow progress with correct field counts\r\n * @param {Object} workflow - The workflow object from backend\r\n * @param {Object} plantInputs - The plant input data (optional)\r\n * @returns {Object} - Updated workflow with correct field counts\r\n */\r\nexport const recalculateWorkflowProgress = (workflow, plantInputs = null) => {\r\n  // If we have plant inputs, calculate based on actual data\r\n  if (plantInputs) {\r\n    const { totalFields, completedFields, completionPercentage } = \r\n      calculateCorrectFieldCounts(plantInputs);\r\n    \r\n    return {\r\n      ...workflow,\r\n      totalFields,\r\n      completedFields,\r\n      completionPercentage\r\n    };\r\n  }\r\n\r\n  // Otherwise, just fix the total field count and recalculate percentage\r\n  const { totalFields } = getTemplateFieldCounts();\r\n  \r\n  // Assume the backend's completed count is correct but total is wrong\r\n  const backendCompletedFields = workflow.completedFields || 0;\r\n  const correctedCompletionPercentage = totalFields > 0 \r\n    ? Math.round((backendCompletedFields / totalFields) * 100) \r\n    : 0;\r\n\r\n  return {\r\n    ...workflow,\r\n    totalFields, // Now uses 87 total fields instead of 53\r\n    completionPercentage: correctedCompletionPercentage\r\n  };\r\n};"],"names":["Title","Text","Paragraph","Typography","Panel","Collapse","TextArea","Input","TabPane","Tabs","_ref","_questionnaireData$pl","_questionnaireData$te","_template$steps4","_template$steps4$","_template$steps5","_template$steps6","_template$steps7","workflowId","propWorkflowId","onClose","paramWorkflowId","useParams","navigate","useNavigate","loading","setLoading","useState","error","setError","questionnaireData","setQuestionnaireData","activeStep","setActiveStep","activeView","setActiveView","console","log","plantInputs","plantData","totalFields","completedFields","completionPercentage","calculateCorrectFieldCounts","template","steps","loadQuestionnaireData","useCallback","async","response","apiClient","get","err","_err$response","data","message","useEffect","renderStepDetails","step","cqsData","stepFields","fields","filter","field","value","name","trim","length","completionRate","_jsxs","style","marginBottom","children","_jsx","Card","borderRadius","background","border","color","bodyStyle","padding","display","alignItems","justifyContent","gap","Avatar","size","backgroundColor","fontSize","fontWeight","stepNumber","level","margin","title","Math","round","textAlign","Progress","percent","showInfo","strokeColor","trailColor","width","description","borderLeft","InfoCircleOutlined","marginTop","lineHeight","icon","SafetyOutlined","Badge","count","Row","gutter","map","renderFieldValue","cqsValue","isEmpty","isCqsField","cqsAutoPopulated","displayValue","type","options","option","find","opt","label","Col","xs","sm","lg","hoverable","height","transition","position","overflow","top","right","borderTop","flexShrink","CheckCircleOutlined","SettingOutlined","FileTextOutlined","getFieldIcon","flex","minWidth","strong","required","marginLeft","flexWrap","Tag","toUpperCase","minHeight","ExclamationCircleOutlined","fontStyle","CheckOutlined","helpText","BulbOutlined","marginRight","Empty","image","PRESENTED_IMAGE_SIMPLE","Spin","Button","ArrowLeftOutlined","onClick","Alert","showIcon","action","workflow","completionStatus","accessControl","Object","keys","f","maxWidth","Affix","offsetTop","boxShadow","materialName","plantCode","EyeOutlined","Group","Tooltip","currentUser","UserOutlined","activeKey","onChange","tabBarStyle","borderBottom","tab","DashboardOutlined","_template$steps","_template$steps2","_template$steps3","totalSteps","completedSteps","_plantData$plantInput","overallProgress","Statistic","suffix","valueStyle","prefix","RocketOutlined","StarOutlined","BarChartOutlined","Timeline","mode","index","_plantData$plantInput2","stepProgress","isCompleted","Item","dot","paddingBottom","renderOverviewDashboard","span","CrownOutlined","ThunderboltOutlined","ClockCircleOutlined","reduce","acc","_step$fields","_step$fields$filter","arguments","undefined","isCqsAutoPopulated","forEach","completedStepFields","Array","isArray","totalUserEditableFields","completedUserEditableFields","getTemplateFieldCounts","totalCqsFields","disabled"],"sourceRoot":""}