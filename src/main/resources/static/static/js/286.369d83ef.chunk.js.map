{"version":3,"file":"static/js/286.369d83ef.chunk.js","mappings":"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","sources":["screens/Auditlogs.js"],"sourcesContent":["import {\n  Typography,\n  Table,\n  Form,\n  Input,\n  Select,\n  DatePicker,\n  Button,\n  Row,\n  Col,\n  message\n} from 'antd';\nimport React, { useState, useEffect } from 'react';\n\nimport apiClient from '../api/client';\n\n// eslint-disable-next-line no-undef\nconst { Title } = Typography;\n\nconst Auditlogs = () => {\n  const [logs, setLogs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [form] = Form.useForm();\n  const [filtering, setFiltering] = useState(false);\n\n  const fetchLogs = async signal => {\n    setLoading(true);\n    try {\n      const res = await apiClient.get('/audit/logs', { signal });\n      if (!signal?.aborted) {\n        // Ensure response is always an array\n        const safeLogs = Array.isArray(res) ? res : [];\n        setLogs(safeLogs);\n      }\n    } catch (err) {\n      if (!signal?.aborted) {\n        message.error('Failed to fetch audit logs');\n        console.error('Error fetching audit logs:', err);\n        // Set empty array on error\n        setLogs([]);\n      }\n    } finally {\n      if (!signal?.aborted) {\n        setLoading(false);\n      }\n    }\n  };\n\n  const fetchFilteredLogs = async filters => {\n    setLoading(true);\n    let url = '/audit/logs';\n    if (filters) {\n      if (filters.userId) {\n        url = `/audit/logs/user/${filters.userId}`;\n      } else if (filters.action) {\n        url = `/audit/logs/action/${filters.action}`;\n      } else if (filters.entityType) {\n        url = `/audit/logs/entity/${filters.entityType}`;\n      } else if (filters.severity) {\n        url = `/audit/logs/severity/${filters.severity}`;\n      } else if (filters.dateRange && filters.dateRange.length === 2) {\n        const [start, end] = filters.dateRange;\n        url = `/audit/logs/date?start=${start.toISOString()}&end=${end.toISOString()}`;\n      }\n    }\n    try {\n      const res = await apiClient.get(url);\n      // Ensure response is always an array\n      const safeLogs = Array.isArray(res) ? res : [];\n      setLogs(safeLogs);\n    } catch (err) {\n      message.error('Failed to fetch audit logs');\n      console.error('Error fetching filtered audit logs:', err);\n      // Set empty array on error\n      setLogs([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const onFilter = values => {\n    setFiltering(true);\n    fetchFilteredLogs(values).then(() => setFiltering(false));\n  };\n\n  const onReset = () => {\n    form.resetFields();\n    fetchLogs();\n  };\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    fetchLogs(controller.signal);\n\n    return () => {\n      controller.abort();\n    };\n  }, []);\n\n  const columns = [\n    {\n      title: 'Timestamp',\n      dataIndex: 'timestamp',\n      key: 'timestamp',\n      sorter: (a, b) => new Date(a.timestamp) - new Date(b.timestamp)\n    },\n    {\n      title: 'User',\n      dataIndex: 'user',\n      key: 'user',\n      sorter: (a, b) => a.user.localeCompare(b.user)\n    },\n    {\n      title: 'Action',\n      dataIndex: 'action',\n      key: 'action',\n      sorter: (a, b) => a.action.localeCompare(b.action)\n    },\n    {\n      title: 'Details',\n      dataIndex: 'details',\n      key: 'details',\n      width: '40%'\n    }\n  ];\n\n  return (\n    <div>\n      <Title level={2}>Audit Logs</Title>\n      <Form form={form} layout=\"vertical\" onFinish={onFilter} style={{ marginBottom: 24 }}>\n        <Row gutter={16}>\n          <Col span={4}>\n            <Form.Item name=\"userId\" label=\"User ID\">\n              <Input placeholder=\"User ID\" />\n            </Form.Item>\n          </Col>\n          <Col span={4}>\n            <Form.Item name=\"action\" label=\"Action\">\n              <Input placeholder=\"Action\" />\n            </Form.Item>\n          </Col>\n          <Col span={4}>\n            <Form.Item name=\"entityType\" label=\"Entity\">\n              <Input placeholder=\"Entity Type\" />\n            </Form.Item>\n          </Col>\n          <Col span={4}>\n            <Form.Item name=\"severity\" label=\"Severity\">\n              <Select allowClear placeholder=\"Select severity\">\n                <Select.Option value=\"INFO\">INFO</Select.Option>\n                <Select.Option value=\"WARN\">WARN</Select.Option>\n                <Select.Option value=\"ERROR\">ERROR</Select.Option>\n                <Select.Option value=\"SECURITY\">SECURITY</Select.Option>\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col span={6}>\n            <Form.Item name=\"dateRange\" label=\"Date Range\">\n              <DatePicker.RangePicker showTime style={{ width: '100%' }} />\n            </Form.Item>\n          </Col>\n          <Col span={2} style={{ display: 'flex', alignItems: 'end' }}>\n            <Button type=\"primary\" htmlType=\"submit\" loading={filtering}>\n              Filter\n            </Button>\n          </Col>\n          <Col span={2} style={{ display: 'flex', alignItems: 'end' }}>\n            <Button onClick={onReset}>Reset</Button>\n          </Col>\n        </Row>\n      </Form>\n      <Table columns={columns} dataSource={logs} rowKey=\"id\" loading={loading} bordered />\n    </div>\n  );\n};\n\nexport default Auditlogs;\n"],"names":["Title","Typography","Auditlogs","logs","setLogs","useState","loading","setLoading","form","Form","useForm","filtering","setFiltering","fetchLogs","async","res","apiClient","get","signal","aborted","safeLogs","Array","isArray","err","message","error","console","useEffect","controller","AbortController","abort","columns","title","dataIndex","key","sorter","a","b","Date","timestamp","user","localeCompare","action","width","_jsxs","children","_jsx","level","layout","onFinish","values","url","filters","userId","entityType","severity","dateRange","length","start","end","toISOString","fetchFilteredLogs","then","style","marginBottom","Row","gutter","Col","span","Item","name","label","Input","placeholder","Select","allowClear","Option","value","DatePicker","RangePicker","showTime","display","alignItems","Button","type","htmlType","onClick","onReset","resetFields","Table","dataSource","rowKey","bordered"],"sourceRoot":""}