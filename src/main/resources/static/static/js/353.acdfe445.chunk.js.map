{"version":3,"file":"static/js/353.acdfe445.chunk.js","mappings":"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","sources":["screens/Sessions.js","screens/admin.js","constants/roles.js","constants/index.js","hooks/useRoleBasedAccess.js","components/RoleBasedComponent.js","screens/Auditlogs.js","screens/Roles.js","screens/UserRoleManagement.js"],"sourcesContent":["import { Table, Button, Typography } from 'antd';\nimport React, { useState, useEffect } from 'react';\n\nimport apiClient from '../api/client';\n\nconst { Title } = Typography;\n\nconst Sessions = () => {\n  const [sessions, setSessions] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const fetchSessions = async signal => {\n    setLoading(true);\n    try {\n      const response = await apiClient.get('/admin/sessions', { signal });\n      if (!signal?.aborted) {\n        // Ensure response is always an array\n        const safeSessions = Array.isArray(response) ? response : [];\n        setSessions(safeSessions);\n      }\n    } catch (error) {\n      if (!signal?.aborted) {\n        console.error('Failed to fetch sessions:', error);\n        // Set empty array on error\n        setSessions([]);\n      }\n    } finally {\n      if (!signal?.aborted) {\n        setLoading(false);\n      }\n    }\n  };\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    fetchSessions(controller.signal);\n\n    return () => {\n      controller.abort();\n    };\n  }, []);\n\n  const handleTerminate = async sessionId => {\n    try {\n      await apiClient.delete(`/admin/sessions/${sessionId}`);\n      fetchSessions();\n    } catch (error) {\n      console.error('Failed to terminate session:', error);\n    }\n  };\n\n  const columns = [\n    {\n      title: 'Session ID',\n      dataIndex: 'id',\n      key: 'id'\n    },\n    {\n      title: 'User',\n      dataIndex: 'user',\n      key: 'user'\n    },\n    {\n      title: 'Start Time',\n      dataIndex: 'startTime',\n      key: 'startTime'\n    },\n    {\n      title: 'Last Activity',\n      dataIndex: 'lastActivity',\n      key: 'lastActivity'\n    },\n    {\n      title: 'Actions',\n      key: 'actions',\n      render: (_, record) => (\n        <Button type=\"primary\" danger onClick={() => handleTerminate(record.id)}>\n          Terminate\n        </Button>\n      )\n    }\n  ];\n\n  return (\n    <div>\n      <Title level={2}>Active Sessions</Title>\n      <Table columns={columns} dataSource={sessions} rowKey=\"id\" loading={loading} />\n    </div>\n  );\n};\n\nexport default Sessions;\n","import { Menu } from 'antd';\nimport React from 'react';\nimport { Link, Routes, Route, useLocation, useNavigate } from 'react-router-dom';\n\nimport { AdminOnly } from '../components/RoleBasedComponent';\nimport { useRoleBasedAccess } from '../hooks/useRoleBasedAccess';\n\n\nimport AuditLogs from './Auditlogs';\nimport Roles from './Roles';\nimport Sessions from './Sessions';\nimport UserRoleManagement from './UserRoleManagement';\nimport Users from './Users';\nimport WorkflowMonitoring from './WorkflowMonitoring';\n\nconst AdminPanel = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const currentPath = location.pathname;\n\n  // Use role-based access control\n  const { isAdmin } = useRoleBasedAccess();\n\n  const menuItems = [\n    { key: '/qrmfg/admin/users', label: 'Users' },\n    { key: '/qrmfg/admin/roles', label: 'Roles' },\n    { key: '/qrmfg/admin/auditlogs', label: 'Audit Logs' },\n    { key: '/qrmfg/admin/sessions', label: 'Sessions' },\n    { key: '/qrmfg/admin/workflow-monitoring', label: 'Workflow Monitoring' },\n    { key: '/qrmfg/admin/user-role-management', label: 'User Role Management' }\n  ];\n\n  // If we're at /qrmfg/admin, redirect to /qrmfg/admin/users\n  React.useEffect(() => {\n    if (currentPath === '/qrmfg/admin') {\n      navigate('/qrmfg/admin/users');\n    }\n  }, [currentPath, navigate]);\n\n  return (\n    <AdminOnly>\n      <div style={{ padding: 24 }}>\n        <h2>Admin Panel</h2>\n        <Menu\n          mode=\"horizontal\"\n          selectedKeys={[currentPath]}\n          items={menuItems.map(item => ({\n            ...item,\n            label: <Link to={item.key}>{item.label}</Link>\n          }))}\n          style={{ marginBottom: 24 }}\n        />\n        <div style={{ marginTop: 24 }}>\n          <Routes>\n            <Route path=\"users\" element={<Users />} />\n            <Route path=\"roles\" element={<Roles />} />\n            <Route path=\"auditlogs\" element={<AuditLogs />} />\n            <Route path=\"sessions\" element={<Sessions />} />\n            <Route path=\"workflow-monitoring\" element={<WorkflowMonitoring />} />\n            <Route path=\"user-role-management\" element={<UserRoleManagement />} />\n          </Routes>\n        </div>\n      </div>\n    </AdminOnly>\n  );\n};\n\nexport default AdminPanel;\n","/**\n * Role constants that match the backend RoleConstants.java\n */\nexport const ROLES = {\n  ADMIN: 'ADMIN',\n  JVC_USER: 'JVC_USER',\n  PLANT_USER: 'PLANT_USER',\n  CQS_USER: 'CQS_USER',\n  TECH_USER: 'TECH_USER',\n  VIEWER: 'VIEWER'\n};\n\n/**\n * Role types for backend compatibility\n */\nexport const ROLE_TYPES = {\n  ADMIN: 'ADMIN',\n  JVC_ROLE: 'JVC_ROLE',\n  PLANT_ROLE: 'PLANT_ROLE',\n  CQS_ROLE: 'CQS_ROLE',\n  TECH_ROLE: 'TECH_ROLE',\n  VIEWER_ROLE: 'VIEWER_ROLE'\n};\n\n/**\n * Role display names\n */\nexport const ROLE_DISPLAY_NAMES = {\n  [ROLES.ADMIN]: 'Administrator',\n  [ROLES.JVC_USER]: 'JVC User',\n  [ROLES.PLANT_USER]: 'Plant User',\n  [ROLES.CQS_USER]: 'CQS User',\n  [ROLES.TECH_USER]: 'Technical User',\n  [ROLES.VIEWER]: 'Viewer'\n};\n\n/**\n * Role descriptions\n */\nexport const ROLE_DESCRIPTIONS = {\n  [ROLES.ADMIN]: 'Full system access with administrative privileges',\n  [ROLES.JVC_USER]: 'Joint Venture Company user with workflow initiation rights',\n  [ROLES.PLANT_USER]: 'Plant-specific user with questionnaire completion rights',\n  [ROLES.CQS_USER]: 'Corporate Quality Services user with query management rights',\n  [ROLES.TECH_USER]: 'Technical user with system monitoring and audit access',\n  [ROLES.VIEWER]: 'Read-only access to assigned content'\n};\n\n/**\n * Role hierarchy (higher number = more privileges)\n */\nexport const ROLE_HIERARCHY = {\n  [ROLES.VIEWER]: 1,\n  [ROLES.PLANT_USER]: 2,\n  [ROLES.CQS_USER]: 3,\n  [ROLES.JVC_USER]: 3,\n  [ROLES.TECH_USER]: 4,\n  [ROLES.ADMIN]: 5\n};\n\n/**\n * Screen access mapping by role\n */\nexport const SCREEN_ACCESS = {\n  [ROLES.ADMIN]: [\n    '/qrmfg',\n    '/qrmfg/dashboard',\n    '/qrmfg/admin',\n    '/qrmfg/jvc',\n    '/qrmfg/cqs',\n    '/qrmfg/tech',\n    '/qrmfg/plant',\n    '/qrmfg/workflows',\n    '/qrmfg/workflow-monitoring',\n    '/qrmfg/reports',\n    '/qrmfg/users',\n    '/qrmfg/roles',\n    '/qrmfg/sessions',\n    '/qrmfg/user-role-management',\n    '/qrmfg/auditlogs',\n    '/qrmfg/settings'\n  ],\n  [ROLES.JVC_USER]: [\n    '/qrmfg',\n    '/qrmfg/dashboard',\n    '/qrmfg/jvc',\n    '/qrmfg/workflows',\n    '/qrmfg/reports',\n    '/qrmfg/settings'\n  ],\n  [ROLES.CQS_USER]: [\n    '/qrmfg',\n    '/qrmfg/dashboard',\n    '/qrmfg/cqs',\n    '/qrmfg/workflows',\n    '/qrmfg/reports',\n    '/qrmfg/settings'\n  ],\n  [ROLES.TECH_USER]: [\n    '/qrmfg',\n    '/qrmfg/dashboard',\n    '/qrmfg/tech',\n    '/qrmfg/workflows',\n    '/qrmfg/workflow-monitoring',\n    '/qrmfg/reports',\n    '/qrmfg/auditlogs',\n    '/qrmfg/settings'\n  ],\n  [ROLES.PLANT_USER]: [\n    '/qrmfg',\n    '/qrmfg/dashboard',\n    '/qrmfg/plant',\n    '/qrmfg/workflows',\n    '/qrmfg/reports',\n    '/qrmfg/settings'\n  ],\n  [ROLES.VIEWER]: [\n    '/qrmfg',\n    '/qrmfg/dashboard',\n    '/qrmfg/settings'\n  ]\n};\n\n/**\n * Data access permissions by role\n */\nexport const DATA_ACCESS = {\n  [ROLES.ADMIN]: ['*'], // All data\n  [ROLES.JVC_USER]: ['workflow', 'document', 'query', 'jvc'],\n  [ROLES.CQS_USER]: ['workflow', 'document', 'query', 'cqs'],\n  [ROLES.TECH_USER]: ['workflow', 'document', 'query', 'audit', 'system', 'tech'],\n  [ROLES.PLANT_USER]: ['workflow', 'document', 'query', 'plant'],\n  [ROLES.VIEWER]: ['workflow:read', 'document:read']\n};\n\n/**\n * Action permissions by role\n */\nexport const ACTION_PERMISSIONS = {\n  [ROLES.ADMIN]: ['*'], // All actions\n  [ROLES.JVC_USER]: ['create', 'read', 'update', 'initiate'],\n  [ROLES.CQS_USER]: ['create', 'read', 'update', 'respond'],\n  [ROLES.TECH_USER]: ['create', 'read', 'update', 'monitor', 'audit'],\n  [ROLES.PLANT_USER]: ['read', 'update', 'complete'],\n  [ROLES.VIEWER]: ['read']\n};\n\n/**\n * Helper functions\n */\nexport const getRoleDisplayName = (role) => {\n  return ROLE_DISPLAY_NAMES[role] || role;\n};\n\nexport const getRoleDescription = (role) => {\n  return ROLE_DESCRIPTIONS[role] || 'No description available';\n};\n\nexport const getRoleHierarchy = (role) => {\n  return ROLE_HIERARCHY[role] || 0;\n};\n\nexport const hasHigherPrivilege = (role1, role2) => {\n  return getRoleHierarchy(role1) > getRoleHierarchy(role2);\n};\n\nexport const getScreensForRole = (role) => {\n  return SCREEN_ACCESS[role] || [];\n};\n\nexport const getDataAccessForRole = (role) => {\n  return DATA_ACCESS[role] || [];\n};\n\nexport const getActionPermissionsForRole = (role) => {\n  return ACTION_PERMISSIONS[role] || [];\n};\n\nexport const canAccessScreen = (role, screen) => {\n  const screens = getScreensForRole(role);\n  return screens.includes('*') || screens.includes(screen);\n};\n\nexport const canAccessData = (role, dataType) => {\n  const dataAccess = getDataAccessForRole(role);\n  return dataAccess.includes('*') || \n         dataAccess.includes(dataType) || \n         dataAccess.some(access => access.startsWith(`${dataType}:`));\n};\n\nexport const canPerformAction = (role, action) => {\n  const actions = getActionPermissionsForRole(role);\n  return actions.includes('*') || actions.includes(action);\n};","// Application Constants\n\n// API Configuration\nexport const API_CONFIG = {\n  TIMEOUT: 30000, // 30 seconds\n  BASE_URL: process.env.REACT_APP_API_BASE_URL || '/qrmfg/api/v1',\n  RETRY_ATTEMPTS: 3\n};\n\n// Authentication\nexport const AUTH_CONFIG = {\n  TOKEN_KEY: 'qrmfg_secure_token',\n  LOGIN_PATH: '/qrmfg/login',\n  DEFAULT_REDIRECT: '/qrmfg'\n};\n\n// UI Constants\nexport const UI_CONFIG = {\n  MOBILE_BREAKPOINT: 768,\n  TABLET_BREAKPOINT: 1024,\n  PAGE_SIZE: 10,\n  DEBOUNCE_DELAY: 300\n};\n\n// Workflow States\nexport const WORKFLOW_STATES = {\n  INITIATED: 'INITIATED',\n  IN_PROGRESS: 'IN_PROGRESS',\n  PENDING_REVIEW: 'PENDING_REVIEW',\n  APPROVED: 'APPROVED',\n  REJECTED: 'REJECTED',\n  COMPLETED: 'COMPLETED'\n};\n\n// Query States\nexport const QUERY_STATES = {\n  OPEN: 'OPEN',\n  IN_PROGRESS: 'IN_PROGRESS',\n  RESOLVED: 'RESOLVED',\n  CLOSED: 'CLOSED'\n};\n\n// Priority Levels\nexport const PRIORITY_LEVELS = {\n  LOW: 'LOW',\n  MEDIUM: 'MEDIUM',\n  HIGH: 'HIGH',\n  URGENT: 'URGENT',\n  CRITICAL: 'CRITICAL'\n};\n\n// Teams\nexport const TEAMS = {\n  CQS: 'CQS',\n  TECH: 'TECH',\n  JVC: 'JVC'\n};\n\n// Error Severity\nexport const ERROR_SEVERITY = {\n  LOW: 'LOW',\n  MEDIUM: 'MEDIUM',\n  HIGH: 'HIGH',\n  CRITICAL: 'CRITICAL'\n};\n\n// Error Categories\nexport const ERROR_CATEGORY = {\n  APPLICATION: 'APPLICATION',\n  COMPONENT: 'COMPONENT',\n  API: 'API',\n  ROUTE: 'ROUTE',\n  ASYNC: 'ASYNC',\n  AUTHENTICATION: 'AUTHENTICATION'\n};\n\n// Status Colors\nexport const STATUS_COLORS = {\n  [WORKFLOW_STATES.INITIATED]: 'blue',\n  [WORKFLOW_STATES.IN_PROGRESS]: 'orange',\n  [WORKFLOW_STATES.PENDING_REVIEW]: 'purple',\n  [WORKFLOW_STATES.APPROVED]: 'green',\n  [WORKFLOW_STATES.REJECTED]: 'red',\n  [WORKFLOW_STATES.COMPLETED]: 'green'\n};\n\n// Priority Colors\nexport const PRIORITY_COLORS = {\n  [PRIORITY_LEVELS.LOW]: 'green',\n  [PRIORITY_LEVELS.MEDIUM]: 'blue',\n  [PRIORITY_LEVELS.HIGH]: 'orange',\n  [PRIORITY_LEVELS.URGENT]: 'red',\n  [PRIORITY_LEVELS.CRITICAL]: 'red'\n};\n\n// Form Validation\nexport const VALIDATION = {\n  MIN_PASSWORD_LENGTH: 8,\n  MAX_FILE_SIZE: 10 * 1024 * 1024, // 10MB\n  ALLOWED_FILE_TYPES: ['.pdf', '.doc', '.docx', '.xls', '.xlsx', '.jpg', '.jpeg', '.png'],\n  MAX_COMMENT_LENGTH: 1000,\n  MAX_DESCRIPTION_LENGTH: 500\n};\n\n// Date Formats\nexport const DATE_FORMATS = {\n  DISPLAY: 'DD/MM/YYYY',\n  DISPLAY_WITH_TIME: 'DD/MM/YYYY HH:mm',\n  API: 'YYYY-MM-DD',\n  ISO: 'YYYY-MM-DDTHH:mm:ss.SSSZ'\n};\n\n// Local Storage Keys\nexport const STORAGE_KEYS = {\n  USER_PREFERENCES: 'qrmfg_user_preferences',\n  THEME: 'qrmfg_theme',\n  LANGUAGE: 'qrmfg_language'\n};\n\n// Animation Delays\nexport const ANIMATION = {\n  FADE_IN_DELAY: 0.1, // seconds\n  STAGGER_DELAY: 0.05, // seconds\n  TRANSITION_DURATION: 0.3 // seconds\n};\n\n// Notification Types\nexport const NOTIFICATION_TYPES = {\n  SUCCESS: 'success',\n  ERROR: 'error',\n  WARNING: 'warning',\n  INFO: 'info'\n};\n\n// Component Names (for error boundaries)\nexport const COMPONENT_NAMES = {\n  USER_TABLE: 'UserTable',\n  USER_MODAL: 'UserModal',\n  PLANT_ASSIGNMENT_FORM: 'PlantAssignmentForm',\n  PLANT_DASHBOARD: 'PlantDashboard',\n  WORKFLOW_TABLE: 'WorkflowTable',\n  FILTER_PANEL: 'FilterPanel'\n};\n\n// File size constants\nexport const FILE_SIZE = {\n  MAX_UPLOAD_SIZE: 25 * 1024 * 1024, // 25MB\n  BYTES_PER_KB: 1024,\n  BYTES_PER_MB: 1024 * 1024,\n  BYTES_PER_GB: 1024 * 1024 * 1024\n};\n\n// Workflow specific states\nexport const WORKFLOW_SPECIFIC_STATES = {\n  JVC_PENDING: 'JVC_PENDING',\n  PLANT_PENDING: 'PLANT_PENDING',\n  CQS_PENDING: 'CQS_PENDING',\n  TECH_PENDING: 'TECH_PENDING',\n  DRAFT: 'DRAFT',\n  IN_PROGRESS: 'IN_PROGRESS',\n  SUBMITTED: 'SUBMITTED'\n};\n\n// Query status\nexport const QUERY_STATUS = {\n  OPEN: 'OPEN',\n  RESOLVED: 'RESOLVED',\n  CLOSED: 'CLOSED'\n};\n\n// Team names\nexport const TEAM_NAMES = {\n  CQS: 'CQS',\n  TECH: 'TECH',\n  JVC: 'JVC',\n  PLANT: 'PLANT'\n};\n\n// Auto-save intervals\nexport const AUTO_SAVE = {\n  INTERVAL: 30000, // 30 seconds\n  DEBOUNCE_DELAY: 2000 // 2 seconds\n};\n\n// Pagination defaults\nexport const PAGINATION = {\n  DEFAULT_PAGE_SIZE: 10,\n  SMALL_PAGE_SIZE: 5,\n  LARGE_PAGE_SIZE: 15,\n  SHOW_SIZE_CHANGER: true,\n  SHOW_QUICK_JUMPER: true\n};\n\n// Completion filter options\nexport const COMPLETION_FILTERS = {\n  ALL: 'all',\n  COMPLETED: 'completed',\n  IN_PROGRESS: 'in-progress',\n  NOT_STARTED: 'not-started'\n};\n\n// Tab keys\nexport const TAB_KEYS = {\n  INITIATE: 'initiate',\n  PENDING: 'pending',\n  COMPLETED: 'completed',\n  QUERIES: 'queries',\n  HISTORY: 'history'\n};\n\n// Re-export role constants\nexport * from './roles';\n","import { useState, useEffect, useCallback } from 'react';\n\nimport { \n  isAuthenticated, \n  isAdmin, \n  isJvcUser, \n  isCqsUser, \n  isTechUser, \n  isPlantUser, \n  isViewer,\n  hasRole,\n  getPrimaryRoleType,\n  getUserPlantCodes,\n  getPrimaryPlantCode,\n  getCurrentUser\n} from '../services/auth';\nimport RBACService from '../services/rbacService';\n\n/**\n * Custom hook for role-based access control\n * Provides reactive access to user roles and permissions\n */\nexport const useRoleBasedAccess = () => {\n  const [accessSummary, setAccessSummary] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Load user access summary\n  const loadAccessSummary = useCallback(async () => {\n    if (!isAuthenticated()) {\n      setAccessSummary(null);\n      setLoading(false);\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const summary = await RBACService.getUserAccessSummary();\n      setAccessSummary(summary);\n    } catch (err) {\n      console.warn('Failed to load access summary, using fallback:', err);\n      setError(err);\n      \n      // Use fallback data\n      const fallbackSummary = RBACService.getFallbackAccessSummary();\n      setAccessSummary(fallbackSummary);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    loadAccessSummary();\n  }, [loadAccessSummary]);\n\n  // Check screen access\n  const checkScreenAccess = useCallback(async (screenRoute) => {\n    try {\n      return await RBACService.hasScreenAccess(screenRoute);\n    } catch (error) {\n      console.warn('Screen access check failed, using fallback:', error);\n      return RBACService.getFallbackScreenAccess(screenRoute);\n    }\n  }, []);\n\n  // Check data access\n  const checkDataAccess = useCallback(async (dataType, context = {}) => {\n    try {\n      return await RBACService.hasDataAccess(dataType, context);\n    } catch (error) {\n      console.warn('Data access check failed, using fallback:', error);\n      return RBACService.getFallbackDataAccess(dataType, context);\n    }\n  }, []);\n\n  // Check plant data access\n  const checkPlantDataAccess = useCallback(async (dataType, plantCode, context = {}) => {\n    try {\n      return await RBACService.hasPlantDataAccess(dataType, plantCode, context);\n    } catch (error) {\n      console.warn('Plant data access check failed, using fallback:', error);\n      return RBACService.getFallbackPlantDataAccess(dataType, plantCode, context);\n    }\n  }, []);\n\n  // Make access decision\n  const makeAccessDecision = useCallback(async (resourceType, resourceId, action, context = {}) => {\n    try {\n      return await RBACService.makeAccessDecision(resourceType, resourceId, action, context);\n    } catch (error) {\n      console.warn('Access decision failed, using fallback:', error);\n      return RBACService.getFallbackAccessDecision(resourceType, resourceId, action, context);\n    }\n  }, []);\n\n  // Filter data by plant access\n  const filterByPlantAccess = useCallback((data, plantExtractor) => {\n    return RBACService.filterDataByPlantAccess(data, plantExtractor);\n  }, []);\n\n  return {\n    // Loading states\n    loading,\n    error,\n    \n    // User info\n    isAuthenticated: isAuthenticated(),\n    currentUser: getCurrentUser(),\n    primaryRole: getPrimaryRoleType(),\n    userPlants: getUserPlantCodes(),\n    primaryPlant: getPrimaryPlantCode(),\n    \n    // Role checks\n    isAdmin: isAdmin(),\n    isJvcUser: isJvcUser(),\n    isCqsUser: isCqsUser(),\n    isTechUser: isTechUser(),\n    isPlantUser: isPlantUser(),\n    isViewer: isViewer(),\n    \n    // Access summary\n    accessSummary,\n    \n    // Helper functions\n    hasRole: (role) => hasRole(role),\n    hasAnyRole: (roles) => roles.some(role => hasRole(role)),\n    hasAllRoles: (roles) => roles.every(role => hasRole(role)),\n    \n    // Async access checks\n    checkScreenAccess,\n    checkDataAccess,\n    checkPlantDataAccess,\n    makeAccessDecision,\n    \n    // Data filtering\n    filterByPlantAccess,\n    \n    // Refresh function\n    refresh: loadAccessSummary\n  };\n};\n\n/**\n * Hook for checking specific screen access\n */\nexport const useScreenAccess = (screenRoute) => {\n  const [hasAccess, setHasAccess] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const checkAccess = async () => {\n      if (!isAuthenticated() || !screenRoute) {\n        setHasAccess(false);\n        setLoading(false);\n        return;\n      }\n\n      try {\n        setLoading(true);\n        setError(null);\n        \n        const access = await RBACService.hasScreenAccess(screenRoute);\n        setHasAccess(access);\n      } catch (err) {\n        console.warn('Screen access check failed:', err);\n        setError(err);\n        \n        // Use fallback\n        const fallbackAccess = RBACService.getFallbackScreenAccess(screenRoute);\n        setHasAccess(fallbackAccess);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    checkAccess();\n  }, [screenRoute]);\n\n  return { hasAccess, loading, error };\n};\n\n/**\n * Hook for checking data access\n */\nexport const useDataAccess = (dataType, context = {}) => {\n  const [hasAccess, setHasAccess] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const checkAccess = async () => {\n      if (!isAuthenticated() || !dataType) {\n        setHasAccess(false);\n        setLoading(false);\n        return;\n      }\n\n      try {\n        setLoading(true);\n        setError(null);\n        \n        const access = await RBACService.hasDataAccess(dataType, context);\n        setHasAccess(access);\n      } catch (err) {\n        console.warn('Data access check failed:', err);\n        setError(err);\n        \n        // Use fallback\n        const fallbackAccess = RBACService.getFallbackDataAccess(dataType, context);\n        setHasAccess(fallbackAccess);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    checkAccess();\n  }, [dataType, context]);\n\n  return { hasAccess, loading, error };\n};\n\n/**\n * Hook for plant-specific data filtering\n */\nexport const usePlantDataFilter = (data, plantExtractor) => {\n  const [filteredData, setFilteredData] = useState([]);\n\n  useEffect(() => {\n    if (!Array.isArray(data)) {\n      setFilteredData([]);\n      return;\n    }\n\n    const filtered = RBACService.filterDataByPlantAccess(data, plantExtractor);\n    setFilteredData(filtered);\n  }, [data, plantExtractor]);\n\n  return filteredData;\n};\n\nexport default useRoleBasedAccess;","import { Result, Spin } from 'antd';\nimport React from 'react';\n\n\nimport { \n  isAuthenticated, \n  isAdmin, \n  isJvcUser, \n  isCqsUser, \n  isTechUser, \n  isPlantUser, \n  isViewer,\n  hasRole,\n  getPrimaryRoleType,\n  getCurrentUser,\n  getToken\n} from '../services/auth';\nimport JWTValidator from '../services/jwtValidator';\n\n/**\n * Role-based component wrapper that conditionally renders content based on user roles\n */\nconst RoleBasedComponent = ({ \n  children, \n  roles = [], \n  requireAll = false, \n  fallback = null, \n  loading = false,\n  showFallback = true \n}) => {\n  \n  if (loading) {\n    return <Spin size=\"large\" />;\n  }\n\n  if (!isAuthenticated()) {\n    return showFallback ? (\n      <Result\n        status=\"warning\"\n        title=\"Authentication Required\"\n        subTitle=\"Please log in to access this content.\"\n      />\n    ) : null;\n  }\n\n  // If no roles specified, show content to all authenticated users\n  if (!roles || roles.length === 0) {\n    return children;\n  }\n\n  // Check role access - admins have access to everything\n  const adminAccess = isAdmin();\n  const roleAccess = requireAll \n    ? roles.every(role => hasRole(role))\n    : roles.some(role => hasRole(role));\n  \n  const hasAccess = adminAccess || roleAccess;\n\n  if (!hasAccess) {\n    if (fallback) {\n      return fallback;\n    }\n    \n    return showFallback ? (\n      <Result\n        status=\"403\"\n        title=\"Access Denied\"\n        subTitle={`This content requires one of the following roles: ${roles.join(', ')} or ADMIN privileges`}\n      />\n    ) : null;\n  }\n\n  return children;\n};\n\n/**\n * Convenience components for specific roles\n */\nexport const AdminOnly = ({ children, fallback = null, showFallback = true }) => {\n  if (!isAuthenticated()) {\n    return showFallback ? (\n      <Result\n        status=\"warning\"\n        title=\"Authentication Required\"\n        subTitle=\"Please log in to access this content.\"\n      />\n    ) : null;\n  }\n\n  // Direct check using multiple methods\n  const currentUser = getCurrentUser();\n  const adminStatus = isAdmin();\n  const hasAdminRole = hasRole('ADMIN');\n  const hasAdminRoleLower = hasRole('admin');\n  const hasRoleAdmin = hasRole('ROLE_ADMIN');\n  \n  // Also check the JWT token directly\n  const token = getToken();\n  let tokenIsAdmin = false;\n  let tokenHasAdminRole = false;\n  \n  if (token) {\n    try {\n      const payload = JWTValidator.getTokenPayload(token);\n      tokenIsAdmin = payload?.isAdmin === true;\n      tokenHasAdminRole = payload?.roles?.includes('ADMIN') || payload?.authorities?.includes('ADMIN');\n    } catch (error) {\n      console.error('Error checking token in AdminOnly:', error);\n    }\n  }\n  \n  const hasAccess = adminStatus || hasAdminRole || hasAdminRoleLower || hasRoleAdmin || tokenIsAdmin || tokenHasAdminRole;\n  \n  // Enhanced debugging\n  console.log('AdminOnly Enhanced Debug:', {\n    currentUser,\n    adminStatus,\n    hasAdminRole,\n    hasAdminRoleLower,\n    hasRoleAdmin,\n    tokenIsAdmin,\n    tokenHasAdminRole,\n    finalHasAccess: hasAccess,\n    token: token ? 'present' : 'missing'\n  });\n\n  if (!hasAccess) {\n    if (fallback) {\n      return fallback;\n    }\n    \n    return showFallback ? (\n      <Result\n        status=\"403\"\n        title=\"Access Denied\"\n        subTitle={`This content requires administrator privileges. Debug: user=${currentUser}, isAdmin=${adminStatus}, hasRole=${hasAdminRole}, tokenAdmin=${tokenIsAdmin}`}\n      />\n    ) : null;\n  }\n\n  return children;\n};\n\nexport const JvcOnly = ({ children, fallback = null, showFallback = true }) => (\n  <RoleBasedComponent \n    roles={['JVC_USER', 'JVC_ROLE', 'ADMIN']} \n    fallback={fallback} \n    showFallback={showFallback}\n  >\n    {children}\n  </RoleBasedComponent>\n);\n\nexport const CqsOnly = ({ children, fallback = null, showFallback = true }) => (\n  <RoleBasedComponent \n    roles={['CQS_USER', 'CQS_ROLE', 'ADMIN']} \n    fallback={fallback} \n    showFallback={showFallback}\n  >\n    {children}\n  </RoleBasedComponent>\n);\n\nexport const TechOnly = ({ children, fallback = null, showFallback = true }) => (\n  <RoleBasedComponent \n    roles={['TECH_USER', 'TECH_ROLE', 'ADMIN']} \n    fallback={fallback} \n    showFallback={showFallback}\n  >\n    {children}\n  </RoleBasedComponent>\n);\n\nexport const PlantOnly = ({ children, fallback = null, showFallback = true }) => (\n  <RoleBasedComponent \n    roles={['PLANT_USER', 'PLANT_ROLE', 'ADMIN']} \n    fallback={fallback} \n    showFallback={showFallback}\n  >\n    {children}\n  </RoleBasedComponent>\n);\n\nexport const NonViewerOnly = ({ children, fallback = null, showFallback = true }) => {\n  if (!isAuthenticated()) {\n    return showFallback ? (\n      <Result\n        status=\"warning\"\n        title=\"Authentication Required\"\n        subTitle=\"Please log in to access this content.\"\n      />\n    ) : null;\n  }\n\n  if (isViewer() && !isAdmin()) {\n    return fallback || (showFallback ? (\n      <Result\n        status=\"403\"\n        title=\"Access Denied\"\n        subTitle=\"Viewers cannot access this content.\"\n      />\n    ) : null);\n  }\n\n  return children;\n};\n\n/**\n * Hook for role-based conditional rendering\n */\nexport const useRoleAccess = () => {\n  return {\n    isAuthenticated: isAuthenticated(),\n    isAdmin: isAdmin(),\n    isJvcUser: isJvcUser(),\n    isCqsUser: isCqsUser(),\n    isTechUser: isTechUser(),\n    isPlantUser: isPlantUser(),\n    isViewer: isViewer(),\n    primaryRole: getPrimaryRoleType(),\n    hasRole: (role) => hasRole(role),\n    hasAnyRole: (roles) => roles.some(role => hasRole(role)),\n    hasAllRoles: (roles) => roles.every(role => hasRole(role))\n  };\n};\n\nexport default RoleBasedComponent;","import {\n  Typography,\n  Table,\n  Form,\n  Input,\n  Select,\n  DatePicker,\n  Button,\n  Row,\n  Col,\n  message\n} from 'antd';\nimport React, { useState, useEffect } from 'react';\n\nimport apiClient from '../api/client';\n\n// eslint-disable-next-line no-undef\nconst { Title } = Typography;\n\nconst Auditlogs = () => {\n  const [logs, setLogs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [form] = Form.useForm();\n  const [filtering, setFiltering] = useState(false);\n\n  const fetchLogs = async signal => {\n    setLoading(true);\n    try {\n      const res = await apiClient.get('/audit/logs', { signal });\n      if (!signal?.aborted) {\n        // Ensure response is always an array\n        const safeLogs = Array.isArray(res) ? res : [];\n        setLogs(safeLogs);\n      }\n    } catch (err) {\n      if (!signal?.aborted) {\n        message.error('Failed to fetch audit logs');\n        console.error('Error fetching audit logs:', err);\n        // Set empty array on error\n        setLogs([]);\n      }\n    } finally {\n      if (!signal?.aborted) {\n        setLoading(false);\n      }\n    }\n  };\n\n  const fetchFilteredLogs = async filters => {\n    setLoading(true);\n    let url = '/audit/logs';\n    if (filters) {\n      if (filters.userId) {\n        url = `/audit/logs/user/${filters.userId}`;\n      } else if (filters.action) {\n        url = `/audit/logs/action/${filters.action}`;\n      } else if (filters.entityType) {\n        url = `/audit/logs/entity/${filters.entityType}`;\n      } else if (filters.severity) {\n        url = `/audit/logs/severity/${filters.severity}`;\n      } else if (filters.dateRange && filters.dateRange.length === 2) {\n        const [start, end] = filters.dateRange;\n        url = `/audit/logs/date?start=${start.toISOString()}&end=${end.toISOString()}`;\n      }\n    }\n    try {\n      const res = await apiClient.get(url);\n      // Ensure response is always an array\n      const safeLogs = Array.isArray(res) ? res : [];\n      setLogs(safeLogs);\n    } catch (err) {\n      message.error('Failed to fetch audit logs');\n      console.error('Error fetching filtered audit logs:', err);\n      // Set empty array on error\n      setLogs([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const onFilter = values => {\n    setFiltering(true);\n    fetchFilteredLogs(values).then(() => setFiltering(false));\n  };\n\n  const onReset = () => {\n    form.resetFields();\n    fetchLogs();\n  };\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    fetchLogs(controller.signal);\n\n    return () => {\n      controller.abort();\n    };\n  }, []);\n\n  const columns = [\n    {\n      title: 'Timestamp',\n      dataIndex: 'timestamp',\n      key: 'timestamp',\n      sorter: (a, b) => new Date(a.timestamp) - new Date(b.timestamp)\n    },\n    {\n      title: 'User',\n      dataIndex: 'user',\n      key: 'user',\n      sorter: (a, b) => a.user.localeCompare(b.user)\n    },\n    {\n      title: 'Action',\n      dataIndex: 'action',\n      key: 'action',\n      sorter: (a, b) => a.action.localeCompare(b.action)\n    },\n    {\n      title: 'Details',\n      dataIndex: 'details',\n      key: 'details',\n      width: '40%'\n    }\n  ];\n\n  return (\n    <div>\n      <Title level={2}>Audit Logs</Title>\n      <Form form={form} layout=\"vertical\" onFinish={onFilter} style={{ marginBottom: 24 }}>\n        <Row gutter={16}>\n          <Col span={4}>\n            <Form.Item name=\"userId\" label=\"User ID\">\n              <Input placeholder=\"User ID\" />\n            </Form.Item>\n          </Col>\n          <Col span={4}>\n            <Form.Item name=\"action\" label=\"Action\">\n              <Input placeholder=\"Action\" />\n            </Form.Item>\n          </Col>\n          <Col span={4}>\n            <Form.Item name=\"entityType\" label=\"Entity\">\n              <Input placeholder=\"Entity Type\" />\n            </Form.Item>\n          </Col>\n          <Col span={4}>\n            <Form.Item name=\"severity\" label=\"Severity\">\n              <Select allowClear placeholder=\"Select severity\">\n                <Select.Option value=\"INFO\">INFO</Select.Option>\n                <Select.Option value=\"WARN\">WARN</Select.Option>\n                <Select.Option value=\"ERROR\">ERROR</Select.Option>\n                <Select.Option value=\"SECURITY\">SECURITY</Select.Option>\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col span={6}>\n            <Form.Item name=\"dateRange\" label=\"Date Range\">\n              <DatePicker.RangePicker showTime style={{ width: '100%' }} />\n            </Form.Item>\n          </Col>\n          <Col span={2} style={{ display: 'flex', alignItems: 'end' }}>\n            <Button type=\"primary\" htmlType=\"submit\" loading={filtering}>\n              Filter\n            </Button>\n          </Col>\n          <Col span={2} style={{ display: 'flex', alignItems: 'end' }}>\n            <Button onClick={onReset}>Reset</Button>\n          </Col>\n        </Row>\n      </Form>\n      <Table columns={columns} dataSource={logs} rowKey=\"id\" loading={loading} bordered />\n    </div>\n  );\n};\n\nexport default Auditlogs;\n","import { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport { Table, Button, Form, Input, Modal, message, Space, Popconfirm, Typography } from 'antd';\nimport React, { useState, useEffect } from 'react';\n\nimport apiClient from '../api/client';\n\nconst { Title } = Typography;\n\nconst Roles = () => {\n  const [roles, setRoles] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [editingRole, setEditingRole] = useState(null);\n  const [form] = Form.useForm();\n\n  const fetchRoles = async signal => {\n    setLoading(true);\n    try {\n      const response = await apiClient.get('/admin/roles', { signal });\n      if (!signal?.aborted) {\n        // Ensure response is always an array\n        const safeRoles = Array.isArray(response) ? response : [];\n        setRoles(safeRoles);\n      }\n    } catch (error) {\n      if (!signal?.aborted) {\n        message.error('Failed to fetch roles');\n        console.error('Error fetching roles:', error);\n        // Set empty array on error\n        setRoles([]);\n      }\n    } finally {\n      if (!signal?.aborted) {\n        setLoading(false);\n      }\n    }\n  };\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    fetchRoles(controller.signal);\n\n    return () => {\n      controller.abort();\n    };\n  }, []);\n\n  const handleAdd = () => {\n    setEditingRole(null);\n    form.resetFields();\n    setModalVisible(true);\n  };\n\n  const handleEdit = role => {\n    setEditingRole(role);\n    form.setFieldsValue(role);\n    setModalVisible(true);\n  };\n\n  const handleDelete = async id => {\n    try {\n      await apiClient.delete(`/admin/roles/${id}`);\n      message.success('Role deleted successfully');\n      fetchRoles();\n    } catch (error) {\n      message.error('Failed to delete role');\n    }\n  };\n\n  const handleModalOk = async () => {\n    try {\n      const values = await form.validateFields();\n      if (editingRole) {\n        await apiClient.put(`/admin/roles/${editingRole.id}`, values);\n        message.success('Role updated successfully');\n      } else {\n        await apiClient.post('/admin/roles', values);\n        message.success('Role created successfully');\n      }\n      setModalVisible(false);\n      form.resetFields();\n      fetchRoles();\n    } catch (error) {\n      if (!error.errorFields) {\n        message.error('Failed to save role');\n      }\n    }\n  };\n\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name'\n    },\n    {\n      title: 'Description',\n      dataIndex: 'description',\n      key: 'description'\n    },\n    {\n      title: 'Actions',\n      key: 'actions',\n      render: (_, record) => (\n        <Space>\n          <Button icon={<EditOutlined />} onClick={() => handleEdit(record)} />\n          <Popconfirm\n            title=\"Are you sure you want to delete this role?\"\n            onConfirm={() => handleDelete(record.id)}\n            okText=\"Yes\"\n            cancelText=\"No\"\n          >\n            <Button icon={<DeleteOutlined />} danger />\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ];\n\n  return (\n    <div>\n      <Title level={2}>Roles</Title>\n      <Button\n        type=\"primary\"\n        icon={<PlusOutlined />}\n        onClick={handleAdd}\n        style={{ marginBottom: 16 }}\n      >\n        Add Role\n      </Button>\n      <Table columns={columns} dataSource={roles} rowKey=\"id\" loading={loading} />\n      <Modal\n        title={editingRole ? 'Edit Role' : 'Add Role'}\n        open={modalVisible}\n        onOk={handleModalOk}\n        onCancel={() => setModalVisible(false)}\n      >\n        <Form form={form} layout=\"vertical\">\n          <Form.Item\n            name=\"name\"\n            label=\"Name\"\n            rules={[{ required: true, message: 'Please input the role name!' }]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            name=\"description\"\n            label=\"Description\"\n            rules={[{ required: true, message: 'Please input the role description!' }]}\n          >\n            <Input.TextArea />\n          </Form.Item>\n        </Form>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Roles;\n","import { UserOutlined, TeamOutlined, EditOutlined } from '@ant-design/icons';\nimport { Table, Card, Button, message, Spin, Typography, Modal, Transfer, Space, Tabs } from 'antd';\nimport React, { useState, useEffect } from 'react';\n\nimport apiClient from '../api/client';\nimport { PAGINATION } from '../constants';\nimport { ensureArray } from '../utils/dataUtils';\n\nconst { Title, Text } = Typography;\nconst { TabPane } = Tabs;\n\nconst UserRoleManagement = () => {\n  const [loading, setLoading] = useState(true);\n  const [userRoles, setUserRoles] = useState([]);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [availableRoles, setAvailableRoles] = useState([]);\n  const [assignedRoleIds, setAssignedRoleIds] = useState([]);\n  const [saveLoading, setSaveLoading] = useState(false);\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    fetchUserRoles(controller.signal);\n\n    return () => {\n      controller.abort();\n    };\n  }, []);\n\n  const fetchUserRoles = async signal => {\n    setLoading(true);\n    try {\n      const response = await apiClient.get('/admin/monitoring/user-roles', { signal });\n      if (!signal?.aborted) {\n        // Ensure response is always an array\n        const safeResponse = ensureArray(response);\n        setUserRoles(safeResponse);\n      }\n    } catch (error) {\n      if (!signal?.aborted) {\n        message.error('Failed to load user role assignments');\n        console.error('Error fetching user roles:', error);\n        // Set empty array on error\n        setUserRoles([]);\n      }\n    } finally {\n      if (!signal?.aborted) {\n        setLoading(false);\n      }\n    }\n  };\n\n  const handleEditRoles = user => {\n    setSelectedUser(user);\n    setAvailableRoles([\n      ...(user.assignedRoles || []).map(role => ({\n        ...role,\n        key: role.id.toString()\n      })),\n      ...(user.availableRoles || []).map(role => ({\n        ...role,\n        key: role.id.toString()\n      }))\n    ]);\n    setAssignedRoleIds((user.assignedRoles || []).map(role => role.id.toString()));\n    setModalVisible(true);\n  };\n\n  const handleTransferChange = nextTargetKeys => {\n    setAssignedRoleIds(nextTargetKeys);\n  };\n\n  const handleSaveRoles = async () => {\n    if (!selectedUser) {\n      return;\n    }\n\n    setSaveLoading(true);\n    try {\n      const roleIds = assignedRoleIds.map(id => parseInt(id, 10));\n      await apiClient.put(`/admin/monitoring/user-roles/${selectedUser.userId}`, roleIds);\n      message.success('User roles updated successfully');\n      setModalVisible(false);\n      fetchUserRoles();\n    } catch (error) {\n      message.error('Failed to update user roles');\n      console.error('Error updating user roles:', error);\n    } finally {\n      setSaveLoading(false);\n    }\n  };\n\n  const columns = [\n    {\n      title: 'Username',\n      dataIndex: 'username',\n      key: 'username',\n      sorter: (a, b) => a.username.localeCompare(b.username)\n    },\n    {\n      title: 'Email',\n      dataIndex: 'email',\n      key: 'email'\n    },\n    {\n      title: 'Assigned Roles',\n      dataIndex: 'assignedRoles',\n      key: 'assignedRoles',\n      render: roles => (roles || []).map(role => role.name).join(', ')\n    },\n    {\n      title: 'Actions',\n      key: 'actions',\n      render: (_, record) => (\n        <Button type=\"primary\" icon={<EditOutlined />} onClick={() => handleEditRoles(record)}>\n          Edit Roles\n        </Button>\n      )\n    }\n  ];\n\n  return (\n    <div>\n      <Title level={2}>User Role Management</Title>\n\n      <Tabs defaultActiveKey=\"1\">\n        <TabPane\n          tab={\n            <span>\n              <UserOutlined />\n              User Roles\n            </span>\n          }\n          key=\"1\"\n        >\n          <Card>\n            <Button type=\"primary\" onClick={fetchUserRoles} style={{ marginBottom: 16 }}>\n              Refresh User Roles\n            </Button>\n\n            {loading ? (\n              <div style={{ textAlign: 'center', padding: '50px' }}>\n                <Spin size=\"large\" />\n                <p>Loading user role assignments...</p>\n              </div>\n            ) : (\n              <Table\n                dataSource={userRoles}\n                columns={columns}\n                rowKey=\"userId\"\n                pagination={{ pageSize: PAGINATION.DEFAULT_PAGE_SIZE }}\n              />\n            )}\n          </Card>\n        </TabPane>\n\n        <TabPane\n          tab={\n            <span>\n              <TeamOutlined />\n              Workflow Permissions\n            </span>\n          }\n          key=\"2\"\n        >\n          <Card>\n            <div style={{ padding: '20px' }}>\n              <Title level={4}>Workflow Role Permissions</Title>\n\n              <Space direction=\"vertical\" style={{ width: '100%' }}>\n                <Card title=\"JVC User Permissions\" size=\"small\">\n                  <ul>\n                    <li>Initiate MSDS workflows for materials</li>\n                    <li>Assign workflows to plant teams</li>\n                    <li>View JVC dashboard with pending extensions</li>\n                    <li>Respond to queries from plant teams</li>\n                  </ul>\n                </Card>\n\n                <Card title=\"Plant User Permissions\" size=\"small\">\n                  <ul>\n                    <li>Complete multi-step questionnaires</li>\n                    <li>Raise queries to CQS/Tech/JVC teams</li>\n                    <li>View plant dashboard with assigned materials</li>\n                    <li>Mark materials as completed</li>\n                  </ul>\n                </Card>\n\n                <Card title=\"CQS User Permissions\" size=\"small\">\n                  <ul>\n                    <li>Receive and resolve queries from plant teams</li>\n                    <li>View CQS dashboard with pending queries</li>\n                    <li>Access material context for queries</li>\n                  </ul>\n                </Card>\n\n                <Card title=\"Tech User Permissions\" size=\"small\">\n                  <ul>\n                    <li>Receive and resolve technical queries from plant teams</li>\n                    <li>View Tech dashboard with pending queries</li>\n                    <li>Access material context for queries</li>\n                  </ul>\n                </Card>\n\n                <Card title=\"Admin Permissions\" size=\"small\">\n                  <ul>\n                    <li>Access workflow monitoring dashboard</li>\n                    <li>Generate query SLA reports</li>\n                    <li>Manage user roles and permissions</li>\n                    <li>Export audit logs and workflow reports</li>\n                    <li>View all workflows regardless of state</li>\n                  </ul>\n                </Card>\n              </Space>\n\n              <Text type=\"secondary\" style={{ marginTop: 16, display: 'block' }}>\n                Note: Users can have multiple roles assigned to them. The permissions are\n                cumulative.\n              </Text>\n            </div>\n          </Card>\n        </TabPane>\n      </Tabs>\n\n      <Modal\n        title=\"Edit User Roles\"\n        open={modalVisible}\n        onOk={handleSaveRoles}\n        onCancel={() => setModalVisible(false)}\n        width={800}\n        confirmLoading={saveLoading}\n      >\n        {selectedUser && (\n          <>\n            <p>\n              <strong>User:</strong> {selectedUser.username} ({selectedUser.email})\n            </p>\n            <p>Assign or remove roles using the transfer control below:</p>\n            <Transfer\n              dataSource={availableRoles}\n              titles={['Available Roles', 'Assigned Roles']}\n              targetKeys={assignedRoleIds}\n              onChange={handleTransferChange}\n              render={item => item.name}\n              listStyle={{\n                width: 350,\n                height: 300\n              }}\n            />\n          </>\n        )}\n      </Modal>\n    </div>\n  );\n};\n\nexport default UserRoleManagement;\n"],"names":["Title","Typography","Sessions","sessions","setSessions","useState","loading","setLoading","fetchSessions","async","response","apiClient","get","signal","aborted","safeSessions","Array","isArray","error","console","useEffect","controller","AbortController","abort","columns","title","dataIndex","key","render","_","record","_jsx","Button","type","danger","onClick","delete","sessionId","handleTerminate","id","children","_jsxs","level","Table","dataSource","rowKey","AdminPanel","location","useLocation","navigate","useNavigate","currentPath","pathname","isAdmin","useRoleBasedAccess","React","AdminOnly","style","padding","Menu","mode","selectedKeys","items","label","map","item","Link","to","marginBottom","marginTop","Routes","Route","path","element","Users","Roles","AuditLogs","WorkflowMonitoring","UserRoleManagement","UI_CONFIG","MOBILE_BREAKPOINT","TABLET_BREAKPOINT","PAGE_SIZE","DEBOUNCE_DELAY","WORKFLOW_STATES","INITIATED","IN_PROGRESS","PENDING_REVIEW","APPROVED","REJECTED","COMPLETED","PRIORITY_LEVELS","LOW","MEDIUM","HIGH","URGENT","CRITICAL","FILE_SIZE","MAX_UPLOAD_SIZE","BYTES_PER_KB","BYTES_PER_MB","BYTES_PER_GB","WORKFLOW_SPECIFIC_STATES","JVC_PENDING","PLANT_PENDING","CQS_PENDING","TECH_PENDING","DRAFT","SUBMITTED","QUERY_STATUS","OPEN","RESOLVED","CLOSED","TEAM_NAMES","CQS","TECH","JVC","PLANT","AUTO_SAVE","INTERVAL","PAGINATION","DEFAULT_PAGE_SIZE","SMALL_PAGE_SIZE","LARGE_PAGE_SIZE","SHOW_SIZE_CHANGER","SHOW_QUICK_JUMPER","COMPLETION_FILTERS","ALL","NOT_STARTED","TAB_KEYS","INITIATE","PENDING","QUERIES","HISTORY","accessSummary","setAccessSummary","setError","loadAccessSummary","useCallback","isAuthenticated","summary","RBACService","getUserAccessSummary","err","warn","fallbackSummary","getFallbackAccessSummary","checkScreenAccess","hasScreenAccess","screenRoute","getFallbackScreenAccess","checkDataAccess","dataType","context","arguments","length","undefined","hasDataAccess","getFallbackDataAccess","checkPlantDataAccess","plantCode","hasPlantDataAccess","getFallbackPlantDataAccess","makeAccessDecision","resourceType","resourceId","action","getFallbackAccessDecision","filterByPlantAccess","data","plantExtractor","filterDataByPlantAccess","currentUser","getCurrentUser","primaryRole","getPrimaryRoleType","userPlants","getUserPlantCodes","primaryPlant","getPrimaryPlantCode","isJvcUser","isCqsUser","isTechUser","isPlantUser","isViewer","hasRole","role","hasAnyRole","roles","some","hasAllRoles","every","refresh","RoleBasedComponent","_ref","requireAll","fallback","showFallback","Spin","size","Result","status","subTitle","adminAccess","roleAccess","join","_ref2","adminStatus","hasAdminRole","hasAdminRoleLower","hasRoleAdmin","token","getToken","tokenIsAdmin","tokenHasAdminRole","_payload$roles","_payload$authorities","payload","JWTValidator","getTokenPayload","includes","authorities","hasAccess","log","finalHasAccess","JvcOnly","_ref3","CqsOnly","_ref4","TechOnly","_ref5","PlantOnly","_ref6","Auditlogs","logs","setLogs","form","Form","useForm","filtering","setFiltering","fetchLogs","res","safeLogs","message","sorter","a","b","Date","timestamp","user","localeCompare","width","layout","onFinish","values","url","filters","userId","entityType","severity","dateRange","start","end","toISOString","fetchFilteredLogs","then","Row","gutter","Col","span","Item","name","Input","placeholder","Select","allowClear","Option","value","DatePicker","RangePicker","showTime","display","alignItems","htmlType","onReset","resetFields","bordered","setRoles","modalVisible","setModalVisible","editingRole","setEditingRole","fetchRoles","safeRoles","Space","icon","EditOutlined","handleEdit","setFieldsValue","Popconfirm","onConfirm","success","handleDelete","okText","cancelText","DeleteOutlined","PlusOutlined","handleAdd","Modal","open","onOk","validateFields","put","post","errorFields","onCancel","rules","required","TextArea","Text","TabPane","Tabs","userRoles","setUserRoles","selectedUser","setSelectedUser","availableRoles","setAvailableRoles","assignedRoleIds","setAssignedRoleIds","saveLoading","setSaveLoading","fetchUserRoles","safeResponse","ensureArray","username","handleEditRoles","assignedRoles","toString","defaultActiveKey","tab","UserOutlined","Card","textAlign","pagination","pageSize","TeamOutlined","direction","roleIds","parseInt","confirmLoading","_Fragment","email","Transfer","titles","targetKeys","onChange","nextTargetKeys","listStyle","height"],"sourceRoot":""}