"use strict";(self.webpackChunkfrontend=self.webpackChunkfrontend||[]).push([[394],{9394:(e,t,o)=>{o.d(t,{S:()=>r});var a=o(6649);const r={getDashboardSummary:()=>a.default.get("/dashboard/summary"),getOverdueWorkflows:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:3;return a.default.get(`/workflows/overdue?days=${e}`)},getRecentActivity:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:7;return a.default.get(`/workflows/recent/created?days=${e}`)},getWorkflowCountsByState:()=>a.default.get("/dashboard/counts-by-state"),getWorkflowsByPlant:e=>a.default.get(`/workflows/plant/${encodeURIComponent(e)}`),createWorkflow:e=>a.default.post("/workflows",e),getWorkflow:e=>a.default.get(`/workflows/${e}`),updateWorkflow:(e,t)=>a.default.put(`/workflows/${e}`,t),deleteWorkflow:e=>a.default.delete(`/workflows/${e}`),transitionWorkflowState:(e,t,o)=>a.default.put(`/workflows/${e}/transition`,{newState:t,comment:o}),extendWorkflow:(e,t)=>a.default.put(`/workflows/${e}/extend`,t),completeWorkflow:(e,t)=>a.default.put(`/workflows/${e}/complete`,t),extendToMultiplePlantsSmartly:async e=>{try{const t=await a.default.withRetry(()=>a.default.post("/workflows/extend-to-plants",e),3,1e3);return{...t,documentReuse:t.documentReuse||{totalReusedDocuments:0,reusedDocuments:[],reuseStrategy:"NONE",sourceDescription:"No documents available for reuse"}}}catch(t){throw console.error("[WorkflowAPI] Smart extension failed:",t),{...t,context:"SMART_PLANT_EXTENSION",extensionData:e}}},searchWorkflows:e=>a.default.post("/workflows/search",e),getWorkflowsByState:e=>a.default.get(`/workflows/state/${e}`),getWorkflowsByUser:e=>a.default.get(`/workflows/initiated-by/${encodeURIComponent(e)}`),canTransitionTo:(e,t)=>a.default.get(`/workflows/${e}/can-transition/${t}`),isReadyForCompletion:e=>a.default.get(`/workflows/${e}/ready-for-completion`),checkWorkflowExists:(e,t,o)=>a.default.get(`/workflows/check-exists?projectCode=${encodeURIComponent(e)}&materialCode=${encodeURIComponent(t)}&plantCode=${encodeURIComponent(o)}`),getWorkflowStats:e=>a.default.get(`/workflows/stats?range=${e}`),getCompletionRateByPlant:()=>a.default.get("/workflows/completion-rate-by-plant"),getWorkflowCompletionTrend:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:6;return a.default.get(`/workflows/completion-trend?months=${e}`)},getPendingWorkflows:()=>a.default.get("/workflows/pending"),getWorkflowsWithOpenQueries:()=>a.default.get("/workflows/with-open-queries"),getCountByState:e=>a.default.get(`/workflows/stats/count-by-state/${e}`),getOverdueCount:()=>a.default.get("/workflows/stats/overdue-count"),getWorkflowsWithOpenQueriesCount:()=>a.default.get("/workflows/stats/with-open-queries-count"),getRecentlyCreated:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:7;return a.default.get(`/workflows/recent/created?days=${e}`)},getRecentlyCompleted:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:7;return a.default.get(`/workflows/recent/completed?days=${e}`)},saveDraftResponses:(e,t)=>a.default.post(`/workflows/${e}/draft-responses`,t),getDraftResponses:e=>a.default.get(`/workflows/${e}/draft-responses`),submitQuestionnaire:(e,t)=>a.default.post(`/workflows/${e}/submit-questionnaire`,t),getWorkflowDocuments:e=>a.default.get(`/workflows/${e}/documents`),getAllWorkflowRelatedDocuments:async e=>{try{return await a.default.withRetry(()=>a.default.get(`/workflows/${e}/documents/all`),2,500)}catch(t){throw console.error(`[WorkflowAPI] Failed to get all documents for workflow ${e}:`,t),{...t,context:"GET_ALL_WORKFLOW_DOCUMENTS",workflowId:e}}},exportWorkflowDocuments:async function(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];try{return await a.default.withRetry(()=>a.default.download(`/workflows/${e}/documents/export?includeQueryDocuments=${t}`),2,1e3)}catch(o){throw console.error(`[WorkflowAPI] Failed to export documents for workflow ${e}:`,o),{...o,context:"EXPORT_WORKFLOW_DOCUMENTS",workflowId:e,includeQueryDocuments:t}}},searchUnifiedDocuments:async e=>{try{return await a.default.withRetry(()=>a.default.post("/documents/search/unified",e),2,500)}catch(t){throw console.error("[WorkflowAPI] Unified document search failed:",t),{...t,context:"UNIFIED_DOCUMENT_SEARCH",searchParams:e}}},getUnifiedDocumentInfo:async(e,t)=>{try{return await a.default.withRetry(()=>a.default.get(`/documents/unified-info?projectCode=${encodeURIComponent(e)}&materialCode=${encodeURIComponent(t)}`),2,500)}catch(o){throw console.error(`[WorkflowAPI] Failed to get unified document info for ${e}/${t}:`,o),{...o,context:"GET_UNIFIED_DOCUMENT_INFO",projectCode:e,materialCode:t}}},getReusableDocuments:async(e,t)=>{try{return await a.default.withRetry(()=>a.default.get(`/workflows/documents/reusable?projectCode=${encodeURIComponent(e)}&materialCode=${encodeURIComponent(t)}`),2,500)}catch(o){throw console.error(`[WorkflowAPI] Failed to get reusable documents for ${e}/${t}:`,o),{...o,context:"GET_REUSABLE_DOCUMENTS",projectCode:e,materialCode:t}}},downloadDocument:async e=>{try{return await a.default.withRetry(()=>a.default.download(`/workflows/documents/${e}/download`),3,1e3)}catch(t){throw console.error(`[WorkflowAPI] Failed to download document ${e}:`,t),{...t,context:"DOWNLOAD_DOCUMENT",documentId:e}}},uploadDocument:async(e,t,o)=>{try{return await a.default.withRetry(()=>a.default.upload(`/workflows/${e}/documents`,t,{metadata:JSON.stringify(o)}),2,1e3)}catch(r){throw console.error(`[WorkflowAPI] Failed to upload document to workflow ${e}:`,r),{...r,context:"UPLOAD_DOCUMENT",workflowId:e,fileName:(null===t||void 0===t?void 0:t.name)||"unknown"}}},uploadMultipleDocuments:async function(e,t){let o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=[],n=[];for(const s of t)try{const t=await r.uploadDocument(e,s,o);a.push({file:s.name,result:t,success:!0})}catch(l){console.error(`[WorkflowAPI] Failed to upload ${s.name}:`,l),n.push({file:s.name,error:l,success:!1})}return{successful:a,failed:n,totalFiles:t.length,successCount:a.length,failureCount:n.length}},retryDocumentOperation:async function(e,t){let o,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:3;for(let l=1;l<=a;l++)try{switch(e){case"UPLOAD":return await r.uploadDocument(t.workflowId,t.file,t.metadata);case"DOWNLOAD":return await r.downloadDocument(t.documentId);case"GET_DOCUMENTS":return await r.getAllWorkflowRelatedDocuments(t.workflowId);default:throw new Error(`Unknown operation type: ${e}`)}}catch(n){if(o=n,console.warn(`[WorkflowAPI] Retry attempt ${l}/${a} failed for ${e}:`,n),l<a){const e=1e3*Math.pow(2,l);await new Promise(t=>setTimeout(t,e))}}throw{...o,context:"RETRY_OPERATION_FAILED",operationType:e,maxRetries:a,finalAttempt:!0}},updateAllMaterialNamesFromProjectItemMaster:()=>a.default.post("/workflows/update-material-names"),updateMaterialNameFromProjectItemMaster:e=>a.default.post(`/workflows/${e}/update-material-name`),getQuestionnaireTemplate:e=>{let{materialCode:t,plantCode:o,templateType:r="PLANT_QUESTIONNAIRE"}=e;return a.default.get(`/plant-questionnaire/template?materialCode=${encodeURIComponent(t)}&plantCode=${encodeURIComponent(o)}&templateType=${encodeURIComponent(r)}`)},getCqsData:e=>{let{materialCode:t,plantCode:o}=e;return a.default.get(`/plant-questionnaire/cqs-data?materialCode=${encodeURIComponent(t)}&plantCode=${encodeURIComponent(o)}`)},getQuestionnaireData:e=>a.default.get(`/api/v1/questionnaire/${e}`),getQuestionnaireForEdit:e=>a.default.get(`/api/v1/questionnaire/${e}/edit`),getPlantSpecificData:e=>{let{plantCode:t,materialCode:o}=e;return a.default.get(`/plant-questionnaire/plant-data?plantCode=${encodeURIComponent(t)}&materialCode=${encodeURIComponent(o)}`)},getOrCreatePlantSpecificData:e=>{let{plantCode:t,materialCode:o,workflowId:r}=e;return a.default.post(`/plant-questionnaire/plant-data/init?plantCode=${encodeURIComponent(t)}&materialCode=${encodeURIComponent(o)}&workflowId=${r}`)},savePlantSpecificData:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"SYSTEM";return a.default.post(`/plant-questionnaire/plant-data/save?modifiedBy=${encodeURIComponent(t)}`,e)},saveDraftPlantResponses:(e,t)=>a.default.post(`/plant-questionnaire/draft?workflowId=${e}`,t),debugPlantData:(e,t)=>a.default.get(`/plant-questionnaire/debug/${encodeURIComponent(e)}/${encodeURIComponent(t)}`),submitPlantQuestionnaire:(e,t)=>a.default.post(`/plant-questionnaire/submit?workflowId=${e}`,t),getPlantQuestionnaireStats:e=>{let{plantCode:t,materialCode:o}=e;const r=new URLSearchParams({plantCode:t});return o&&r.append("materialCode",o),a.default.get(`/plant-questionnaire/stats?${r.toString()}`)},getPlantDashboardData:e=>a.default.get(`/plant-questionnaire/dashboard?plantCode=${encodeURIComponent(e)}`),initializeSamplePlantData:e=>a.default.post(`/plant-questionnaire/init-sample-data?plantCode=${encodeURIComponent(e)}`),getDocumentReuseStats:async(e,t)=>{try{return await a.default.withRetry(()=>a.default.get(`/workflows/documents/reuse-stats?projectCode=${encodeURIComponent(e)}&materialCode=${encodeURIComponent(t)}`),2,500)}catch(o){throw console.error(`[WorkflowAPI] Failed to get document reuse stats for ${e}/${t}:`,o),{...o,context:"GET_DOCUMENT_REUSE_STATS",projectCode:e,materialCode:t}}},validateDocumentReuse:async(e,t,o)=>{try{return await a.default.withRetry(()=>a.default.post("/workflows/documents/validate-reuse",{projectCode:e,materialCode:t,plantCodes:o}),2,500)}catch(r){throw console.error(`[WorkflowAPI] Failed to validate document reuse for ${e}/${t}:`,r),{...r,context:"VALIDATE_DOCUMENT_REUSE",projectCode:e,materialCode:t,plantCodes:o}}},getDocumentAuditLog:async function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};try{const o=new URLSearchParams(t).toString();return await a.default.withRetry(()=>a.default.get(`/workflows/${e}/documents/audit-log?${o}`),2,500)}catch(o){throw console.error(`[WorkflowAPI] Failed to get document audit log for workflow ${e}:`,o),{...o,context:"GET_DOCUMENT_AUDIT_LOG",workflowId:e,options:t}}},handleDocumentError:(e,t)=>{const o={originalError:e,operation:t,timestamp:(new Date).toISOString(),userMessage:"An error occurred with document operation",technicalMessage:e.message,recoveryActions:[],retryable:!1};switch(e.context){case"UPLOAD_DOCUMENT":o.userMessage="Failed to upload document. Please check file size and format.",o.recoveryActions=["Verify file is under 25MB","Check file format is supported (PDF, DOCX, XLSX, JPG, PNG)","Try uploading again","Contact support if problem persists"],o.retryable=!0;break;case"DOWNLOAD_DOCUMENT":o.userMessage="Failed to download document. Please try again.",o.recoveryActions=["Check your internet connection","Try downloading again","Contact support if document is corrupted"],o.retryable=!0;break;case"GET_ALL_WORKFLOW_DOCUMENTS":o.userMessage="Failed to load workflow documents.",o.recoveryActions=["Refresh the page","Check your internet connection","Contact support if problem persists"],o.retryable=!0;break;case"SMART_PLANT_EXTENSION":o.userMessage="Failed to extend workflow to plants. Some documents may not have been reused.",o.recoveryActions=["Check if workflows were created successfully","Manually upload documents if needed","Try the extension again","Contact support for assistance"],o.retryable=!0;break;case"UNIFIED_DOCUMENT_SEARCH":o.userMessage="Document search failed. Please try again.",o.recoveryActions=["Simplify your search terms","Try searching again","Use individual document lists instead"],o.retryable=!0;break;default:"NETWORK"===e.type?(o.userMessage="Network error occurred. Please check your connection.",o.retryable=!0):"TIMEOUT"===e.type?(o.userMessage="Operation timed out. Please try again.",o.retryable=!0):413===e.status?(o.userMessage="File is too large. Please use a smaller file.",o.retryable=!1):415===e.status&&(o.userMessage="File type not supported. Please use PDF, DOCX, XLSX, JPG, or PNG.",o.retryable=!1)}return o}}}}]);
//# sourceMappingURL=394.5273e5a2.chunk.js.map