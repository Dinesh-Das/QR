{"version":3,"file":"static/js/174.0659536f.chunk.js","mappings":"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","sources":["screens/QuestionnaireViewerPage.js"],"sourcesContent":["import {\r\n  ArrowLeftOutlined,\r\n  CheckCircleOutlined,\r\n  ClockCircleOutlined,\r\n  FileTextOutlined,\r\n  EyeOutlined,\r\n  InfoCircleOutlined,\r\n  UserOutlined,\r\n  CalendarOutlined,\r\n  CheckOutlined,\r\n  ExclamationCircleOutlined,\r\n  DashboardOutlined,\r\n  BarChartOutlined,\r\n  TeamOutlined,\r\n  SettingOutlined,\r\n  BulbOutlined,\r\n  StarOutlined,\r\n  ThunderboltOutlined,\r\n  SafetyOutlined,\r\n  RocketOutlined,\r\n  CrownOutlined\r\n} from '@ant-design/icons';\r\nimport {\r\n  Card,\r\n  Spin,\r\n  Alert,\r\n  Typography,\r\n  Row,\r\n  Col,\r\n  Tag,\r\n  Divider,\r\n  Steps,\r\n  Collapse,\r\n  Form,\r\n  Input,\r\n  Radio,\r\n  Select,\r\n  Button,\r\n  Space,\r\n  Progress,\r\n  Badge,\r\n  Statistic,\r\n  Avatar,\r\n  Timeline,\r\n  Tabs,\r\n  Empty,\r\n  Tooltip,\r\n  Affix\r\n} from 'antd';\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n\r\n\r\nimport apiClient from '../api/client';\r\n\r\nconst { Title, Text, Paragraph } = Typography;\r\nconst { Panel } = Collapse;\r\nconst { TextArea } = Input;\r\nconst { TabPane } = Tabs;\r\n\r\nconst QuestionnaireViewerPage = ({ workflowId: propWorkflowId, onClose }) => {\r\n  const { workflowId: paramWorkflowId } = useParams();\r\n  const navigate = useNavigate();\r\n  \r\n  // Use prop workflowId if provided (for modal), otherwise use URL param\r\n  const workflowId = propWorkflowId || paramWorkflowId;\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [questionnaireData, setQuestionnaireData] = useState(null);\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [activeView, setActiveView] = useState('overview');\r\n\r\n  console.log('QuestionnaireViewerPage mounted with workflowId:', workflowId);\r\n\r\n  // Create overview dashboard\r\n  const renderOverviewDashboard = (questionnaireData) => {\r\n    const { template, plantData, workflow, completionStatus } = questionnaireData;\r\n    \r\n    const totalSteps = template?.steps?.length || 0;\r\n    const completedSteps = template?.steps?.filter(step => {\r\n      const stepFields = step.fields || [];\r\n      const completedFields = stepFields.filter(field => {\r\n        const value = plantData?.plantInputs?.[field.name] || field.cqsValue || '';\r\n        return value && value.trim() !== '';\r\n      });\r\n      return completedFields.length === stepFields.length;\r\n    }).length || 0;\r\n\r\n    const overallProgress = totalSteps > 0 ? Math.round((completedSteps / totalSteps) * 100) : 0;\r\n\r\n    return (\r\n      <div style={{ padding: '0 4px' }}>\r\n        {/* Hero Stats */}\r\n        <Row gutter={[24, 24]} style={{ marginBottom: 32 }}>\r\n          <Col xs={24} sm={12} lg={6}>\r\n            <Card style={{ \r\n              background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n              border: 'none',\r\n              borderRadius: 16,\r\n              color: 'white',\r\n              textAlign: 'center'\r\n            }}>\r\n              <Statistic\r\n                title={<span style={{ color: 'rgba(255,255,255,0.8)' }}>Overall Progress</span>}\r\n                value={overallProgress}\r\n                suffix=\"%\"\r\n                valueStyle={{ color: 'white', fontSize: 36, fontWeight: 700 }}\r\n                prefix={<RocketOutlined />}\r\n              />\r\n            </Card>\r\n          </Col>\r\n          <Col xs={24} sm={12} lg={6}>\r\n            <Card style={{ \r\n              background: 'linear-gradient(135deg, #f093fb 0%, #f5576c 100%)',\r\n              border: 'none',\r\n              borderRadius: 16,\r\n              color: 'white',\r\n              textAlign: 'center'\r\n            }}>\r\n              <Statistic\r\n                title={<span style={{ color: 'rgba(255,255,255,0.8)' }}>Completed Steps</span>}\r\n                value={completedSteps}\r\n                suffix={`/ ${totalSteps}`}\r\n                valueStyle={{ color: 'white', fontSize: 36, fontWeight: 700 }}\r\n                prefix={<CheckCircleOutlined />}\r\n              />\r\n            </Card>\r\n          </Col>\r\n          <Col xs={24} sm={12} lg={6}>\r\n            <Card style={{ \r\n              background: 'linear-gradient(135deg, #4facfe 0%, #00f2fe 100%)',\r\n              border: 'none',\r\n              borderRadius: 16,\r\n              color: 'white',\r\n              textAlign: 'center'\r\n            }}>\r\n              <Statistic\r\n                title={<span style={{ color: 'rgba(255,255,255,0.8)' }}>Total Fields</span>}\r\n                value={completionStatus?.totalFields || 0}\r\n                valueStyle={{ color: 'white', fontSize: 36, fontWeight: 700 }}\r\n                prefix={<FileTextOutlined />}\r\n              />\r\n            </Card>\r\n          </Col>\r\n          <Col xs={24} sm={12} lg={6}>\r\n            <Card style={{ \r\n              background: 'linear-gradient(135deg, #43e97b 0%, #38f9d7 100%)',\r\n              border: 'none',\r\n              borderRadius: 16,\r\n              color: 'white',\r\n              textAlign: 'center'\r\n            }}>\r\n              <Statistic\r\n                title={<span style={{ color: 'rgba(255,255,255,0.8)' }}>Completed Fields</span>}\r\n                value={completionStatus?.completedFields || 0}\r\n                valueStyle={{ color: 'white', fontSize: 36, fontWeight: 700 }}\r\n                prefix={<StarOutlined />}\r\n              />\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* Progress Timeline */}\r\n        <Card \r\n          title={\r\n            <div style={{ display: 'flex', alignItems: 'center', gap: 12 }}>\r\n              <Avatar style={{ backgroundColor: '#1890ff' }} icon={<BarChartOutlined />} />\r\n              <span>Step Progress Timeline</span>\r\n            </div>\r\n          }\r\n          style={{ borderRadius: 16, marginBottom: 24 }}\r\n        >\r\n          <Timeline mode=\"left\">\r\n            {template?.steps?.map((step, index) => {\r\n              const stepFields = step.fields || [];\r\n              const completedFields = stepFields.filter(field => {\r\n                const value = plantData?.plantInputs?.[field.name] || field.cqsValue || '';\r\n                return value && value.trim() !== '';\r\n              });\r\n              const stepProgress = stepFields.length > 0 ? Math.round((completedFields.length / stepFields.length) * 100) : 0;\r\n              const isCompleted = stepProgress === 100;\r\n              \r\n              return (\r\n                <Timeline.Item\r\n                  key={index}\r\n                  color={isCompleted ? '#52c41a' : stepProgress > 0 ? '#faad14' : '#d9d9d9'}\r\n                  dot={\r\n                    <Avatar \r\n                      size={32}\r\n                      style={{ \r\n                        backgroundColor: isCompleted ? '#52c41a' : stepProgress > 0 ? '#faad14' : '#d9d9d9'\r\n                      }}\r\n                    >\r\n                      {isCompleted ? <CheckOutlined /> : step.stepNumber}\r\n                    </Avatar>\r\n                  }\r\n                >\r\n                  <div style={{ paddingBottom: 16 }}>\r\n                    <Title level={5} style={{ margin: 0, marginBottom: 8 }}>\r\n                      {step.title}\r\n                    </Title>\r\n                    <Text type=\"secondary\" style={{ display: 'block', marginBottom: 12 }}>\r\n                      {step.description}\r\n                    </Text>\r\n                    <div style={{ display: 'flex', alignItems: 'center', gap: 16 }}>\r\n                      <Progress \r\n                        percent={stepProgress} \r\n                        size=\"small\" \r\n                        style={{ flex: 1 }}\r\n                        strokeColor={isCompleted ? '#52c41a' : '#1890ff'}\r\n                      />\r\n                      <Text strong style={{ fontSize: 13 }}>\r\n                        {completedFields.length}/{stepFields.length} fields\r\n                      </Text>\r\n                    </div>\r\n                  </div>\r\n                </Timeline.Item>\r\n              );\r\n            })}\r\n          </Timeline>\r\n        </Card>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const loadQuestionnaireData = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      console.log('Loading questionnaire data for workflowId:', workflowId);\r\n      const response = await apiClient.get(`/questionnaire/${workflowId}`);\r\n      console.log('Questionnaire response:', response);\r\n      setQuestionnaireData(response);\r\n      setError(null);\r\n    } catch (err) {\r\n      console.error('Error loading questionnaire:', err);\r\n      console.error('Error details:', err.response?.data || err.message);\r\n      setError('Failed to load questionnaire data. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [workflowId]);\r\n\r\n  useEffect(() => {\r\n    if (workflowId) {\r\n      loadQuestionnaireData();\r\n    } else {\r\n      setError('No workflow ID provided');\r\n      setLoading(false);\r\n    }\r\n  }, [loadQuestionnaireData, workflowId]);\r\n\r\n  const renderFieldValue = (field, plantInputs, cqsData) => {\r\n    const value = plantInputs[field.name] || field.cqsValue || '';\r\n    const isEmpty = !value || value.trim() === '';\r\n    const isCqsField = field.cqsAutoPopulated;\r\n\r\n    // Format value based on field type\r\n    let displayValue = value;\r\n    if (!isEmpty && field.type === 'radio' && field.options) {\r\n      const option = field.options.find(opt => opt.value === value);\r\n      displayValue = option ? option.label : value;\r\n    } else if (!isEmpty && field.type === 'select' && field.options) {\r\n      const option = field.options.find(opt => opt.value === value);\r\n      displayValue = option ? option.label : value;\r\n    }\r\n\r\n    const getFieldIcon = (type) => {\r\n      switch (type) {\r\n        case 'radio': return <CheckCircleOutlined />;\r\n        case 'select': return <SettingOutlined />;\r\n        case 'text': return <FileTextOutlined />;\r\n        case 'textarea': return <FileTextOutlined />;\r\n        default: return <InfoCircleOutlined />;\r\n      }\r\n    };\r\n\r\n    return (\r\n      <Col xs={24} sm={12} lg={8} key={field.name} style={{ marginBottom: 16 }}>\r\n        <Card \r\n          hoverable\r\n          style={{ \r\n            height: '100%',\r\n            borderRadius: 16,\r\n            border: isEmpty ? '2px dashed #e8e8e8' : isCqsField ? '2px solid #1890ff' : '2px solid #f0f0f0',\r\n            background: isEmpty ? '#fafafa' : isCqsField ? 'linear-gradient(135deg, #e6f7ff 0%, #f0f9ff 100%)' : '#ffffff',\r\n            transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\r\n            position: 'relative',\r\n            overflow: 'hidden'\r\n          }}\r\n          bodyStyle={{ padding: '20px' }}\r\n        >\r\n          {/* Status indicator */}\r\n          <div style={{\r\n            position: 'absolute',\r\n            top: 0,\r\n            right: 0,\r\n            width: 0,\r\n            height: 0,\r\n            borderLeft: '30px solid transparent',\r\n            borderTop: isEmpty ? '30px solid #faad14' : '30px solid #52c41a'\r\n          }} />\r\n          \r\n          {/* Field header */}\r\n          <div style={{ marginBottom: 16, display: 'flex', alignItems: 'flex-start', gap: 12 }}>\r\n            <Avatar \r\n              size={40}\r\n              style={{ \r\n                backgroundColor: isEmpty ? '#faad14' : isCqsField ? '#1890ff' : '#52c41a',\r\n                flexShrink: 0\r\n              }}\r\n              icon={getFieldIcon(field.type)}\r\n            />\r\n            <div style={{ flex: 1, minWidth: 0 }}>\r\n              <Text strong style={{ \r\n                fontSize: 15, \r\n                color: '#262626',\r\n                display: 'block',\r\n                lineHeight: 1.3,\r\n                marginBottom: 4\r\n              }}>\r\n                {field.label}\r\n                {field.required && <Text type=\"danger\" style={{ marginLeft: 4 }}>*</Text>}\r\n              </Text>\r\n              <div style={{ display: 'flex', gap: 6, flexWrap: 'wrap' }}>\r\n                <Tag \r\n                  color={field.type === 'radio' ? 'blue' : field.type === 'select' ? 'purple' : 'green'}\r\n                  style={{ fontSize: 10, padding: '0 6px', borderRadius: 8 }}\r\n                >\r\n                  {field.type.toUpperCase()}\r\n                </Tag>\r\n                {isCqsField && (\r\n                  <Tag color=\"processing\" style={{ fontSize: 10, padding: '0 6px', borderRadius: 8 }}>\r\n                    AUTO\r\n                  </Tag>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Field value */}\r\n          <div style={{\r\n            padding: '16px',\r\n            backgroundColor: isEmpty ? 'rgba(250, 173, 20, 0.1)' : 'rgba(82, 196, 26, 0.1)',\r\n            borderRadius: 12,\r\n            border: isEmpty ? '1px solid rgba(250, 173, 20, 0.3)' : '1px solid rgba(82, 196, 26, 0.3)',\r\n            minHeight: 60,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            textAlign: 'center'\r\n          }}>\r\n            {isEmpty ? (\r\n              <div>\r\n                <ExclamationCircleOutlined style={{ \r\n                  color: '#faad14', \r\n                  fontSize: 20, \r\n                  marginBottom: 8,\r\n                  display: 'block'\r\n                }} />\r\n                <Text type=\"secondary\" style={{ fontSize: 13, fontStyle: 'italic' }}>\r\n                  No data provided\r\n                </Text>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <CheckOutlined style={{ \r\n                  color: '#52c41a', \r\n                  fontSize: 16, \r\n                  marginBottom: 8,\r\n                  display: 'block'\r\n                }} />\r\n                <Text strong style={{ fontSize: 14, color: '#262626' }}>\r\n                  {displayValue}\r\n                </Text>\r\n              </div>\r\n            )}\r\n          </div>\r\n          \r\n          {/* Help text */}\r\n          {field.helpText && (\r\n            <div style={{ \r\n              marginTop: 12, \r\n              padding: '8px 12px', \r\n              backgroundColor: 'rgba(24, 144, 255, 0.05)', \r\n              borderRadius: 8,\r\n              borderLeft: '3px solid #1890ff'\r\n            }}>\r\n              <Text type=\"secondary\" style={{ fontSize: 11, lineHeight: 1.4 }}>\r\n                <BulbOutlined style={{ marginRight: 4, color: '#1890ff' }} />\r\n                {field.helpText}\r\n              </Text>\r\n            </div>\r\n          )}\r\n        </Card>\r\n      </Col>\r\n    );\r\n  };\r\n\r\n  const renderStepDetails = (step, plantInputs, cqsData) => {\r\n    const completedFields = step.fields.filter(field => {\r\n      const value = plantInputs[field.name] || field.cqsValue || '';\r\n      return value && value.trim() !== '';\r\n    }).length;\r\n    \r\n    const completionRate = step.fields.length > 0 ? (completedFields / step.fields.length) * 100 : 0;\r\n    \r\n    return (\r\n      <div key={step.stepNumber} style={{ marginBottom: 32 }}>\r\n        {/* Step Header */}\r\n        <Card \r\n          style={{ \r\n            marginBottom: 24,\r\n            borderRadius: 16,\r\n            background: `linear-gradient(135deg, ${\r\n              completionRate === 100 ? '#52c41a' : completionRate > 0 ? '#faad14' : '#8c8c8c'\r\n            } 0%, ${\r\n              completionRate === 100 ? '#73d13d' : completionRate > 0 ? '#ffc53d' : '#bfbfbf'\r\n            } 100%)`,\r\n            border: 'none',\r\n            color: 'white'\r\n          }}\r\n          bodyStyle={{ padding: '24px 32px' }}\r\n        >\r\n          <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n            <div style={{ display: 'flex', alignItems: 'center', gap: 16 }}>\r\n              <Avatar \r\n                size={48} \r\n                style={{ \r\n                  backgroundColor: 'rgba(255,255,255,0.2)',\r\n                  color: 'white',\r\n                  fontSize: 20,\r\n                  fontWeight: 700\r\n                }}\r\n              >\r\n                {step.stepNumber}\r\n              </Avatar>\r\n              <div>\r\n                <Title level={3} style={{ margin: 0, color: 'white', fontWeight: 600 }}>\r\n                  {step.title}\r\n                </Title>\r\n                <Text style={{ color: 'rgba(255,255,255,0.8)', fontSize: 14 }}>\r\n                  {completedFields} of {step.fields.length} fields completed • {Math.round(completionRate)}% done\r\n                </Text>\r\n              </div>\r\n            </div>\r\n            <div style={{ textAlign: 'right' }}>\r\n              <div style={{ fontSize: 32, fontWeight: 700, marginBottom: 4 }}>\r\n                {Math.round(completionRate)}%\r\n              </div>\r\n              <Progress \r\n                percent={completionRate} \r\n                showInfo={false}\r\n                strokeColor=\"rgba(255,255,255,0.8)\"\r\n                trailColor=\"rgba(255,255,255,0.2)\"\r\n                style={{ width: 120 }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Card>\r\n\r\n        {/* Step Description */}\r\n        {step.description && (\r\n          <Card \r\n            style={{ \r\n              marginBottom: 24,\r\n              borderRadius: 12,\r\n              borderLeft: '4px solid #1890ff',\r\n              backgroundColor: '#f6ffed'\r\n            }}\r\n            bodyStyle={{ padding: '20px 24px' }}\r\n          >\r\n            <div style={{ display: 'flex', alignItems: 'flex-start', gap: 12 }}>\r\n              <InfoCircleOutlined style={{ color: '#1890ff', fontSize: 16, marginTop: 2 }} />\r\n              <Text style={{ fontSize: 14, color: '#595959', lineHeight: 1.6 }}>\r\n                {step.description}\r\n              </Text>\r\n            </div>\r\n          </Card>\r\n        )}\r\n        \r\n        {/* Fields Grid */}\r\n        <Card \r\n          title={\r\n            <div style={{ display: 'flex', alignItems: 'center', gap: 12 }}>\r\n              <Avatar style={{ backgroundColor: '#722ed1' }} icon={<SafetyOutlined />} />\r\n              <span>Field Details</span>\r\n              <Badge count={step.fields.length} style={{ backgroundColor: '#1890ff' }} />\r\n            </div>\r\n          }\r\n          style={{ borderRadius: 16 }}\r\n          bodyStyle={{ padding: '24px' }}\r\n        >\r\n          {step.fields.length > 0 ? (\r\n            <Row gutter={[16, 16]}>\r\n              {step.fields.map(field => renderFieldValue(field, plantInputs, cqsData))}\r\n            </Row>\r\n          ) : (\r\n            <Empty \r\n              description=\"No fields available for this step\"\r\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n            />\r\n          )}\r\n        </Card>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div style={{ textAlign: 'center', padding: '60px 20px' }}>\r\n        <Spin size=\"large\" />\r\n        <div style={{ marginTop: 16 }}>Loading questionnaire data...</div>\r\n        <div style={{ marginTop: 8, color: '#666' }}>Workflow ID: {workflowId}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div style={{ padding: 24 }}>\r\n        <Card>\r\n          <Button \r\n            icon={<ArrowLeftOutlined />} \r\n            onClick={() => onClose ? onClose() : navigate(-1)}\r\n            style={{ marginBottom: 16 }}\r\n          >\r\n            Back\r\n          </Button>\r\n          <Alert\r\n            message=\"Error Loading Questionnaire\"\r\n            description={\r\n              <div>\r\n                <div>{error}</div>\r\n                <div style={{ marginTop: 8, fontSize: '12px', color: '#666' }}>\r\n                  Workflow ID: {workflowId}\r\n                </div>\r\n              </div>\r\n            }\r\n            type=\"error\"\r\n            showIcon\r\n            action={\r\n              <Button size=\"small\" onClick={loadQuestionnaireData}>\r\n                Retry\r\n              </Button>\r\n            }\r\n          />\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!questionnaireData) {\r\n    return (\r\n      <div style={{ padding: 24 }}>\r\n        <Alert\r\n          message=\"No Data Found\"\r\n          description=\"Questionnaire data not found.\"\r\n          type=\"warning\"\r\n          showIcon\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const { template, plantData, workflow, completionStatus, cqsData, accessControl } = questionnaireData;\r\n  const plantInputs = plantData?.plantInputs || {};\r\n  const cqsDataValues = cqsData?.data || {};\r\n\r\n  // Debug logging to see the actual data structure\r\n  console.log('Full questionnaire data:', questionnaireData);\r\n  console.log('Plant data:', plantData);\r\n  console.log('Plant inputs:', plantInputs);\r\n  console.log('Plant inputs keys:', Object.keys(plantInputs));\r\n  console.log('Template steps:', template?.steps);\r\n  \r\n  // Log first few fields to see what field names we're looking for\r\n  if (template?.steps?.[0]?.fields) {\r\n    console.log('First step fields:', template.steps[0].fields.map(f => ({ name: f.name, label: f.label })));\r\n  }\r\n\r\n  return (\r\n    <div style={{ \r\n      background: 'linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%)',\r\n      minHeight: '100vh',\r\n      padding: '16px'\r\n    }}>\r\n      <div style={{ maxWidth: 1400, margin: '0 auto' }}>\r\n        {/* Floating Header */}\r\n        <Affix offsetTop={16}>\r\n          <Card \r\n            style={{ \r\n              marginBottom: 24,\r\n              borderRadius: 20,\r\n              border: 'none',\r\n              boxShadow: '0 12px 40px rgba(0,0,0,0.15)',\r\n              background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n              color: 'white'\r\n            }}\r\n            bodyStyle={{ padding: '20px 32px' }}\r\n          >\r\n            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n              <div style={{ display: 'flex', alignItems: 'center', gap: 20 }}>\r\n                <Button \r\n                  icon={<ArrowLeftOutlined />} \r\n                  onClick={() => onClose ? onClose() : navigate(-1)}\r\n                  style={{ \r\n                    backgroundColor: 'rgba(255,255,255,0.15)',\r\n                    border: '2px solid rgba(255,255,255,0.3)',\r\n                    color: 'white',\r\n                    borderRadius: 12,\r\n                    height: 44,\r\n                    fontWeight: 600\r\n                  }}\r\n                  size=\"large\"\r\n                >\r\n                  Back\r\n                </Button>\r\n                <div>\r\n                  <Title level={2} style={{ margin: 0, color: 'white', fontWeight: 700 }}>\r\n                    🚀 QRMFG Questionnaire Dashboard\r\n                  </Title>\r\n                  <Text style={{ color: 'rgba(255,255,255,0.9)', fontSize: 15 }}>\r\n                    {workflow?.materialName} • {workflow?.plantCode} • Workflow #{workflowId}\r\n                  </Text>\r\n                </div>\r\n              </div>\r\n              <div style={{ display: 'flex', alignItems: 'center', gap: 16 }}>\r\n                <Tag \r\n                  style={{ \r\n                    backgroundColor: 'rgba(255,255,255,0.15)',\r\n                    border: '2px solid rgba(255,255,255,0.3)',\r\n                    color: 'white',\r\n                    borderRadius: 20,\r\n                    padding: '6px 16px',\r\n                    fontSize: 13,\r\n                    fontWeight: 600\r\n                  }}\r\n                >\r\n                  <EyeOutlined /> READ-ONLY\r\n                </Tag>\r\n                <Avatar.Group>\r\n                  <Tooltip title={accessControl?.currentUser}>\r\n                    <Avatar style={{ backgroundColor: '#f56a00' }} icon={<UserOutlined />} />\r\n                  </Tooltip>\r\n                </Avatar.Group>\r\n              </div>\r\n            </div>\r\n          </Card>\r\n        </Affix>\r\n\r\n        {/* Main Content with Tabs */}\r\n        <Card \r\n          style={{ \r\n            borderRadius: 20,\r\n            border: 'none',\r\n            boxShadow: '0 8px 32px rgba(0,0,0,0.1)',\r\n            overflow: 'hidden'\r\n          }}\r\n          bodyStyle={{ padding: 0 }}\r\n        >\r\n          <Tabs \r\n            activeKey={activeView}\r\n            onChange={setActiveView}\r\n            size=\"large\"\r\n            style={{ margin: 0 }}\r\n            tabBarStyle={{ \r\n              margin: 0, \r\n              padding: '0 32px',\r\n              backgroundColor: '#fafbfc',\r\n              borderBottom: '2px solid #f0f0f0'\r\n            }}\r\n          >\r\n            <TabPane \r\n              tab={\r\n                <span style={{ display: 'flex', alignItems: 'center', gap: 8, fontSize: 15, fontWeight: 600 }}>\r\n                  <DashboardOutlined />\r\n                  Overview Dashboard\r\n                </span>\r\n              } \r\n              key=\"overview\"\r\n            >\r\n              <div style={{ padding: '32px' }}>\r\n                {renderOverviewDashboard(questionnaireData)}\r\n              </div>\r\n            </TabPane>\r\n            \r\n            <TabPane \r\n              tab={\r\n                <span style={{ display: 'flex', alignItems: 'center', gap: 8, fontSize: 15, fontWeight: 600 }}>\r\n                  <FileTextOutlined />\r\n                  Detailed Steps\r\n                  <Badge count={template?.steps?.length || 0} style={{ backgroundColor: '#1890ff' }} />\r\n                </span>\r\n              } \r\n              key=\"details\"\r\n            >\r\n              <div style={{ padding: '32px', backgroundColor: '#fafbfc' }}>\r\n                {template?.steps?.length > 0 ? (\r\n                  template.steps.map(step => \r\n                    renderStepDetails(step, plantInputs, cqsDataValues)\r\n                  )\r\n                ) : (\r\n                  <Empty \r\n                    description=\"No questionnaire steps available\"\r\n                    image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n                    style={{ padding: '60px 0' }}\r\n                  />\r\n                )}\r\n              </div>\r\n            </TabPane>\r\n            \r\n            <TabPane \r\n              tab={\r\n                <span style={{ display: 'flex', alignItems: 'center', gap: 8, fontSize: 15, fontWeight: 600 }}>\r\n                  <BarChartOutlined />\r\n                  Analytics\r\n                </span>\r\n              } \r\n              key=\"analytics\"\r\n            >\r\n              <div style={{ padding: '32px' }}>\r\n                <Row gutter={[24, 24]}>\r\n                  <Col span={24}>\r\n                    <Card \r\n                      title={\r\n                        <div style={{ display: 'flex', alignItems: 'center', gap: 12 }}>\r\n                          <Avatar style={{ backgroundColor: '#722ed1' }} icon={<CrownOutlined />} />\r\n                          <span>Completion Analytics</span>\r\n                        </div>\r\n                      }\r\n                      style={{ borderRadius: 16 }}\r\n                    >\r\n                      <Row gutter={[24, 24]}>\r\n                        <Col span={8}>\r\n                          <Statistic\r\n                            title=\"Completion Rate\"\r\n                            value={Math.round(((completionStatus?.completedFields || 0) / (completionStatus?.totalFields || 1)) * 100)}\r\n                            suffix=\"%\"\r\n                            valueStyle={{ color: '#3f8600' }}\r\n                            prefix={<ThunderboltOutlined />}\r\n                          />\r\n                        </Col>\r\n                        <Col span={8}>\r\n                          <Statistic\r\n                            title=\"Fields Remaining\"\r\n                            value={(completionStatus?.totalFields || 0) - (completionStatus?.completedFields || 0)}\r\n                            valueStyle={{ color: '#cf1322' }}\r\n                            prefix={<ClockCircleOutlined />}\r\n                          />\r\n                        </Col>\r\n                        <Col span={8}>\r\n                          <Statistic\r\n                            title=\"Auto-populated Fields\"\r\n                            value={template?.steps?.reduce((acc, step) => \r\n                              acc + (step.fields?.filter(f => f.cqsAutoPopulated)?.length || 0), 0) || 0}\r\n                            valueStyle={{ color: '#1890ff' }}\r\n                            prefix={<RocketOutlined />}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Card>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </TabPane>\r\n          </Tabs>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionnaireViewerPage;"],"names":["Title","Text","Paragraph","Typography","Panel","Collapse","TextArea","Input","TabPane","Tabs","_ref","_template$steps4","_template$steps4$","_template$steps5","_template$steps6","_template$steps7","workflowId","propWorkflowId","onClose","paramWorkflowId","useParams","navigate","useNavigate","loading","setLoading","useState","error","setError","questionnaireData","setQuestionnaireData","activeStep","setActiveStep","activeView","setActiveView","console","log","loadQuestionnaireData","useCallback","async","response","apiClient","get","err","_err$response","data","message","useEffect","renderStepDetails","step","plantInputs","cqsData","completedFields","fields","filter","field","value","name","cqsValue","trim","length","completionRate","_jsxs","style","marginBottom","children","_jsx","Card","borderRadius","background","border","color","bodyStyle","padding","display","alignItems","justifyContent","gap","Avatar","size","backgroundColor","fontSize","fontWeight","stepNumber","level","margin","title","Math","round","textAlign","Progress","percent","showInfo","strokeColor","trailColor","width","description","borderLeft","InfoCircleOutlined","marginTop","lineHeight","icon","SafetyOutlined","Badge","count","Row","gutter","map","renderFieldValue","isEmpty","isCqsField","cqsAutoPopulated","displayValue","type","options","option","find","opt","label","Col","xs","sm","lg","hoverable","height","transition","position","overflow","top","right","borderTop","flexShrink","CheckCircleOutlined","SettingOutlined","FileTextOutlined","getFieldIcon","flex","minWidth","strong","required","marginLeft","flexWrap","Tag","toUpperCase","minHeight","ExclamationCircleOutlined","fontStyle","CheckOutlined","helpText","BulbOutlined","marginRight","Empty","image","PRESENTED_IMAGE_SIMPLE","Spin","Button","ArrowLeftOutlined","onClick","Alert","showIcon","action","template","plantData","workflow","completionStatus","accessControl","Object","keys","steps","f","maxWidth","Affix","offsetTop","boxShadow","materialName","plantCode","EyeOutlined","Group","Tooltip","currentUser","UserOutlined","activeKey","onChange","tabBarStyle","borderBottom","tab","DashboardOutlined","_template$steps","_template$steps2","_template$steps3","totalSteps","completedSteps","stepFields","_plantData$plantInput","overallProgress","Statistic","suffix","valueStyle","prefix","RocketOutlined","totalFields","StarOutlined","BarChartOutlined","Timeline","mode","index","_plantData$plantInput2","stepProgress","isCompleted","Item","dot","paddingBottom","renderOverviewDashboard","span","CrownOutlined","ThunderboltOutlined","ClockCircleOutlined","reduce","acc","_step$fields","_step$fields$filter"],"sourceRoot":""}